<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TextControlBox</name>
    </assembly>
    <members>
        <member name="T:TextControlBoxNS.LineEnding">
            <summary>
            Represents the three default line endings: LF (Line Feed), CRLF (Carriage Return + Line Feed), and CR (Carriage Return).
            </summary>
            <remarks>
            The LineEnding enum represents the different line ending formats that can be used in the textbox.
            The enum defines three values: LF, CRLF, and CR, corresponding to the different line ending formats.
            - LF: Represents the Line Feed character '\n' used for line breaks in Unix-based systems.
            - CRLF: Represents the Carriage Return + Line Feed sequence '\r\n' used for line breaks in Windows-based systems.
            - CR: Represents the Carriage Return character '\r' used for line breaks in older Macintosh systems.
            </remarks>
        </member>
        <member name="F:TextControlBoxNS.LineEnding.LF">
            <summary>
            Line Feed ('\n')
            </summary>
        </member>
        <member name="F:TextControlBoxNS.LineEnding.CRLF">
            <summary>
            Carriage Return + Line Feed ('\r\n')
            </summary>
        </member>
        <member name="F:TextControlBoxNS.LineEnding.CR">
            <summary>
            Carriage Return ('\r')
            </summary>
        </member>
        <member name="T:TextControlBoxNS.SearchResult">
            <summary>
            Represents the result of a search operation in the textbox.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.SearchResult.Found">
            <summary>
            The target text was found during the search operation.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.SearchResult.NotFound">
            <summary>
            The target text was not found during the search operation.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.SearchResult.InvalidInput">
            <summary>
            The search input provided for the search operation was invalid or empty.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.SearchResult.ReachedBegin">
            <summary>
            The search operation reached the beginning of the text without finding the target text.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.SearchResult.ReachedEnd">
            <summary>
            The search operation reached the end of the text without finding the target text.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.SearchResult.SearchNotOpened">
            <summary>
            The search operation was attempted, but the search was not started.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.AutoPairingPair">
            <summary>
            Represents a pair of characters used for auto-pairing in text.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.AutoPairingPair.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AutoPairingPair class with the same value for both the opening and closing characters.
            </summary>
            <param name="value">The character value to be used for both opening and closing.</param>
        </member>
        <member name="M:TextControlBoxNS.AutoPairingPair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AutoPairingPair class with different values for the opening and closing characters.
            </summary>
            <param name="value">The character value to be used as the opening character.</param>
            <param name="pair">The character value to be used as the closing character.</param>
        </member>
        <member name="M:TextControlBoxNS.AutoPairingPair.Matches(System.String)">
            <summary>
            Checks if the provided input contains the opening character of the pair.
            </summary>
            <param name="input">The input string to check for the opening character.</param>
            <returns>True if the input contains the opening character; otherwise, false.</returns>
        </member>
        <member name="P:TextControlBoxNS.AutoPairingPair.Value">
            <summary>
            Gets or sets the character value used for the opening part of the auto-pairing pair.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.AutoPairingPair.Pair">
            <summary>
            Gets or sets the character value used for the closing part of the auto-pairing pair.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.CodeFontStyle">
            <summary>
            Represents the font style settings for a code element in the text.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.CodeFontStyle.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CodeFontStyle class with the specified font style settings.
            </summary>
            <param name="underlined">true if the code element should be displayed with an underline; otherwise, false.</param>
            <param name="italic">true if the code element should be displayed in italic font; otherwise, false.</param>
            <param name="bold">true if the code element should be displayed in bold font; otherwise, false.</param>
        </member>
        <member name="P:TextControlBoxNS.CodeFontStyle.Underlined">
            <summary>
            Gets or sets a value indicating whether the code element should be displayed with an underline.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeFontStyle.Bold">
            <summary>
            Gets or sets a value indicating whether the code element should be displayed in bold font.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeFontStyle.Italic">
            <summary>
            Gets or sets a value indicating whether the code element should be displayed in italic font.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.CodeLanguage">
            <summary>
            Represents a code language configuration used for syntax highlighting and auto-pairing in the text content.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeLanguage.Name">
            <summary>
            Gets or sets the name of the code language.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeLanguage.Description">
            <summary>
            Gets or sets the description of the code language.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeLanguage.Filter">
            <summary>
            Gets or sets an array of file filters for the code language.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeLanguage.Author">
            <summary>
            Gets or sets the author of the code language definition.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeLanguage.Highlights">
            <summary>
            Gets or sets an array of syntax highlights for the code language.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CodeLanguage.AutoPairingPair">
            <summary>
            Gets or sets an array of auto-pairing pairs for the code language.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.CodeLanguageId">
            <summary>
            Represents the unique identifiers for different code languages used for syntax highlighting.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Batch">
            <summary>
            Identifier for Batch code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Cpp">
            <summary>
            Identifier for C++ code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.CSharp">
            <summary>
            Identifier for C# code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.ConfigFile">
            <summary>
            Identifier for configuration file code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.CSS">
            <summary>
            Identifier for CSS code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.CSV">
            <summary>
            Identifier for CSV code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.GCode">
            <summary>
            Identifier for GCode code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.HexFile">
            <summary>
            Identifier for HexFile code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Html">
            <summary>
            Identifier for HTML code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Java">
            <summary>
            Identifier for Java code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Javascript">
            <summary>
            Identifier for JavaScript code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Json">
            <summary>
            Identifier for JSON code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Latex">
            <summary>
            Identifier for LaTeX code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Markdown">
            <summary>
            Identifier for Markdown code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.PHP">
            <summary>
            Identifier for PHP code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.Python">
            <summary>
            Identifier for Python code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.QSharp">
            <summary>
            Identifier for Q# code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.TOML">
            <summary>
            Identifier for TOML code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.XML">
            <summary>
            Identifier for XML code language.
            </summary>
        </member>
        <member name="F:TextControlBoxNS.CodeLanguageId.None">
            <summary>
            Identifier for no code language.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.CursorPosition">
            <summary>
            Represents the position of the cursor in the textbox.
            </summary>
            <remarks>
            The CursorPosition class stores the position of the cursor within the textbox.
            It consists of two properties: CharacterPosition and LineNumber.
            The CharacterPosition property indicates the index of the cursor within the current line (zero-based index).
            The LineNumber property represents the line number on which the cursor is currently positioned (zero-based index).
            </remarks>
        </member>
        <member name="P:TextControlBoxNS.CursorPosition.CharacterPosition">
            <summary>
            Gets the character position of the cursor within the current line.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CursorPosition.LineNumber">
            <summary>
            Gets the line number in which the cursor is currently positioned.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.CursorSize">
            <summary>
            Represents the size of the cursor in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.CursorSize.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the CursorSize class
            </summary>
            <param name="width">The width of the cursor</param>
            <param name="height">The height of the cursor</param>
            <param name="offsetX">The x-offset from the actual cursor position</param>
            <param name="offsetY">The y-offset from the actual cursor position</param>
        </member>
        <member name="P:TextControlBoxNS.CursorSize.Width">
            <summary>
            The width of the cursor
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CursorSize.Height">
            <summary>
            The height of the cursor
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CursorSize.OffsetX">
            <summary>
            The left/right offset from the actual cursor position
            </summary>
        </member>
        <member name="P:TextControlBoxNS.CursorSize.OffsetY">
            <summary>
            The top/bottom offset from the actual cursor position
            </summary>
        </member>
        <member name="T:TextControlBoxNS.JsonLoadResult">
            <summary>
            Represents the result of a JSON load operation for a code language in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.JsonLoadResult.#ctor(System.Boolean,TextControlBoxNS.CodeLanguage)">
            <summary>
            Initializes a new instance of the JsonLoadResult class with the specified loading status and CodeLanguage.
            </summary>
            <param name="succeed">true if the loading operation succeeded; otherwise, false.</param>
            <param name="codeLanguage">The CodeLanguage loaded from the JSON data.</param>
        </member>
        <member name="P:TextControlBoxNS.JsonLoadResult.Succeed">
            <summary>
            Gets or sets a value indicating whether the loading operation succeeded.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.JsonLoadResult.CodeLanguage">
            <summary>
            Gets or sets the CodeLanguage that was loaded from the JSON data.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.ScrollBarPosition">
            <summary>
            Represents the position of a scrollbar, containing the horizontal and vertical scroll positions.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.ScrollBarPosition.#ctor(TextControlBoxNS.ScrollBarPosition)">
            <summary>
            Initializes a new instance of the ScrollBarPosition class with the provided values.
            </summary>
            <param name="scrollBarPosition">The existing ScrollBarPosition object from which to copy the values.</param>
        </member>
        <member name="M:TextControlBoxNS.ScrollBarPosition.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new instance of the ScrollBarPosition class
            </summary>
            <param name="valueX">The horizontal amount scrolled</param>
            <param name="valueY">The vertical amount scrolled</param>
        </member>
        <member name="P:TextControlBoxNS.ScrollBarPosition.ValueX">
            <summary>
            The amount scrolled horizontally
            </summary>
        </member>
        <member name="P:TextControlBoxNS.ScrollBarPosition.ValueY">
            <summary>
            The amount scrolled vertically
            </summary>
        </member>
        <member name="T:TextControlBoxNS.SelectionChangedEventHandler">
            <summary>
            Represents the class that will be returned by the SelectionChanged event of the TextControlBox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SelectionChangedEventHandler.CharacterPositionInLine">
            <summary>
            Represents the position of the cursor within the current line.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SelectionChangedEventHandler.LineNumber">
            <summary>
            Represents the line number where the cursor is currently located.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SelectionChangedEventHandler.SelectionStartIndex">
            <summary>
            Represents the starting index of the selection.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SelectionChangedEventHandler.SelectionLength">
            <summary>
            Represents the length of the selection.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.SyntaxHighlights">
            <summary>
            Represents a syntax highlight definition for a specific pattern in the text.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.SyntaxHighlights.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SyntaxHighlights class with the specified pattern, colors, and font styles.
            </summary>
            <param name="pattern">The pattern to be highlighted in the text content.</param>
            <param name="colorLight">The color representation for the pattern in the light theme (e.g., "#RRGGBB" format).</param>
            <param name="colorDark">The color representation for the pattern in the dark theme (e.g., "#RRGGBB" format).</param>
            <param name="bold">true if the pattern should be displayed in bold font; otherwise, false.</param>
            <param name="italic">true if the pattern should be displayed in italic font; otherwise, false.</param>
            <param name="underlined">true if the pattern should be displayed with an underline; otherwise, false.</param>
        </member>
        <member name="P:TextControlBoxNS.SyntaxHighlights.CodeStyle">
            <summary>
            Gets or sets the font style for the pattern.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SyntaxHighlights.Pattern">
            <summary>
            Gets or sets the pattern to be highlighted in the text content.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SyntaxHighlights.ColorDark_Clr">
            <summary>
            Gets the color representation for the pattern in the dark theme.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SyntaxHighlights.ColorLight_Clr">
            <summary>
            Gets the color representation for the pattern in the light theme.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.SyntaxHighlights.ColorDark">
            <summary>
            Sets the color representation for the pattern in the dark theme.
            </summary>
            <param name="value">The color representation for the pattern in the dark theme (e.g., "#RRGGBB" format).</param>
        </member>
        <member name="P:TextControlBoxNS.SyntaxHighlights.ColorLight">
            <summary>
            Sets the color representation for the pattern in the light theme.
            </summary>
            <param name="value">The color representation for the pattern in the light theme (e.g., "#RRGGBB" format).</param>
        </member>
        <member name="T:TextControlBoxNS.TextControlBoxDesign">
            <summary>
            Represents the design settings for the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBoxDesign.#ctor(TextControlBoxNS.TextControlBoxDesign)">
            <summary>
            Create an instance of the TextControlBoxDesign from a given design
            </summary>
            <param name="design">The design to create a new instance from</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBoxDesign.#ctor(Microsoft.UI.Xaml.Media.Brush,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color,Windows.UI.Color)">
            <summary>
            Create a new instance of the TextControlBoxDesign class
            </summary>
            <param name="background">The background color of the textbox</param>
            <param name="textColor">The color of the text</param>
            <param name="selectionColor">The color of the selection</param>
            <param name="cursorColor">The color of the cursor</param>
            <param name="lineHighlighterColor">The color of the linehighlighter</param>
            <param name="lineNumberColor">The color of the linenumber</param>
            <param name="lineNumberBackground">The background color of the linenumbers</param>
            <param name="searchHighlightColor">The color of the search highlights</param>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.Background">
            <summary>
            Gets or sets the background color of the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.TextColor">
            <summary>
            Gets or sets the text color of the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.SelectionColor">
            <summary>
            Gets or sets the color of the selected text in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.CursorColor">
            <summary>
            Gets or sets the color of the cursor in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.LineHighlighterColor">
            <summary>
            Gets or sets the color of the line highlighter in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.LineNumberColor">
            <summary>
            Gets or sets the color of the line numbers in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.LineNumberBackground">
            <summary>
            Gets or sets the background color of the line numbers in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBoxDesign.SearchHighlightColor">
            <summary>
            Gets or sets the color used to highlight search results in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.Text.Selection.ReplaceLines(Collections.Pooled.PooledList{System.String},System.Int32,System.Int32,System.String[])">
            <summary>
            Replaces the lines in TotalLines, starting by Start replacing Count number of items, with the string in SplittedText
            All lines that can be replaced get replaced all lines that are needed additionally get added
            </summary>
            <param name="totalLines"></param>
            <param name="start"></param>
            <param name="count"></param>
            <param name="splittedText"></param>
        </member>
        <member name="M:TextControlBoxNS.Text.UndoRedo.ClearAll">
            <summary>
            Clears all the items in the undo and redo stack
            </summary>
        </member>
        <member name="P:TextControlBoxNS.Text.UndoRedo.CanUndo">
            <summary>
            Gets if the undo stack contains actions
            </summary>
        </member>
        <member name="P:TextControlBoxNS.Text.UndoRedo.CanRedo">
            <summary>
            Gets if the redo stack contains actions
            </summary>
        </member>
        <member name="T:TextControlBoxNS.TextSelectionPosition">
            <summary>
            Represents the position and length of a text selection in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextSelectionPosition.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TextSelectionPosition class with the specified index and length.
            </summary>
            <param name="index">The start index of the text selection.</param>
            <param name="length">The length of the text selection.</param>
        </member>
        <member name="P:TextControlBoxNS.TextSelectionPosition.Index">
            <summary>
            Gets or sets the start index of the text selection.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextSelectionPosition.Length">
            <summary>
            Gets or sets the length of the text selection.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.#ctor">
            <summary>
            Initializes a new instance of the TextControlBox class.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SelectLine(System.Int32)">
            <summary>
            Selects the entire line specified by its index.
            </summary>
            <param name="line">The index of the line to select.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GoToLine(System.Int32)">
            <summary>
            Moves the cursor to the beginning of the specified line by its index.
            </summary>
            <param name="line">The index of the line to navigate to.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.LoadText(System.String)">
            <summary>
            Loads the specified text into the textbox, resetting all text and undo history.
            </summary>
            <param name="text">The text to load into the textbox.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SetText(System.String)">
            <summary>
            Sets the text content of the textbox, recording an undo action.
            </summary>
            <param name="text">The new text content to set in the textbox.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.LoadLines(System.Collections.Generic.IEnumerable{System.String},TextControlBoxNS.LineEnding)">
            <summary>
            Loads the specified lines into the textbox, resetting all content and undo history.
            </summary>
            <param name="lines">An enumerable containing the lines to load into the textbox.</param>
            <param name="lineEnding">The line ending format used in the loaded lines (default is CRLF).</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Paste">
            <summary>
            Pastes the contents of the clipboard at the current cursor position.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Copy">
            <summary>
            Copies the currently selected text to the clipboard.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Cut">
            <summary>
            Cuts the currently selected text and copies it to the clipboard.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetText">
            <summary>
            Gets the entire text content of the textbox.
            </summary>
            <returns>The complete text content of the textbox as a string.</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SetSelection(System.Int32,System.Int32)">
            <summary>
            Sets the text selection in the textbox starting from the specified index and with the given length.
            </summary>
            <param name="start">The index of the first character of the selection.</param>
            <param name="length">The length of the selection in number of characters.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SelectAll">
            <summary>
            Selects all the text in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ClearSelection">
            <summary>
            Clears the current text selection in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Undo">
            <summary>
            Undoes the last action in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Redo">
            <summary>
            Redoes the last undone action in the textbox.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollLineToCenter(System.Int32)">
            <summary>
            Scrolls the specified line to the center of the textbox if it is out of the rendered region.
            </summary>
            <param name="line">The index of the line to center.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollOneLineUp">
            <summary>
            Scrolls the text one line up.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollOneLineDown">
            <summary>
            Scrolls the text one line down.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollLineIntoView(System.Int32)">
            <summary>
            Forces the specified line to be scrolled into view, centering it vertically within the textbox.
            </summary>
            <param name="line">The index of the line to center.</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollTopIntoView">
            <summary>
            Scrolls the first line of the visible text into view.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollBottomIntoView">
            <summary>
            Scrolls the last visible line of the visible text into view.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollPageUp">
            <summary>
            Scrolls one page up, simulating the behavior of the page up key.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ScrollPageDown">
            <summary>
            Scrolls one page down, simulating the behavior of the page down key.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetLineText(System.Int32)">
            <summary>
            Gets the content of the line specified by the index
            </summary>
            <param name="line">The index to get the content from</param>
            <returns>The text from the line specified by the index</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetLinesText(System.Int32,System.Int32)">
            <summary>
            Gets the text of multiple lines, starting from the specified line index.
            </summary>
            <param name="startLine">The index of the line to start with.</param>
            <param name="length">The number of lines to retrieve.</param>
            <returns>The concatenated text from the specified lines.</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SetLineText(System.Int32,System.String)">
            <summary>
            Sets the content of the line specified by the index. The first line has the index 0.
            </summary>
            <param name="line">The index of the line to change the content.</param>
            <param name="text">The text to set for the specified line.</param>
            <returns>Returns true if the text was changed successfully, and false if the index was out of range.</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.DeleteLine(System.Int32)">
            <summary>
            Deletes the line from the textbox
            </summary>
            <param name="line">The line to delete</param>
            <returns>Returns true if the line was deleted successfully and false if not</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.AddLine(System.Int32,System.String)">
            <summary>
            Adds a new line with the text specified
            </summary>
            <param name="line">The position to insert the line to</param>
            <param name="text">The text to put in the new line</param>
            <returns>Returns true if the line was added successfully and false if not</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SurroundSelectionWith(System.String)">
            <summary>
            Surrounds the selection with the text specified by the text
            </summary>
            <param name="text">The text to surround the selection with</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SurroundSelectionWith(System.String,System.String)">
            <summary>
            Surround the selection with individual text for the left and right side.
            </summary>
            <param name="text1">The text for the left side</param>
            <param name="text2">The text for the right side</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.DuplicateLine(System.Int32)">
            <summary>
            Duplicates the line specified by the index into the next line
            </summary>
            <param name="line">The index of the line to duplicate</param>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.DuplicateLine">
            <summary>
            Duplicates the line at the current cursor position
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ReplaceAll(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces all occurences in the text with another word
            </summary>
            <param name="word">The word to search for</param>
            <param name="replaceWord">The word to replace with</param>
            <param name="matchCase">Search with case sensitivity</param>
            <param name="wholeWord">Search for whole words</param>
            <returns>Found when everything was replaced and not found when nothing was replaced</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.FindNext">
            <summary>
            Searches for the next occurence. Call this after BeginSearch
            </summary>
            <returns>SearchResult.Found if the word was found</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.FindPrevious">
            <summary>
            Searches for the previous occurence. Call this after BeginSearch
            </summary>
            <returns>SearchResult.Found if the word was found</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.BeginSearch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Begins a search for the specified word in the textbox content.
            </summary>
            <param name="word">The word to search for in the textbox.</param>
            <param name="wholeWord">A flag indicating whether to perform a whole-word search.</param>
            <param name="matchCase">A flag indicating whether the search should be case-sensitive.</param>
            <returns>A SearchResult enum representing the result of the search.</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.EndSearch">
            <summary>
            Ends the search and removes the highlights
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Unload">
            <summary>
            Unloads the textbox and releases all resources.
            Do not use the textbox afterwards.
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.ClearUndoRedoHistory">
            <summary>
            Clears the undo and redo history of the textbox.
            </summary>
            <remarks>
            The ClearUndoRedoHistory method removes all the stored undo and redo actions, effectively resetting the history of the textbox.
            </remarks>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetCursorPosition">
            <summary>
            Gets the current cursor position in the textbox.
            </summary>
            <returns>The current cursor position represented by a Point object (X, Y).</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.SelectCodeLanguage(TextControlBoxNS.CodeLanguageId)">
            <summary>
            Selects the CodeLanguage based on the specified identifier.
            </summary>
            <param name="languageId">The identifier of the CodeLanguage to select.</param>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.SyntaxHighlighting">
            <summary>
            Gets or sets a value indicating whether syntax highlighting is enabled in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CodeLanguage">
            <summary>
            Gets or sets the code language to use for the syntaxhighlighting and autopairing.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.LineEnding">
            <summary>
            Gets or sets the line ending style used in the textbox.
            </summary>
            <remarks>
            The LineEnding property represents the line ending style for the text.
            Possible values are LineEnding.CRLF (Carriage Return + Line Feed), LineEnding.LF (Line Feed), or LineEnding.CR (Carriage Return).
            </remarks>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.SpaceBetweenLineNumberAndText">
            <summary>
            Gets or sets the space between the line number and the text in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CursorPosition">
            <summary>
            Gets or sets the current cursor position in the textbox.
            </summary>
            <remarks>
            The cursor position is represented by a <see cref="P:TextControlBoxNS.TextControlBox.CursorPosition"/> object, which includes the character position within the text and the line number.
            </remarks>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.FontFamily">
            <summary>
            Gets or sets the font family used for displaying text in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.FontSize">
            <summary>
            Gets or sets the font size used for displaying text in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.RenderedFontSize">
            <summary>
            Gets the actual rendered size of the font in pixels.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.Text">
            <summary>
            Gets or sets the text displayed in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.RequestedTheme">
            <summary>
            Gets or sets the requested theme for the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.Design">
            <summary>
            Gets or sets the custom design for the textbox.
            </summary>
            <remarks>
            Settings this null will use the default design
            </remarks>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.ShowLineNumbers">
            <summary>
            Gets or sets a value indicating whether line numbers should be displayed in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.ShowLineHighlighter">
            <summary>
            Gets or sets a value indicating whether the line highlighter should be shown in the custom textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.ZoomFactor">
            <summary>
            Gets or sets the zoom factor in percent for the text.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.IsReadonly">
            <summary>
            Gets or sets a value indicating whether the textbox is in readonly mode.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CursorSize">
            <summary>
            Gets or sets the size of the cursor in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.ContextFlyout">
            <summary>
            Gets or sets the context menu flyout associated with the textbox.
            </summary>
            <remarks>
            Setting the value to null will show the default flyout.
            </remarks>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.ContextFlyoutDisabled">
            <summary>
            Gets or sets a value indicating whether the context flyout is disabled for the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.SelectionStart">
            <summary>
            Gets or sets the starting index of the selected text in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.SelectionLength">
            <summary>
            Gets or sets the length of the selected text in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.SelectedText">
            <summary>
            Gets or sets the text that is currently selected in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.NumberOfLines">
            <summary>
            Gets the number of lines in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CurrentLineIndex">
            <summary>
            Gets the index of the current line where the cursor is positioned in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.ScrollBarPosition">
            <summary>
            Gets or sets the position of the scrollbars in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CharacterCount">
            <summary>
            Gets the total number of characters in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.VerticalScrollSensitivity">
            <summary>
            Gets or sets the sensitivity of vertical scrolling in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.HorizontalScrollSensitivity">
            <summary>
            Gets or sets the sensitivity of horizontal scrolling in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.VerticalScroll">
            <summary>
            Gets or sets the vertical scroll position in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.HorizontalScroll">
            <summary>
            Gets or sets the horizontal scroll position in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CornerRadius">
            <summary>
            Gets or sets the corner radius for the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.UseSpacesInsteadTabs">
            <summary>
            Gets or sets a value indicating whether to use spaces instead of tabs for indentation in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.NumberOfSpacesForTab">
            <summary>
            Gets or sets the number of spaces used for a single tab in the textbox.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.SearchIsOpen">
            <summary>
            Gets whether the search is currently active
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.Lines">
            <summary>
            Gets an enumerable collection of all the lines in the textbox.
            </summary>
            <remarks>
            Use this property to access all the lines of text in the textbox. You can use this collection to save the lines to a file using functions like FileIO.WriteLinesAsync.
            Utilizing this property for saving will significantly improve RAM usage during the saving process.
            </remarks>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.DoAutoPairing">
            <summary>
            Gets or sets a value indicating whether auto-pairing is enabled.
            </summary>
            <remarks>
            Auto-pairing automatically pairs opening and closing symbols, such as brackets or quotation marks.
            </remarks>
        </member>
        <member name="T:TextControlBoxNS.TextControlBox.TextChangedEvent">
            <summary>
            Represents a delegate used for handling the text changed event in the TextControlBox.
            </summary>
            <param name="sender">The instance of the TextControlBox that raised the event.</param>
        </member>
        <member name="E:TextControlBoxNS.TextControlBox.TextChanged">
            <summary>
            Occurs when the text is changed in the TextControlBox.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.TextControlBox.SelectionChangedEvent">
            <summary>
            Represents a delegate used for handling the selection changed event in the TextControlBox.
            </summary>
            <param name="sender">The instance of the TextControlBox that raised the event.</param>
            <param name="args">The event arguments providing information about the selection change.</param>
        </member>
        <member name="E:TextControlBoxNS.TextControlBox.SelectionChanged">
            <summary>
            Occurs when the selection is changed in the TextControlBox.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.TextControlBox.ZoomChangedEvent">
            <summary>
            Represents a delegate used for handling the zoom changed event in the TextControlBox.
            </summary>
            <param name="sender">The instance of the TextControlBox that raised the event.</param>
            <param name="zoomFactor">The new zoom factor value indicating the scale of the content.</param>
        </member>
        <member name="E:TextControlBoxNS.TextControlBox.ZoomChanged">
            <summary>
            Occurs when the zoom factor is changed in the TextControlBox.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.TextControlBox.GotFocusEvent">
            <summary>
            Represents a delegate used for handling the got focus event in the TextControlBox.
            </summary>
            <param name="sender">The instance of the TextControlBox that received focus.</param>
        </member>
        <member name="E:TextControlBoxNS.TextControlBox.GotFocus">
            <summary>
            Occurs when the TextControlBox receives focus.
            </summary>
        </member>
        <member name="T:TextControlBoxNS.TextControlBox.LostFocusEvent">
            <summary>
            Represents a delegate used for handling the lost focus event in the TextControlBox.
            </summary>
            <param name="sender">The instance of the TextControlBox that lost focus.</param>
        </member>
        <member name="E:TextControlBoxNS.TextControlBox.LostFocus">
            <summary>
            Occurs when the TextControlBox loses focus.
            </summary>
        </member>
        <member name="P:TextControlBoxNS.TextControlBox.CodeLanguages">
            <summary>
            Gets a dictionary containing the CodeLanguages indexed by their respective identifiers.
            </summary>
            <remarks>
            The CodeLanguage dictionary provides a collection of predefined CodeLanguage objects, where each object is associated with a unique identifier (language name).
            The dictionary is case-insensitive, and it allows quick access to the CodeLanguage objects based on their identifier.
            </remarks>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetCodeLanguageFromId(TextControlBoxNS.CodeLanguageId)">
            <summary>
            Retrieves a CodeLanguage object based on the specified identifier.
            </summary>
            <param name="languageId">The identifier of the CodeLanguage to retrieve.</param>
            <returns>The CodeLanguage object corresponding to the provided identifier, or null if not found.</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetCodeLanguageFromJson(System.String)">
            <summary>
            Retrieves a CodeLanguage object from a JSON representation.
            </summary>
            <param name="Json">The JSON string representing the CodeLanguage object.</param>
            <returns>The deserialized CodeLanguage object obtained from the provided JSON, or null if the JSON is invalid or does not represent a valid CodeLanguage.</returns>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:TextControlBoxNS.TextControlBox_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:TextControlBoxNS.TextControlBox_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
