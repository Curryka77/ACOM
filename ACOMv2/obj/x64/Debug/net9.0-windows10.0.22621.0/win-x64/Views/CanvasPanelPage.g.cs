#pragma checksum "C:\Users\80520\source\repos\ACOM\ACOMv2\Views\CanvasPanelPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "3D0EBF3CF12EE6B6E6FAE462502CE12864B17C60B0CB396B6881836CD926D6B5"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACOMv2.Views
{
    partial class CanvasPanelPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_CommunityToolkit_WinUI_Controls_ContentSizer_TargetControl(global::CommunityToolkit.WinUI.Controls.ContentSizer obj, global::Microsoft.UI.Xaml.FrameworkElement value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.FrameworkElement) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.FrameworkElement), targetNullValue);
                }
                obj.TargetControl = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class CanvasPanelPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ICanvasPanelPage_Bindings
        {
            private global::ACOMv2.Views.CanvasPanelPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::WinUICommunity.GooeyButton obj3;
            private global::CommunityToolkit.WinUI.Controls.ContentSizer obj9;
            private global::CommunityToolkit.WinUI.Controls.ContentSizer obj10;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj9TargetControlDisabled = false;
            private static bool isobj10TargetControlDisabled = false;

            public CanvasPanelPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 162 && columnNumber == 21)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 138 && columnNumber == 29)
                {
                    isobj9TargetControlDisabled = true;
                }
                else if (lineNumber == 145 && columnNumber == 29)
                {
                    isobj10TargetControlDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\CanvasPanelPage.xaml line 156
                        this.obj3 = global::WinRT.CastExtensions.As<global::WinUICommunity.GooeyButton>(target);
                        break;
                    case 9: // Views\CanvasPanelPage.xaml line 133
                        this.obj9 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Controls.ContentSizer>(target);
                        break;
                    case 10: // Views\CanvasPanelPage.xaml line 141
                        this.obj10 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Controls.ContentSizer>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICanvasPanelPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ACOMv2.Views.CanvasPanelPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ACOMv2.Views.CanvasPanelPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_strings(obj.strings, phase);
                        this.Update_TestGrid(obj.TestGrid, phase);
                    }
                }
            }
            private void Update_strings(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Controls.Symbol> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CanvasPanelPage.xaml line 156
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update_TestGrid(global::Microsoft.UI.Xaml.Controls.Grid obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CanvasPanelPage.xaml line 133
                    if (!isobj9TargetControlDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_Controls_ContentSizer_TargetControl(this.obj9, obj, null);
                    }
                    // Views\CanvasPanelPage.xaml line 141
                    if (!isobj10TargetControlDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_Controls_ContentSizer_TargetControl(this.obj10, obj, null);
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CanvasPanelPage.xaml line 32
                {
                    this.PartsCommandBarFlyout = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                }
                break;
            case 3: // Views\CanvasPanelPage.xaml line 156
                {
                    this.gooeyButton = global::WinRT.CastExtensions.As<global::WinUICommunity.GooeyButton>(target);
                    ((global::WinUICommunity.GooeyButton)this.gooeyButton).Invoked += this.gooeyButton_Invoked;
                    ((global::WinUICommunity.GooeyButton)this.gooeyButton).ItemInvoked += this.gooeyButton_ItemInvoked;
                }
                break;
            case 5: // Views\CanvasPanelPage.xaml line 59
                {
                    this.CanvasView1 = global::WinRT.CastExtensions.As<global::CommunityToolkit.Labs.WinUI.CanvasView>(target);
                }
                break;
            case 6: // Views\CanvasPanelPage.xaml line 151
                {
                    this.ttt = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 7: // Views\CanvasPanelPage.xaml line 61
                {
                    this.Test_Border = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Border)this.Test_Border).ManipulationDelta += this.Border_ManipulationDelta;
                }
                break;
            case 8: // Views\CanvasPanelPage.xaml line 65
                {
                    this.TestGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 9: // Views\CanvasPanelPage.xaml line 133
                {
                    global::CommunityToolkit.WinUI.Controls.ContentSizer element9 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Controls.ContentSizer>(target);
                    ((global::CommunityToolkit.WinUI.Controls.ContentSizer)element9).ManipulationDelta += this.ContentSizer_ManipulationDelta;
                }
                break;
            case 10: // Views\CanvasPanelPage.xaml line 141
                {
                    global::CommunityToolkit.WinUI.Controls.ContentSizer element10 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Controls.ContentSizer>(target);
                    ((global::CommunityToolkit.WinUI.Controls.ContentSizer)element10).ManipulationDelta += this.ContentSizer_ManipulationDelta;
                }
                break;
            case 11: // Views\CanvasPanelPage.xaml line 90
                {
                    this.rangeSelector = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Controls.RangeSelector>(target);
                    ((global::CommunityToolkit.WinUI.Controls.RangeSelector)this.rangeSelector).ManipulationDelta += this.ContentSizer_ManipulationDelta;
                }
                break;
            case 12: // Views\CanvasPanelPage.xaml line 110
                {
                    this.RadialGauge = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Controls.RadialGauge>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CanvasPanelPage.xaml line 20
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    CanvasPanelPage_obj1_Bindings bindings = new CanvasPanelPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

