//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace ACOMv2
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        private global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace ACOMv2.ACOMv2_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[241];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Double";
            _typeNameTable[7] = "CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid";
            _typeNameTable[8] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[9] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[10] = "CommunityToolkit.Labs.WinUI.CanvasView";
            _typeNameTable[11] = "Microsoft.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[12] = "Microsoft.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[13] = "CommunityToolkit.WinUI.Controls.ContentSizer";
            _typeNameTable[14] = "CommunityToolkit.WinUI.Controls.SizerBase";
            _typeNameTable[15] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[16] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[17] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[18] = "Microsoft.UI.Input.InputSystemCursorShape";
            _typeNameTable[19] = "System.Enum";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.RadioButtons";
            _typeNameTable[21] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[22] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[23] = "Int32";
            _typeNameTable[24] = "CommunityToolkit.WinUI.Controls.RangeSelector";
            _typeNameTable[25] = "WinUICommunity.WaveProgressBar";
            _typeNameTable[26] = "String";
            _typeNameTable[27] = "WinUICommunity.ProgressRing";
            _typeNameTable[28] = "WinUICommunity.ProgressRing.TemplateSettingValues";
            _typeNameTable[29] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[30] = "CommunityToolkit.WinUI.Controls.RadialGauge";
            _typeNameTable[31] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[32] = "ACOMv2.Views.CanvasPanelPage";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.CommandBarFlyout";
            _typeNameTable[36] = "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase";
            _typeNameTable[37] = "Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.ICommandBarElement";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Controls.Expander";
            _typeNameTable[40] = "Microsoft.UI.Xaml.Controls.ExpandDirection";
            _typeNameTable[41] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings";
            _typeNameTable[43] = "WinUICommunity.AutoScrollView";
            _typeNameTable[44] = "WinUICommunity.RedirectVisualView";
            _typeNameTable[45] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[46] = "WinUICommunity.Divider";
            _typeNameTable[47] = "Microsoft.UI.Xaml.Media.DoubleCollection";
            _typeNameTable[48] = "Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Controls.MenuFlyoutItem";
            _typeNameTable[50] = "Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Controls.ColorPicker";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.ColorSpectrumShape";
            _typeNameTable[53] = "Windows.UI.Color";
            _typeNameTable[54] = "Microsoft.UI.Xaml.Controls.ColorSpectrumComponents";
            _typeNameTable[55] = "System.Nullable`1<Windows.UI.Color>";
            _typeNameTable[56] = "WinUICommunity.AllLandingPage";
            _typeNameTable[57] = "WinUICommunity.ItemsPageBase";
            _typeNameTable[58] = "WinUICommunity.IJsonNavigationViewService";
            _typeNameTable[59] = "System.Collections.Generic.IEnumerable`1<WinUICommunity.DataItem>";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Media.ImageSource";
            _typeNameTable[61] = "Microsoft.UI.Xaml.GridLength";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Media.Stretch";
            _typeNameTable[63] = "Microsoft.UI.Xaml.VerticalAlignment";
            _typeNameTable[64] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[65] = "CommunityToolkit.WinUI.Controls.GridSplitter";
            _typeNameTable[66] = "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection";
            _typeNameTable[67] = "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior";
            _typeNameTable[68] = "CommunityToolkit.WinUI.Controls.TabbedCommandBar";
            _typeNameTable[69] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[70] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[71] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[72] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[73] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[74] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[75] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[76] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[77] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[78] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[79] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[80] = "TextControlBoxNS.TextControlBox";
            _typeNameTable[81] = "TextControlBoxNS.CodeLanguage";
            _typeNameTable[82] = "TextControlBoxNS.LineEnding";
            _typeNameTable[83] = "Single";
            _typeNameTable[84] = "TextControlBoxNS.CursorPosition";
            _typeNameTable[85] = "Microsoft.UI.Xaml.Media.FontFamily";
            _typeNameTable[86] = "Microsoft.UI.Xaml.ElementTheme";
            _typeNameTable[87] = "TextControlBoxNS.TextControlBoxDesign";
            _typeNameTable[88] = "TextControlBoxNS.CursorSize";
            _typeNameTable[89] = "Microsoft.UI.Xaml.Controls.MenuFlyout";
            _typeNameTable[90] = "TextControlBoxNS.ScrollBarPosition";
            _typeNameTable[91] = "System.Collections.Generic.IEnumerable`1<String>";
            _typeNameTable[92] = "Microsoft.UI.Xaml.Controls.TabView";
            _typeNameTable[93] = "System.Windows.Input.ICommand";
            _typeNameTable[94] = "Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode";
            _typeNameTable[95] = "Microsoft.UI.Xaml.Controls.TabViewWidthMode";
            _typeNameTable[96] = "CommunityToolkit.WinUI.FontIconExtension";
            _typeNameTable[97] = "CommunityToolkit.WinUI.TextIconExtension";
            _typeNameTable[98] = "Microsoft.UI.Xaml.Markup.MarkupExtension";
            _typeNameTable[99] = "Windows.UI.Text.FontWeight";
            _typeNameTable[100] = "Windows.UI.Text.FontStyle";
            _typeNameTable[101] = "CommunityToolkit.WinUI.Controls.TabbedCommandBarItem";
            _typeNameTable[102] = "Microsoft.UI.Xaml.Controls.CommandBar";
            _typeNameTable[103] = "Microsoft.UI.Xaml.HorizontalAlignment";
            _typeNameTable[104] = "Microsoft.UI.Xaml.Controls.SplitButton";
            _typeNameTable[105] = "Syncfusion.UI.Xaml.Charts.SfCartesianChart";
            _typeNameTable[106] = "Syncfusion.UI.Xaml.Charts.ChartBase";
            _typeNameTable[107] = "Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection";
            _typeNameTable[108] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>";
            _typeNameTable[109] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>";
            _typeNameTable[110] = "Syncfusion.UI.Xaml.Charts.CartesianSeries";
            _typeNameTable[111] = "Syncfusion.UI.Xaml.Charts.ChartSeries";
            _typeNameTable[112] = "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings";
            _typeNameTable[113] = "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings";
            _typeNameTable[114] = "Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior";
            _typeNameTable[115] = "Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior";
            _typeNameTable[116] = "Syncfusion.UI.Xaml.Charts.ChartBehavior";
            _typeNameTable[117] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>";
            _typeNameTable[118] = "Syncfusion.UI.Xaml.Charts.ChartLegendIcon";
            _typeNameTable[119] = "TimeSpan";
            _typeNameTable[120] = "Syncfusion.UI.Xaml.Charts.ChartAxis";
            _typeNameTable[121] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[122] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[123] = "Syncfusion.UI.Xaml.Charts.LabelStyle";
            _typeNameTable[124] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode";
            _typeNameTable[125] = "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction";
            _typeNameTable[126] = "Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode";
            _typeNameTable[127] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>";
            _typeNameTable[128] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>";
            _typeNameTable[129] = "Syncfusion.UI.Xaml.Charts.RangeAxisBase";
            _typeNameTable[130] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode";
            _typeNameTable[131] = "Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior";
            _typeNameTable[132] = "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior";
            _typeNameTable[133] = "Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior";
            _typeNameTable[134] = "Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior";
            _typeNameTable[135] = "Syncfusion.UI.Xaml.Charts.ChartLegend";
            _typeNameTable[136] = "Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior";
            _typeNameTable[137] = "Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior";
            _typeNameTable[138] = "Windows.Foundation.Rect";
            _typeNameTable[139] = "Syncfusion.UI.Xaml.Charts.CategoryAxis";
            _typeNameTable[140] = "Syncfusion.UI.Xaml.Charts.LabelPlacement";
            _typeNameTable[141] = "Syncfusion.UI.Xaml.Charts.NumericalAxis";
            _typeNameTable[142] = "Syncfusion.UI.Xaml.Charts.NumericalPadding";
            _typeNameTable[143] = "Syncfusion.UI.Xaml.Charts.ColumnSeries";
            _typeNameTable[144] = "Syncfusion.UI.Xaml.Charts.XyDataSeries";
            _typeNameTable[145] = "ACOMv2.Views.HomeLandingPage";
            _typeNameTable[146] = "ACOMv2.ViewModels.HomeLandingViewModel";
            _typeNameTable[147] = "CommunityToolkit.Mvvm.ComponentModel.ObservableObject";
            _typeNameTable[148] = "WinUICommunity.TitleBar";
            _typeNameTable[149] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[150] = "WinUICommunity.TitleBarTemplateSettings";
            _typeNameTable[151] = "WinUICommunity.BreadcrumbNavigator";
            _typeNameTable[152] = "Microsoft.UI.Xaml.Controls.BreadcrumbBar";
            _typeNameTable[153] = "System.Collections.ObjectModel.ObservableCollection`1<WinUICommunity.NavigationBreadcrumb>";
            _typeNameTable[154] = "System.Collections.ObjectModel.Collection`1<WinUICommunity.NavigationBreadcrumb>";
            _typeNameTable[155] = "WinUICommunity.NavigationBreadcrumb";
            _typeNameTable[156] = "System.Type";
            _typeNameTable[157] = "System.Reflection.MemberInfo";
            _typeNameTable[158] = "Microsoft.UI.Xaml.Controls.Frame";
            _typeNameTable[159] = "System.Collections.Generic.Dictionary`2<System.Type, WinUICommunity.BreadcrumbPageConfig>";
            _typeNameTable[160] = "WinUICommunity.BreadcrumbPageConfig";
            _typeNameTable[161] = "System.Reflection.Assembly";
            _typeNameTable[162] = "System.Reflection.TypeAttributes";
            _typeNameTable[163] = "System.Reflection.MethodBase";
            _typeNameTable[164] = "System.Reflection.GenericParameterAttributes";
            _typeNameTable[165] = "System.Type[]";
            _typeNameTable[166] = "System.Array";
            _typeNameTable[167] = "Guid";
            _typeNameTable[168] = "System.Reflection.MemberTypes";
            _typeNameTable[169] = "System.Reflection.Module";
            _typeNameTable[170] = "System.Runtime.InteropServices.StructLayoutAttribute";
            _typeNameTable[171] = "System.Attribute";
            _typeNameTable[172] = "System.RuntimeTypeHandle";
            _typeNameTable[173] = "System.Reflection.ConstructorInfo";
            _typeNameTable[174] = "System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData>";
            _typeNameTable[175] = "WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions";
            _typeNameTable[176] = "CommunityToolkit.WinUI.Controls.PropertySizer";
            _typeNameTable[177] = "WinUICommunity.BitmapIconSourceExtension";
            _typeNameTable[178] = "System.Uri";
            _typeNameTable[179] = "WinUICommunity.FontIconExtension";
            _typeNameTable[180] = "WinUICommunity.TextIconExtension";
            _typeNameTable[181] = "WinUICommunity.GlyphCode";
            _typeNameTable[182] = "WinUICommunity.GlyphName";
            _typeNameTable[183] = "ACOMv2.Views.MainPage";
            _typeNameTable[184] = "ACOMv2.ViewModels.MainViewModel";
            _typeNameTable[185] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[186] = "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility";
            _typeNameTable[187] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[188] = "Microsoft.UI.Xaml.Controls.ScrollingScrollMode";
            _typeNameTable[189] = "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation";
            _typeNameTable[190] = "Microsoft.UI.Composition.CompositionPropertySet";
            _typeNameTable[191] = "Microsoft.UI.Composition.CompositionObject";
            _typeNameTable[192] = "Microsoft.UI.Xaml.Controls.ScrollingChainMode";
            _typeNameTable[193] = "Microsoft.UI.Xaml.Controls.ScrollingRailMode";
            _typeNameTable[194] = "Microsoft.UI.Xaml.Controls.ScrollingInputKinds";
            _typeNameTable[195] = "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter";
            _typeNameTable[196] = "Microsoft.UI.Xaml.Controls.ScrollingInteractionState";
            _typeNameTable[197] = "Microsoft.UI.Xaml.Controls.ScrollingZoomMode";
            _typeNameTable[198] = "WinUICommunity.PanelAttach";
            _typeNameTable[199] = "WinUICommunity.PanelTransitionCollection";
            _typeNameTable[200] = "WinUICommunity.SettingsNavigationAttach";
            _typeNameTable[201] = "Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo";
            _typeNameTable[202] = "WinUICommunity.SettingsCard";
            _typeNameTable[203] = "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[204] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[205] = "WinUICommunity.ContentAlignment";
            _typeNameTable[206] = "WinUICommunity.NavigationHelperEx";
            _typeNameTable[207] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[208] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[209] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[210] = "ACOMv2.Views.GeneralSettingPage";
            _typeNameTable[211] = "ACOMv2.ViewModels.GeneralSettingViewModel";
            _typeNameTable[212] = "ACOMv2.Views.ThemeSettingPage";
            _typeNameTable[213] = "ACOMv2.Views.AppUpdateSettingPage";
            _typeNameTable[214] = "ACOMv2.ViewModels.AppUpdateSettingViewModel";
            _typeNameTable[215] = "ACOMv2.Views.AboutUsSettingPage";
            _typeNameTable[216] = "ACOMv2.ViewModels.AboutUsSettingViewModel";
            _typeNameTable[217] = "WinUICommunity.BitmapIconExtension";
            _typeNameTable[218] = "ACOMv2.Views.SettingsPage";
            _typeNameTable[219] = "WinUICommunity.SettingsExpander";
            _typeNameTable[220] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[221] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[222] = "WinUICommunity.ThemeServiceAttach";
            _typeNameTable[223] = "WinUICommunity.IThemeService";
            _typeNameTable[224] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[225] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[226] = "Microsoft.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[227] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[228] = "Microsoft.Xaml.Interactivity.Trigger";
            _typeNameTable[229] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[230] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[231] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[232] = "Microsoft.UI.Xaml.Data.IValueConverter";
            _typeNameTable[233] = "ACOMv2.Views.BreadcrumbBarUserControl";
            _typeNameTable[234] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[235] = "ACOMv2.ViewModels.BreadCrumbBarViewModel";
            _typeNameTable[236] = "CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient";
            _typeNameTable[237] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[238] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[239] = "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter";
            _typeNameTable[240] = "Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter";

            _typeTable = new global::System.Type[241];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Double);
            _typeTable[7] = typeof(global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[10] = typeof(global::CommunityToolkit.Labs.WinUI.CanvasView);
            _typeTable[11] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsControl);
            _typeTable[12] = typeof(global::Microsoft.UI.Xaml.Media.SolidColorBrush);
            _typeTable[13] = typeof(global::CommunityToolkit.WinUI.Controls.ContentSizer);
            _typeTable[14] = typeof(global::CommunityToolkit.WinUI.Controls.SizerBase);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[18] = typeof(global::Microsoft.UI.Input.InputSystemCursorShape);
            _typeTable[19] = typeof(global::System.Enum);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.RadioButtons);
            _typeTable[21] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[23] = typeof(global::System.Int32);
            _typeTable[24] = typeof(global::CommunityToolkit.WinUI.Controls.RangeSelector);
            _typeTable[25] = typeof(global::WinUICommunity.WaveProgressBar);
            _typeTable[26] = typeof(global::System.String);
            _typeTable[27] = typeof(global::WinUICommunity.ProgressRing);
            _typeTable[28] = typeof(global::WinUICommunity.ProgressRing.TemplateSettingValues);
            _typeTable[29] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[30] = typeof(global::CommunityToolkit.WinUI.Controls.RadialGauge);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[32] = typeof(global::ACOMv2.Views.CanvasPanelPage);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.CommandBarFlyout);
            _typeTable[36] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase);
            _typeTable[37] = typeof(global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Controls.ICommandBarElement>);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.ICommandBarElement);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Controls.Expander);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection);
            _typeTable[41] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings);
            _typeTable[43] = typeof(global::WinUICommunity.AutoScrollView);
            _typeTable[44] = typeof(global::WinUICommunity.RedirectVisualView);
            _typeTable[45] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[46] = typeof(global::WinUICommunity.Divider);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.Media.DoubleCollection);
            _typeTable[48] = typeof(global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem);
            _typeTable[50] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Controls.ColorPicker);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape);
            _typeTable[53] = typeof(global::Windows.UI.Color);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents);
            _typeTable[55] = typeof(global::System.Nullable<global::Windows.UI.Color>);
            _typeTable[56] = typeof(global::WinUICommunity.AllLandingPage);
            _typeTable[57] = typeof(global::WinUICommunity.ItemsPageBase);
            _typeTable[58] = typeof(global::WinUICommunity.IJsonNavigationViewService);
            _typeTable[59] = typeof(global::System.Collections.Generic.IEnumerable<global::WinUICommunity.DataItem>);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Media.ImageSource);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.GridLength);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Media.Stretch);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.VerticalAlignment);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[65] = typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter);
            _typeTable[66] = typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection);
            _typeTable[67] = typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior);
            _typeTable[68] = typeof(global::CommunityToolkit.WinUI.Controls.TabbedCommandBar);
            _typeTable[69] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[70] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[71] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[72] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[73] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[74] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[75] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[77] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[78] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[79] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[80] = typeof(global::TextControlBoxNS.TextControlBox);
            _typeTable[81] = typeof(global::TextControlBoxNS.CodeLanguage);
            _typeTable[82] = typeof(global::TextControlBoxNS.LineEnding);
            _typeTable[83] = typeof(global::System.Single);
            _typeTable[84] = typeof(global::TextControlBoxNS.CursorPosition);
            _typeTable[85] = typeof(global::Microsoft.UI.Xaml.Media.FontFamily);
            _typeTable[86] = typeof(global::Microsoft.UI.Xaml.ElementTheme);
            _typeTable[87] = typeof(global::TextControlBoxNS.TextControlBoxDesign);
            _typeTable[88] = typeof(global::TextControlBoxNS.CursorSize);
            _typeTable[89] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyout);
            _typeTable[90] = typeof(global::TextControlBoxNS.ScrollBarPosition);
            _typeTable[91] = typeof(global::System.Collections.Generic.IEnumerable<global::System.String>);
            _typeTable[92] = typeof(global::Microsoft.UI.Xaml.Controls.TabView);
            _typeTable[93] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[94] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode);
            _typeTable[95] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode);
            _typeTable[96] = typeof(global::CommunityToolkit.WinUI.FontIconExtension);
            _typeTable[97] = typeof(global::CommunityToolkit.WinUI.TextIconExtension);
            _typeTable[98] = typeof(global::Microsoft.UI.Xaml.Markup.MarkupExtension);
            _typeTable[99] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[100] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[101] = typeof(global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem);
            _typeTable[102] = typeof(global::Microsoft.UI.Xaml.Controls.CommandBar);
            _typeTable[103] = typeof(global::Microsoft.UI.Xaml.HorizontalAlignment);
            _typeTable[104] = typeof(global::Microsoft.UI.Xaml.Controls.SplitButton);
            _typeTable[105] = typeof(global::Syncfusion.UI.Xaml.Charts.SfCartesianChart);
            _typeTable[106] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBase);
            _typeTable[107] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection);
            _typeTable[108] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>);
            _typeTable[109] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>);
            _typeTable[110] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeries);
            _typeTable[111] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeries);
            _typeTable[112] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings);
            _typeTable[113] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings);
            _typeTable[114] = typeof(global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior);
            _typeTable[115] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior);
            _typeTable[116] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior);
            _typeTable[117] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>);
            _typeTable[118] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon);
            _typeTable[119] = typeof(global::System.TimeSpan);
            _typeTable[120] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis);
            _typeTable[121] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[122] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[123] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelStyle);
            _typeTable[124] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode);
            _typeTable[125] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction);
            _typeTable[126] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode);
            _typeTable[127] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>);
            _typeTable[128] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>);
            _typeTable[129] = typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase);
            _typeTable[130] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode);
            _typeTable[131] = typeof(global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior);
            _typeTable[132] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior);
            _typeTable[133] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior);
            _typeTable[134] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior);
            _typeTable[135] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend);
            _typeTable[136] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior);
            _typeTable[137] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior);
            _typeTable[138] = typeof(global::Windows.Foundation.Rect);
            _typeTable[139] = typeof(global::Syncfusion.UI.Xaml.Charts.CategoryAxis);
            _typeTable[140] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelPlacement);
            _typeTable[141] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalAxis);
            _typeTable[142] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalPadding);
            _typeTable[143] = typeof(global::Syncfusion.UI.Xaml.Charts.ColumnSeries);
            _typeTable[144] = typeof(global::Syncfusion.UI.Xaml.Charts.XyDataSeries);
            _typeTable[145] = typeof(global::ACOMv2.Views.HomeLandingPage);
            _typeTable[146] = typeof(global::ACOMv2.ViewModels.HomeLandingViewModel);
            _typeTable[147] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject);
#pragma warning disable 0618  //   Warning on Deprecated usage
            _typeTable[148] = typeof(global::WinUICommunity.TitleBar);
#pragma warning restore 0618
            _typeTable[149] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[150] = typeof(global::WinUICommunity.TitleBarTemplateSettings);
            _typeTable[151] = typeof(global::WinUICommunity.BreadcrumbNavigator);
            _typeTable[152] = typeof(global::Microsoft.UI.Xaml.Controls.BreadcrumbBar);
            _typeTable[153] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>);
            _typeTable[154] = typeof(global::System.Collections.ObjectModel.Collection<global::WinUICommunity.NavigationBreadcrumb>);
            _typeTable[155] = typeof(global::WinUICommunity.NavigationBreadcrumb);
            _typeTable[156] = typeof(global::System.Type);
            _typeTable[157] = typeof(global::System.Reflection.MemberInfo);
            _typeTable[158] = typeof(global::Microsoft.UI.Xaml.Controls.Frame);
            _typeTable[159] = typeof(global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>);
            _typeTable[160] = typeof(global::WinUICommunity.BreadcrumbPageConfig);
            _typeTable[161] = typeof(global::System.Reflection.Assembly);
            _typeTable[162] = typeof(global::System.Reflection.TypeAttributes);
            _typeTable[163] = typeof(global::System.Reflection.MethodBase);
            _typeTable[164] = typeof(global::System.Reflection.GenericParameterAttributes);
            _typeTable[165] = typeof(global::System.Type[]);
            _typeTable[166] = typeof(global::System.Array);
            _typeTable[167] = typeof(global::System.Guid);
            _typeTable[168] = typeof(global::System.Reflection.MemberTypes);
            _typeTable[169] = typeof(global::System.Reflection.Module);
            _typeTable[170] = typeof(global::System.Runtime.InteropServices.StructLayoutAttribute);
            _typeTable[171] = typeof(global::System.Attribute);
            _typeTable[172] = typeof(global::System.RuntimeTypeHandle);
            _typeTable[173] = typeof(global::System.Reflection.ConstructorInfo);
            _typeTable[174] = typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.CustomAttributeData>);
            _typeTable[175] = typeof(global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions);
            _typeTable[176] = typeof(global::CommunityToolkit.WinUI.Controls.PropertySizer);
            _typeTable[177] = typeof(global::WinUICommunity.BitmapIconSourceExtension);
            _typeTable[178] = typeof(global::System.Uri);
            _typeTable[179] = typeof(global::WinUICommunity.FontIconExtension);
            _typeTable[180] = typeof(global::WinUICommunity.TextIconExtension);
            _typeTable[181] = typeof(global::WinUICommunity.GlyphCode);
            _typeTable[182] = typeof(global::WinUICommunity.GlyphName);
            _typeTable[183] = typeof(global::ACOMv2.Views.MainPage);
            _typeTable[184] = typeof(global::ACOMv2.ViewModels.MainViewModel);
            _typeTable[185] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[186] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility);
            _typeTable[187] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[188] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode);
            _typeTable[189] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation);
            _typeTable[190] = typeof(global::Microsoft.UI.Composition.CompositionPropertySet);
            _typeTable[191] = typeof(global::Microsoft.UI.Composition.CompositionObject);
            _typeTable[192] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode);
            _typeTable[193] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode);
            _typeTable[194] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds);
            _typeTable[195] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter);
            _typeTable[196] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState);
            _typeTable[197] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode);
            _typeTable[198] = typeof(global::WinUICommunity.PanelAttach);
            _typeTable[199] = typeof(global::WinUICommunity.PanelTransitionCollection);
            _typeTable[200] = typeof(global::WinUICommunity.SettingsNavigationAttach);
            _typeTable[201] = typeof(global::Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo);
            _typeTable[202] = typeof(global::WinUICommunity.SettingsCard);
            _typeTable[203] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[204] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[205] = typeof(global::WinUICommunity.ContentAlignment);
            _typeTable[206] = typeof(global::WinUICommunity.NavigationHelperEx);
            _typeTable[207] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[208] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[209] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[210] = typeof(global::ACOMv2.Views.GeneralSettingPage);
            _typeTable[211] = typeof(global::ACOMv2.ViewModels.GeneralSettingViewModel);
            _typeTable[212] = typeof(global::ACOMv2.Views.ThemeSettingPage);
            _typeTable[213] = typeof(global::ACOMv2.Views.AppUpdateSettingPage);
            _typeTable[214] = typeof(global::ACOMv2.ViewModels.AppUpdateSettingViewModel);
            _typeTable[215] = typeof(global::ACOMv2.Views.AboutUsSettingPage);
            _typeTable[216] = typeof(global::ACOMv2.ViewModels.AboutUsSettingViewModel);
            _typeTable[217] = typeof(global::WinUICommunity.BitmapIconExtension);
            _typeTable[218] = typeof(global::ACOMv2.Views.SettingsPage);
            _typeTable[219] = typeof(global::WinUICommunity.SettingsExpander);
            _typeTable[220] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[221] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[222] = typeof(global::WinUICommunity.ThemeServiceAttach);
            _typeTable[223] = typeof(global::WinUICommunity.IThemeService);
            _typeTable[224] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[225] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[226] = typeof(global::Microsoft.UI.Xaml.DependencyObjectCollection);
            _typeTable[227] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[228] = typeof(global::Microsoft.Xaml.Interactivity.Trigger);
            _typeTable[229] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[230] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[231] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[232] = typeof(global::Microsoft.UI.Xaml.Data.IValueConverter);
            _typeTable[233] = typeof(global::ACOMv2.Views.BreadcrumbBarUserControl);
            _typeTable[234] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[235] = typeof(global::ACOMv2.ViewModels.BreadCrumbBarViewModel);
            _typeTable[236] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient);
            _typeTable[237] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[238] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[239] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter);
            _typeTable[240] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_7_AlignmentGrid() { return new global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid(); }
        private object Activate_10_CanvasView() { return new global::CommunityToolkit.Labs.WinUI.CanvasView(); }
        private object Activate_13_ContentSizer() { return new global::CommunityToolkit.WinUI.Controls.ContentSizer(); }
        private object Activate_20_RadioButtons() { return new global::Microsoft.UI.Xaml.Controls.RadioButtons(); }
        private object Activate_24_RangeSelector() { return new global::CommunityToolkit.WinUI.Controls.RangeSelector(); }
        private object Activate_25_WaveProgressBar() { return new global::WinUICommunity.WaveProgressBar(); }
        private object Activate_27_ProgressRing() { return new global::WinUICommunity.ProgressRing(); }
        private object Activate_30_RadialGauge() { return new global::CommunityToolkit.WinUI.Controls.RadialGauge(); }
        private object Activate_32_CanvasPanelPage() { return new global::ACOMv2.Views.CanvasPanelPage(); }
        private object Activate_35_CommandBarFlyout() { return new global::Microsoft.UI.Xaml.Controls.CommandBarFlyout(); }
        private object Activate_39_Expander() { return new global::Microsoft.UI.Xaml.Controls.Expander(); }
        private object Activate_43_AutoScrollView() { return new global::WinUICommunity.AutoScrollView(); }
        private object Activate_44_RedirectVisualView() { return new global::WinUICommunity.RedirectVisualView(); }
        private object Activate_46_Divider() { return new global::WinUICommunity.Divider(); }
        private object Activate_48_RadioMenuFlyoutItem() { return new global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem(); }
        private object Activate_51_ColorPicker() { return new global::Microsoft.UI.Xaml.Controls.ColorPicker(); }
        private object Activate_56_AllLandingPage() { return new global::WinUICommunity.AllLandingPage(); }
        private object Activate_65_GridSplitter() { return new global::CommunityToolkit.WinUI.Controls.GridSplitter(); }
        private object Activate_68_TabbedCommandBar() { return new global::CommunityToolkit.WinUI.Controls.TabbedCommandBar(); }
        private object Activate_69_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_79_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_80_TextControlBox() { return new global::TextControlBoxNS.TextControlBox(); }
        private object Activate_81_CodeLanguage() { return new global::TextControlBoxNS.CodeLanguage(); }
        private object Activate_92_TabView() { return new global::Microsoft.UI.Xaml.Controls.TabView(); }
        private object Activate_96_FontIconExtension() { return new global::CommunityToolkit.WinUI.FontIconExtension(); }
        private object Activate_101_TabbedCommandBarItem() { return new global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem(); }
        private object Activate_104_SplitButton() { return new global::Microsoft.UI.Xaml.Controls.SplitButton(); }
        private object Activate_105_SfCartesianChart() { return new global::Syncfusion.UI.Xaml.Charts.SfCartesianChart(); }
        private object Activate_107_CartesianSeriesCollection() { return new global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection(); }
        private object Activate_108_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>(); }
        private object Activate_109_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>(); }
        private object Activate_112_CartesianDataLabelSettings() { return new global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings(); }
        private object Activate_114_DataPointSelectionBehavior() { return new global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior(); }
        private object Activate_121_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_122_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_123_LabelStyle() { return new global::Syncfusion.UI.Xaml.Charts.LabelStyle(); }
        private object Activate_127_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>(); }
        private object Activate_128_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>(); }
        private object Activate_131_SeriesSelectionBehavior() { return new global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior(); }
        private object Activate_132_ChartZoomPanBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior(); }
        private object Activate_133_ChartTrackballBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior(); }
        private object Activate_134_ChartCrosshairBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior(); }
        private object Activate_135_ChartLegend() { return new global::Syncfusion.UI.Xaml.Charts.ChartLegend(); }
        private object Activate_136_ChartTooltipBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior(); }
        private object Activate_137_ChartInteractiveBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior(); }
        private object Activate_139_CategoryAxis() { return new global::Syncfusion.UI.Xaml.Charts.CategoryAxis(); }
        private object Activate_141_NumericalAxis() { return new global::Syncfusion.UI.Xaml.Charts.NumericalAxis(); }
        private object Activate_143_ColumnSeries() { return new global::Syncfusion.UI.Xaml.Charts.ColumnSeries(); }
        private object Activate_145_HomeLandingPage() { return new global::ACOMv2.Views.HomeLandingPage(); }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object Activate_148_TitleBar() { return new global::WinUICommunity.TitleBar(); }
#pragma warning restore 0618
        private object Activate_150_TitleBarTemplateSettings() { return new global::WinUICommunity.TitleBarTemplateSettings(); }
        private object Activate_151_BreadcrumbNavigator() { return new global::WinUICommunity.BreadcrumbNavigator(); }
        private object Activate_152_BreadcrumbBar() { return new global::Microsoft.UI.Xaml.Controls.BreadcrumbBar(); }
        private object Activate_153_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>(); }
        private object Activate_154_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinUICommunity.NavigationBreadcrumb>(); }
        private object Activate_159_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>(); }
        private object Activate_160_BreadcrumbPageConfig() { return new global::WinUICommunity.BreadcrumbPageConfig(); }
        private object Activate_176_PropertySizer() { return new global::CommunityToolkit.WinUI.Controls.PropertySizer(); }
        private object Activate_177_BitmapIconSourceExtension() { return new global::WinUICommunity.BitmapIconSourceExtension(); }
        private object Activate_179_FontIconExtension() { return new global::WinUICommunity.FontIconExtension(); }
        private object Activate_183_MainPage() { return new global::ACOMv2.Views.MainPage(); }
        private object Activate_184_MainViewModel() { return new global::ACOMv2.ViewModels.MainViewModel(); }
        private object Activate_185_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_195_ScrollPresenter() { return new global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter(); }
        private object Activate_198_PanelAttach() { return new global::WinUICommunity.PanelAttach(); }
        private object Activate_200_SettingsNavigationAttach() { return new global::WinUICommunity.SettingsNavigationAttach(); }
        private object Activate_202_SettingsCard() { return new global::WinUICommunity.SettingsCard(); }
        private object Activate_206_NavigationHelperEx() { return new global::WinUICommunity.NavigationHelperEx(); }
        private object Activate_207_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_209_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_210_GeneralSettingPage() { return new global::ACOMv2.Views.GeneralSettingPage(); }
        private object Activate_211_GeneralSettingViewModel() { return new global::ACOMv2.ViewModels.GeneralSettingViewModel(); }
        private object Activate_212_ThemeSettingPage() { return new global::ACOMv2.Views.ThemeSettingPage(); }
        private object Activate_213_AppUpdateSettingPage() { return new global::ACOMv2.Views.AppUpdateSettingPage(); }
        private object Activate_214_AppUpdateSettingViewModel() { return new global::ACOMv2.ViewModels.AppUpdateSettingViewModel(); }
        private object Activate_215_AboutUsSettingPage() { return new global::ACOMv2.Views.AboutUsSettingPage(); }
        private object Activate_216_AboutUsSettingViewModel() { return new global::ACOMv2.ViewModels.AboutUsSettingViewModel(); }
        private object Activate_217_BitmapIconExtension() { return new global::WinUICommunity.BitmapIconExtension(); }
        private object Activate_218_SettingsPage() { return new global::ACOMv2.Views.SettingsPage(); }
        private object Activate_219_SettingsExpander() { return new global::WinUICommunity.SettingsExpander(); }
        private object Activate_220_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_225_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_227_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_230_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_231_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_233_BreadcrumbBarUserControl() { return new global::ACOMv2.Views.BreadcrumbBarUserControl(); }
        private object Activate_234_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_237_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private object Activate_239_DoubleToObjectConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter(); }
        private object Activate_240_DoubleToVisibilityConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_Thickness() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Thickness).TypeHandle);
        private void StaticInitializer_5_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_7_AlignmentGrid() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid).TypeHandle);
        private void StaticInitializer_10_CanvasView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Labs.WinUI.CanvasView).TypeHandle);
        private void StaticInitializer_13_ContentSizer() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.ContentSizer).TypeHandle);
        private void StaticInitializer_14_SizerBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.SizerBase).TypeHandle);
        private void StaticInitializer_18_InputSystemCursorShape() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Input.InputSystemCursorShape).TypeHandle);
        private void StaticInitializer_19_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_20_RadioButtons() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.RadioButtons).TypeHandle);
        private void StaticInitializer_21_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_24_RangeSelector() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.RangeSelector).TypeHandle);
        private void StaticInitializer_25_WaveProgressBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.WaveProgressBar).TypeHandle);
        private void StaticInitializer_27_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ProgressRing).TypeHandle);
        private void StaticInitializer_28_TemplateSettingValues() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ProgressRing.TemplateSettingValues).TypeHandle);
        private void StaticInitializer_30_RadialGauge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.RadialGauge).TypeHandle);
        private void StaticInitializer_32_CanvasPanelPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.CanvasPanelPage).TypeHandle);
        private void StaticInitializer_35_CommandBarFlyout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.CommandBarFlyout).TypeHandle);
        private void StaticInitializer_37_IObservableVector() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.Foundation.Collections.IObservableVector<global::Microsoft.UI.Xaml.Controls.ICommandBarElement>).TypeHandle);
        private void StaticInitializer_39_Expander() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Expander).TypeHandle);
        private void StaticInitializer_40_ExpandDirection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection).TypeHandle);
        private void StaticInitializer_42_ExpanderTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings).TypeHandle);
        private void StaticInitializer_43_AutoScrollView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.AutoScrollView).TypeHandle);
        private void StaticInitializer_44_RedirectVisualView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.RedirectVisualView).TypeHandle);
        private void StaticInitializer_46_Divider() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.Divider).TypeHandle);
        private void StaticInitializer_48_RadioMenuFlyoutItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem).TypeHandle);
        private void StaticInitializer_51_ColorPicker() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ColorPicker).TypeHandle);
        private void StaticInitializer_52_ColorSpectrumShape() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape).TypeHandle);
        private void StaticInitializer_53_Color() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Color).TypeHandle);
        private void StaticInitializer_54_ColorSpectrumComponents() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents).TypeHandle);
        private void StaticInitializer_55_Nullable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Nullable<global::Windows.UI.Color>).TypeHandle);
        private void StaticInitializer_56_AllLandingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.AllLandingPage).TypeHandle);
        private void StaticInitializer_57_ItemsPageBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ItemsPageBase).TypeHandle);
        private void StaticInitializer_58_IJsonNavigationViewService() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.IJsonNavigationViewService).TypeHandle);
        private void StaticInitializer_59_IEnumerable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IEnumerable<global::WinUICommunity.DataItem>).TypeHandle);
        private void StaticInitializer_61_GridLength() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.GridLength).TypeHandle);
        private void StaticInitializer_64_CornerRadius() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.CornerRadius).TypeHandle);
        private void StaticInitializer_65_GridSplitter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter).TypeHandle);
        private void StaticInitializer_66_GridResizeDirection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection).TypeHandle);
        private void StaticInitializer_67_GridResizeBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior).TypeHandle);
        private void StaticInitializer_68_TabbedCommandBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.TabbedCommandBar).TypeHandle);
        private void StaticInitializer_69_NavigationView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle);
        private void StaticInitializer_71_NavigationViewDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode).TypeHandle);
        private void StaticInitializer_72_NavigationViewBackButtonVisible() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible).TypeHandle);
        private void StaticInitializer_75_NavigationViewOverflowLabelMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode).TypeHandle);
        private void StaticInitializer_76_NavigationViewPaneDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode).TypeHandle);
        private void StaticInitializer_77_NavigationViewSelectionFollowsFocus() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus).TypeHandle);
        private void StaticInitializer_78_NavigationViewShoulderNavigationEnabled() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled).TypeHandle);
        private void StaticInitializer_79_NavigationViewTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle);
        private void StaticInitializer_80_TextControlBox() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.TextControlBox).TypeHandle);
        private void StaticInitializer_81_CodeLanguage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.CodeLanguage).TypeHandle);
        private void StaticInitializer_82_LineEnding() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.LineEnding).TypeHandle);
        private void StaticInitializer_84_CursorPosition() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.CursorPosition).TypeHandle);
        private void StaticInitializer_87_TextControlBoxDesign() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.TextControlBoxDesign).TypeHandle);
        private void StaticInitializer_88_CursorSize() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.CursorSize).TypeHandle);
        private void StaticInitializer_90_ScrollBarPosition() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::TextControlBoxNS.ScrollBarPosition).TypeHandle);
        private void StaticInitializer_91_IEnumerable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IEnumerable<global::System.String>).TypeHandle);
        private void StaticInitializer_92_TabView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TabView).TypeHandle);
        private void StaticInitializer_93_ICommand() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Windows.Input.ICommand).TypeHandle);
        private void StaticInitializer_94_TabViewCloseButtonOverlayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode).TypeHandle);
        private void StaticInitializer_95_TabViewWidthMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode).TypeHandle);
        private void StaticInitializer_96_FontIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.FontIconExtension).TypeHandle);
        private void StaticInitializer_97_TextIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.TextIconExtension).TypeHandle);
        private void StaticInitializer_99_FontWeight() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Text.FontWeight).TypeHandle);
        private void StaticInitializer_100_FontStyle() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Text.FontStyle).TypeHandle);
        private void StaticInitializer_101_TabbedCommandBarItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem).TypeHandle);
        private void StaticInitializer_104_SplitButton() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.SplitButton).TypeHandle);
        private void StaticInitializer_105_SfCartesianChart() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.SfCartesianChart).TypeHandle);
        private void StaticInitializer_106_ChartBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartBase).TypeHandle);
        private void StaticInitializer_107_CartesianSeriesCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection).TypeHandle);
        private void StaticInitializer_108_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>).TypeHandle);
        private void StaticInitializer_109_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>).TypeHandle);
        private void StaticInitializer_110_CartesianSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeries).TypeHandle);
        private void StaticInitializer_111_ChartSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeries).TypeHandle);
        private void StaticInitializer_112_CartesianDataLabelSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings).TypeHandle);
        private void StaticInitializer_113_ChartDataLabelSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings).TypeHandle);
        private void StaticInitializer_114_DataPointSelectionBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior).TypeHandle);
        private void StaticInitializer_115_ChartSelectionBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior).TypeHandle);
        private void StaticInitializer_116_ChartBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior).TypeHandle);
        private void StaticInitializer_117_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>).TypeHandle);
        private void StaticInitializer_118_ChartLegendIcon() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon).TypeHandle);
        private void StaticInitializer_119_TimeSpan() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.TimeSpan).TypeHandle);
        private void StaticInitializer_120_ChartAxis() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis).TypeHandle);
        private void StaticInitializer_121_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>).TypeHandle);
        private void StaticInitializer_122_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>).TypeHandle);
        private void StaticInitializer_123_LabelStyle() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.LabelStyle).TypeHandle);
        private void StaticInitializer_124_EdgeLabelsDrawingMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode).TypeHandle);
        private void StaticInitializer_125_AxisLabelsIntersectAction() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction).TypeHandle);
        private void StaticInitializer_126_ChartAutoScrollingMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode).TypeHandle);
        private void StaticInitializer_127_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>).TypeHandle);
        private void StaticInitializer_128_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>).TypeHandle);
        private void StaticInitializer_129_RangeAxisBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase).TypeHandle);
        private void StaticInitializer_130_EdgeLabelsVisibilityMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode).TypeHandle);
        private void StaticInitializer_131_SeriesSelectionBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior).TypeHandle);
        private void StaticInitializer_132_ChartZoomPanBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior).TypeHandle);
        private void StaticInitializer_133_ChartTrackballBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior).TypeHandle);
        private void StaticInitializer_134_ChartCrosshairBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior).TypeHandle);
        private void StaticInitializer_135_ChartLegend() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend).TypeHandle);
        private void StaticInitializer_136_ChartTooltipBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior).TypeHandle);
        private void StaticInitializer_137_ChartInteractiveBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior).TypeHandle);
        private void StaticInitializer_139_CategoryAxis() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.CategoryAxis).TypeHandle);
        private void StaticInitializer_140_LabelPlacement() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.LabelPlacement).TypeHandle);
        private void StaticInitializer_141_NumericalAxis() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.NumericalAxis).TypeHandle);
        private void StaticInitializer_142_NumericalPadding() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.NumericalPadding).TypeHandle);
        private void StaticInitializer_143_ColumnSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.ColumnSeries).TypeHandle);
        private void StaticInitializer_144_XyDataSeries() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Charts.XyDataSeries).TypeHandle);
        private void StaticInitializer_145_HomeLandingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.HomeLandingPage).TypeHandle);
        private void StaticInitializer_146_HomeLandingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.ViewModels.HomeLandingViewModel).TypeHandle);
        private void StaticInitializer_147_ObservableObject() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject).TypeHandle);
#pragma warning disable 0618  //   Warning on Deprecated usage
        private void StaticInitializer_148_TitleBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.TitleBar).TypeHandle);
#pragma warning restore 0618
        private void StaticInitializer_150_TitleBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.TitleBarTemplateSettings).TypeHandle);
        private void StaticInitializer_151_BreadcrumbNavigator() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BreadcrumbNavigator).TypeHandle);
        private void StaticInitializer_152_BreadcrumbBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.BreadcrumbBar).TypeHandle);
        private void StaticInitializer_153_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>).TypeHandle);
        private void StaticInitializer_154_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::WinUICommunity.NavigationBreadcrumb>).TypeHandle);
        private void StaticInitializer_155_NavigationBreadcrumb() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.NavigationBreadcrumb).TypeHandle);
        private void StaticInitializer_156_Type() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Type).TypeHandle);
        private void StaticInitializer_157_MemberInfo() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.MemberInfo).TypeHandle);
        private void StaticInitializer_159_Dictionary() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>).TypeHandle);
        private void StaticInitializer_160_BreadcrumbPageConfig() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BreadcrumbPageConfig).TypeHandle);
        private void StaticInitializer_161_Assembly() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.Assembly).TypeHandle);
        private void StaticInitializer_162_TypeAttributes() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.TypeAttributes).TypeHandle);
        private void StaticInitializer_163_MethodBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.MethodBase).TypeHandle);
        private void StaticInitializer_164_GenericParameterAttributes() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.GenericParameterAttributes).TypeHandle);
        private void StaticInitializer_166_Array() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Array).TypeHandle);
        private void StaticInitializer_167_Guid() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Guid).TypeHandle);
        private void StaticInitializer_168_MemberTypes() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.MemberTypes).TypeHandle);
        private void StaticInitializer_169_Module() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.Module).TypeHandle);
        private void StaticInitializer_170_StructLayoutAttribute() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Runtime.InteropServices.StructLayoutAttribute).TypeHandle);
        private void StaticInitializer_171_Attribute() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Attribute).TypeHandle);
        private void StaticInitializer_172_RuntimeTypeHandle() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.RuntimeTypeHandle).TypeHandle);
        private void StaticInitializer_173_ConstructorInfo() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Reflection.ConstructorInfo).TypeHandle);
        private void StaticInitializer_174_IEnumerable() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.CustomAttributeData>).TypeHandle);
        private void StaticInitializer_175_BreadcrumbNavigatorHeaderVisibilityOptions() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions).TypeHandle);
        private void StaticInitializer_176_PropertySizer() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.WinUI.Controls.PropertySizer).TypeHandle);
        private void StaticInitializer_177_BitmapIconSourceExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BitmapIconSourceExtension).TypeHandle);
        private void StaticInitializer_178_Uri() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Uri).TypeHandle);
        private void StaticInitializer_179_FontIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.FontIconExtension).TypeHandle);
        private void StaticInitializer_180_TextIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.TextIconExtension).TypeHandle);
        private void StaticInitializer_181_GlyphCode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.GlyphCode).TypeHandle);
        private void StaticInitializer_182_GlyphName() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.GlyphName).TypeHandle);
        private void StaticInitializer_183_MainPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.MainPage).TypeHandle);
        private void StaticInitializer_184_MainViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.ViewModels.MainViewModel).TypeHandle);
        private void StaticInitializer_185_ScrollView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollView).TypeHandle);
        private void StaticInitializer_186_ScrollingScrollBarVisibility() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility).TypeHandle);
        private void StaticInitializer_188_ScrollingScrollMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode).TypeHandle);
        private void StaticInitializer_189_ScrollingContentOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation).TypeHandle);
        private void StaticInitializer_190_CompositionPropertySet() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionPropertySet).TypeHandle);
        private void StaticInitializer_191_CompositionObject() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionObject).TypeHandle);
        private void StaticInitializer_192_ScrollingChainMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode).TypeHandle);
        private void StaticInitializer_193_ScrollingRailMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode).TypeHandle);
        private void StaticInitializer_194_ScrollingInputKinds() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds).TypeHandle);
        private void StaticInitializer_195_ScrollPresenter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter).TypeHandle);
        private void StaticInitializer_196_ScrollingInteractionState() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState).TypeHandle);
        private void StaticInitializer_197_ScrollingZoomMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode).TypeHandle);
        private void StaticInitializer_198_PanelAttach() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.PanelAttach).TypeHandle);
        private void StaticInitializer_199_PanelTransitionCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.PanelTransitionCollection).TypeHandle);
        private void StaticInitializer_200_SettingsNavigationAttach() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.SettingsNavigationAttach).TypeHandle);
        private void StaticInitializer_202_SettingsCard() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.SettingsCard).TypeHandle);
        private void StaticInitializer_205_ContentAlignment() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ContentAlignment).TypeHandle);
        private void StaticInitializer_206_NavigationHelperEx() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.NavigationHelperEx).TypeHandle);
        private void StaticInitializer_207_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_208_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_209_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_210_GeneralSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.GeneralSettingPage).TypeHandle);
        private void StaticInitializer_211_GeneralSettingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.ViewModels.GeneralSettingViewModel).TypeHandle);
        private void StaticInitializer_212_ThemeSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.ThemeSettingPage).TypeHandle);
        private void StaticInitializer_213_AppUpdateSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.AppUpdateSettingPage).TypeHandle);
        private void StaticInitializer_214_AppUpdateSettingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.ViewModels.AppUpdateSettingViewModel).TypeHandle);
        private void StaticInitializer_215_AboutUsSettingPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.AboutUsSettingPage).TypeHandle);
        private void StaticInitializer_216_AboutUsSettingViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.ViewModels.AboutUsSettingViewModel).TypeHandle);
        private void StaticInitializer_217_BitmapIconExtension() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.BitmapIconExtension).TypeHandle);
        private void StaticInitializer_218_SettingsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.SettingsPage).TypeHandle);
        private void StaticInitializer_219_SettingsExpander() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.SettingsExpander).TypeHandle);
        private void StaticInitializer_220_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_221_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_222_ThemeServiceAttach() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.ThemeServiceAttach).TypeHandle);
        private void StaticInitializer_223_IThemeService() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::WinUICommunity.IThemeService).TypeHandle);
        private void StaticInitializer_224_Interaction() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactivity.Interaction).TypeHandle);
        private void StaticInitializer_225_BehaviorCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection).TypeHandle);
        private void StaticInitializer_227_EventTriggerBehavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior).TypeHandle);
        private void StaticInitializer_228_Trigger() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactivity.Trigger).TypeHandle);
        private void StaticInitializer_229_Behavior() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactivity.Behavior).TypeHandle);
        private void StaticInitializer_230_ActionCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactivity.ActionCollection).TypeHandle);
        private void StaticInitializer_231_InvokeCommandAction() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction).TypeHandle);
        private void StaticInitializer_233_BreadcrumbBarUserControl() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.Views.BreadcrumbBarUserControl).TypeHandle);
        private void StaticInitializer_234_List() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.List<global::System.String>).TypeHandle);
        private void StaticInitializer_235_BreadCrumbBarViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::ACOMv2.ViewModels.BreadCrumbBarViewModel).TypeHandle);
        private void StaticInitializer_236_ObservableRecipient() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient).TypeHandle);
        private void StaticInitializer_237_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_238_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void StaticInitializer_239_DoubleToObjectConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter).TypeHandle);
        private void StaticInitializer_240_DoubleToVisibilityConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_21_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_IObservableVector(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.ICommandBarElement>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.ICommandBarElement)item;
            collection.Add(newItem);
        }
        private void VectorAdd_107_CartesianSeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_108_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_109_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_117_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_121_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_122_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_127_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_128_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_153_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinUICommunity.NavigationBreadcrumb>)instance;
            var newItem = (global::WinUICommunity.NavigationBreadcrumb)item;
            collection.Add(newItem);
        }
        private void VectorAdd_154_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinUICommunity.NavigationBreadcrumb>)instance;
            var newItem = (global::WinUICommunity.NavigationBreadcrumb)item;
            collection.Add(newItem);
        }
        private void MapAdd_159_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>)instance;
            var newKey = (global::System.Type)key;
            var newItem = (global::WinUICommunity.BreadcrumbPageConfig)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_225_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Microsoft.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_230_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Microsoft.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_234_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_238_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_4_Thickness;
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Right");
                userType.AddMemberName("Bottom");
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_5_ValueType;
                xamlType = userType;
                break;

            case 6:   //  Double
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_7_AlignmentGrid;
                userType.StaticInitializer = StaticInitializer_7_AlignmentGrid;
                userType.AddMemberName("HorizontalStep");
                userType.AddMemberName("VerticalStep");
                userType.AddMemberName("LineBrush");
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  CommunityToolkit.Labs.WinUI.CanvasView
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_10_CanvasView;
                userType.StaticInitializer = StaticInitializer_10_CanvasView;
                userType.AddMemberName("DefaultBorderBrush");
                userType.AddMemberName("DefaultBorderThickness");
                userType.AddMemberName("DefaultPadding");
                xamlType = userType;
                break;

            case 11:   //  Microsoft.UI.Xaml.Controls.ItemsControl
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Microsoft.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  CommunityToolkit.WinUI.Controls.ContentSizer
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase"));
                userType.Activator = Activate_13_ContentSizer;
                userType.StaticInitializer = StaticInitializer_13_ContentSizer;
                userType.AddMemberName("TargetControl");
                userType.AddMemberName("IsDragInverted");
                xamlType = userType;
                break;

            case 14:   //  CommunityToolkit.WinUI.Controls.SizerBase
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_14_SizerBase;
                userType.AddMemberName("Orientation");
                userType.AddMemberName("Cursor");
                userType.AddMemberName("DragIncrement");
                userType.AddMemberName("KeyboardIncrement");
                userType.AddMemberName("IsThumbVisible");
                xamlType = userType;
                break;

            case 15:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Microsoft.UI.Input.InputSystemCursorShape
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_18_InputSystemCursorShape;
                userType.AddEnumValue("Arrow", global::Microsoft.UI.Input.InputSystemCursorShape.Arrow);
                userType.AddEnumValue("Cross", global::Microsoft.UI.Input.InputSystemCursorShape.Cross);
                userType.AddEnumValue("Hand", global::Microsoft.UI.Input.InputSystemCursorShape.Hand);
                userType.AddEnumValue("Help", global::Microsoft.UI.Input.InputSystemCursorShape.Help);
                userType.AddEnumValue("IBeam", global::Microsoft.UI.Input.InputSystemCursorShape.IBeam);
                userType.AddEnumValue("SizeAll", global::Microsoft.UI.Input.InputSystemCursorShape.SizeAll);
                userType.AddEnumValue("SizeNortheastSouthwest", global::Microsoft.UI.Input.InputSystemCursorShape.SizeNortheastSouthwest);
                userType.AddEnumValue("SizeNorthSouth", global::Microsoft.UI.Input.InputSystemCursorShape.SizeNorthSouth);
                userType.AddEnumValue("SizeNorthwestSoutheast", global::Microsoft.UI.Input.InputSystemCursorShape.SizeNorthwestSoutheast);
                userType.AddEnumValue("SizeWestEast", global::Microsoft.UI.Input.InputSystemCursorShape.SizeWestEast);
                userType.AddEnumValue("UniversalNo", global::Microsoft.UI.Input.InputSystemCursorShape.UniversalNo);
                userType.AddEnumValue("UpArrow", global::Microsoft.UI.Input.InputSystemCursorShape.UpArrow);
                userType.AddEnumValue("Wait", global::Microsoft.UI.Input.InputSystemCursorShape.Wait);
                userType.AddEnumValue("Pin", global::Microsoft.UI.Input.InputSystemCursorShape.Pin);
                userType.AddEnumValue("Person", global::Microsoft.UI.Input.InputSystemCursorShape.Person);
                userType.AddEnumValue("AppStarting", global::Microsoft.UI.Input.InputSystemCursorShape.AppStarting);
                xamlType = userType;
                break;

            case 19:   //  System.Enum
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_19_Enum;
                xamlType = userType;
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.RadioButtons
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_20_RadioButtons;
                userType.StaticInitializer = StaticInitializer_20_RadioButtons;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.RadioButtons.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("MaxColumns");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                xamlType = userType;
                break;

            case 21:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_21_IList;
                userType.CollectionAdd = VectorAdd_21_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Int32
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  CommunityToolkit.WinUI.Controls.RangeSelector
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_24_RangeSelector;
                userType.StaticInitializer = StaticInitializer_24_RangeSelector;
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("RangeEnd");
                userType.AddMemberName("RangeStart");
                userType.AddMemberName("StepFrequency");
                xamlType = userType;
                break;

            case 25:   //  WinUICommunity.WaveProgressBar
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_25_WaveProgressBar;
                userType.StaticInitializer = StaticInitializer_25_WaveProgressBar;
                userType.AddMemberName("Value");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Text");
                userType.AddMemberName("ShowText");
                userType.AddMemberName("WaveFill");
                userType.AddMemberName("WaveThickness");
                userType.AddMemberName("WaveStroke");
                xamlType = userType;
                break;

            case 26:   //  String
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  WinUICommunity.ProgressRing
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_27_ProgressRing;
                userType.StaticInitializer = StaticInitializer_27_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 28:   //  WinUICommunity.ProgressRing.TemplateSettingValues
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_28_TemplateSettingValues;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  CommunityToolkit.WinUI.Controls.RadialGauge
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_30_RadialGauge;
                userType.StaticInitializer = StaticInitializer_30_RadialGauge;
                userType.AddMemberName("IsInteractive");
                userType.AddMemberName("MaxAngle");
                userType.AddMemberName("MinAngle");
                userType.AddMemberName("NeedleLength");
                userType.AddMemberName("NeedleWidth");
                userType.AddMemberName("ScalePadding");
                userType.AddMemberName("ScaleTickWidth");
                userType.AddMemberName("ScaleWidth");
                userType.AddMemberName("StepSize");
                userType.AddMemberName("TickLength");
                userType.AddMemberName("TickPadding");
                userType.AddMemberName("TickSpacing");
                userType.AddMemberName("TickWidth");
                userType.AddMemberName("ValueStringFormat");
                userType.AddMemberName("Unit");
                userType.AddMemberName("NeedleBrush");
                userType.AddMemberName("NeedleBorderBrush");
                userType.AddMemberName("TrailBrush");
                userType.AddMemberName("ScaleBrush");
                userType.AddMemberName("ScaleTickBrush");
                userType.AddMemberName("ScaleTickCornerRadius");
                userType.AddMemberName("TickBrush");
                userType.AddMemberName("NeedleBorderThickness");
                userType.AddMemberName("ScaleTickLength");
                userType.AddMemberName("TickCornerRadius");
                xamlType = userType;
                break;

            case 31:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  ACOMv2.Views.CanvasPanelPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_CanvasPanelPage;
                userType.StaticInitializer = StaticInitializer_32_CanvasPanelPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.CommandBarFlyout
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase"));
                userType.Activator = Activate_35_CommandBarFlyout;
                userType.StaticInitializer = StaticInitializer_35_CommandBarFlyout;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.CommandBarFlyout.PrimaryCommands");
                userType.AddMemberName("PrimaryCommands");
                userType.AddMemberName("SecondaryCommands");
                userType.AddMemberName("AlwaysExpanded");
                xamlType = userType;
                break;

            case 36:   //  Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_37_IObservableVector;
                userType.CollectionAdd = VectorAdd_37_IObservableVector;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.ICommandBarElement
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  Microsoft.UI.Xaml.Controls.Expander
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_39_Expander;
                userType.StaticInitializer = StaticInitializer_39_Expander;
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("ExpandDirection");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderTemplateSelector");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 40:   //  Microsoft.UI.Xaml.Controls.ExpandDirection
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_40_ExpandDirection;
                userType.AddEnumValue("Down", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Down);
                userType.AddEnumValue("Up", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Up);
                xamlType = userType;
                break;

            case 41:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_42_ExpanderTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  WinUICommunity.AutoScrollView
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUICommunity.RedirectVisualView"));
                userType.Activator = Activate_43_AutoScrollView;
                userType.StaticInitializer = StaticInitializer_43_AutoScrollView;
                userType.SetContentPropertyName("WinUICommunity.RedirectVisualView.Child");
                userType.AddMemberName("IsPlaying");
                userType.AddMemberName("Spacing");
                userType.AddMemberName("ScrollingPixelsPreSecond");
                xamlType = userType;
                break;

            case 44:   //  WinUICommunity.RedirectVisualView
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_44_RedirectVisualView;
                userType.StaticInitializer = StaticInitializer_44_RedirectVisualView;
                userType.SetContentPropertyName("WinUICommunity.RedirectVisualView.Child");
                userType.AddMemberName("Child");
                xamlType = userType;
                break;

            case 45:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  WinUICommunity.Divider
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_46_Divider;
                userType.StaticInitializer = StaticInitializer_46_Divider;
                userType.SetContentPropertyName("WinUICommunity.Divider.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("LineStroke");
                userType.AddMemberName("ContentPadding");
                userType.AddMemberName("LineStrokeThickness");
                userType.AddMemberName("LineStrokeDashArray");
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.Media.DoubleCollection
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuFlyoutItem"));
                userType.Activator = Activate_48_RadioMenuFlyoutItem;
                userType.StaticInitializer = StaticInitializer_48_RadioMenuFlyoutItem;
                userType.AddMemberName("GroupName");
                userType.AddMemberName("IsChecked");
                userType.AddMemberName("AreCheckStatesEnabled");
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.Controls.MenuFlyoutItem
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Xaml.Controls.ColorPicker
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_51_ColorPicker;
                userType.StaticInitializer = StaticInitializer_51_ColorPicker;
                userType.AddMemberName("ColorSpectrumShape");
                userType.AddMemberName("IsMoreButtonVisible");
                userType.AddMemberName("IsColorSliderVisible");
                userType.AddMemberName("IsColorChannelTextInputVisible");
                userType.AddMemberName("IsHexInputVisible");
                userType.AddMemberName("IsAlphaEnabled");
                userType.AddMemberName("IsAlphaSliderVisible");
                userType.AddMemberName("IsAlphaTextInputVisible");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("Color");
                userType.AddMemberName("ColorSpectrumComponents");
                userType.AddMemberName("IsColorPreviewVisible");
                userType.AddMemberName("IsColorSpectrumVisible");
                userType.AddMemberName("MaxHue");
                userType.AddMemberName("MaxSaturation");
                userType.AddMemberName("MaxValue");
                userType.AddMemberName("MinHue");
                userType.AddMemberName("MinSaturation");
                userType.AddMemberName("MinValue");
                userType.AddMemberName("PreviousColor");
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.ColorSpectrumShape
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_52_ColorSpectrumShape;
                userType.AddEnumValue("Box", global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Box);
                userType.AddEnumValue("Ring", global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape.Ring);
                xamlType = userType;
                break;

            case 53:   //  Windows.UI.Color
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_53_Color;
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.Controls.ColorSpectrumComponents
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_54_ColorSpectrumComponents;
                userType.AddEnumValue("HueValue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueValue);
                userType.AddEnumValue("ValueHue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueHue);
                userType.AddEnumValue("HueSaturation", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.HueSaturation);
                userType.AddEnumValue("SaturationHue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationHue);
                userType.AddEnumValue("SaturationValue", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.SaturationValue);
                userType.AddEnumValue("ValueSaturation", global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents.ValueSaturation);
                xamlType = userType;
                break;

            case 55:   //  System.Nullable`1<Windows.UI.Color>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Windows.UI.Color"));
                userType.BoxInstance = userType.BoxType<global::Windows.UI.Color>;
                userType.StaticInitializer = StaticInitializer_55_Nullable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  WinUICommunity.AllLandingPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUICommunity.ItemsPageBase"));
                userType.Activator = Activate_56_AllLandingPage;
                userType.StaticInitializer = StaticInitializer_56_AllLandingPage;
                userType.AddMemberName("UseFullScreenHeaderImage");
                xamlType = userType;
                break;

            case 57:   //  WinUICommunity.ItemsPageBase
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.StaticInitializer = StaticInitializer_57_ItemsPageBase;
                userType.AddMemberName("HeaderImage");
                userType.AddMemberName("HeaderOverlayImage");
                userType.AddMemberName("HeaderSubtitleText");
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("JsonNavigationViewService");
                userType.AddMemberName("CanExecuteInternalCommand");
                userType.AddMemberName("Items");
                userType.AddMemberName("PlaceholderSource");
                userType.AddMemberName("IsCacheEnabled");
                userType.AddMemberName("EnableLazyLoading");
                userType.AddMemberName("LazyLoadingThreshold");
                userType.AddMemberName("SpaceBetweenHeaderAndGridView");
                userType.AddMemberName("Stretch");
                userType.AddMemberName("NormalizedCenterPoint");
                userType.AddMemberName("OverlayOpacity");
                userType.AddMemberName("HeaderVerticalAlignment");
                userType.AddMemberName("HeaderCornerRadius");
                userType.AddMemberName("HeaderContentMargin");
                userType.AddMemberName("HeaderSubtitleFontSize");
                userType.AddMemberName("GridViewPadding");
                userType.AddMemberName("GridViewVerticalAlignment");
                userType.AddMemberName("HeaderFontSize");
                xamlType = userType;
                break;

            case 58:   //  WinUICommunity.IJsonNavigationViewService
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_58_IJsonNavigationViewService;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 59:   //  System.Collections.Generic.IEnumerable`1<WinUICommunity.DataItem>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_59_IEnumerable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  Microsoft.UI.Xaml.Media.ImageSource
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 61:   //  Microsoft.UI.Xaml.GridLength
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_61_GridLength;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Media.Stretch
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 63:   //  Microsoft.UI.Xaml.VerticalAlignment
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_64_CornerRadius;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  CommunityToolkit.WinUI.Controls.GridSplitter
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase"));
                userType.Activator = Activate_65_GridSplitter;
                userType.StaticInitializer = StaticInitializer_65_GridSplitter;
                userType.AddMemberName("ResizeDirection");
                userType.AddMemberName("ResizeBehavior");
                userType.AddMemberName("ParentLevel");
                xamlType = userType;
                break;

            case 66:   //  CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_66_GridResizeDirection;
                userType.AddEnumValue("Auto", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection.Auto);
                userType.AddEnumValue("Columns", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection.Columns);
                userType.AddEnumValue("Rows", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection.Rows);
                xamlType = userType;
                break;

            case 67:   //  CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_67_GridResizeBehavior;
                userType.AddEnumValue("BasedOnAlignment", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.BasedOnAlignment);
                userType.AddEnumValue("CurrentAndNext", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.CurrentAndNext);
                userType.AddEnumValue("PreviousAndCurrent", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.PreviousAndCurrent);
                userType.AddEnumValue("PreviousAndNext", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.PreviousAndNext);
                xamlType = userType;
                break;

            case 68:   //  CommunityToolkit.WinUI.Controls.TabbedCommandBar
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView"));
                userType.Activator = Activate_68_TabbedCommandBar;
                userType.StaticInitializer = StaticInitializer_68_TabbedCommandBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.NavigationView.MenuItems");
                xamlType = userType;
                break;

            case 69:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_69_NavigationView;
                userType.StaticInitializer = StaticInitializer_69_NavigationView;
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 70:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 71:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_71_NavigationViewDisplayMode;
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 72:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_72_NavigationViewBackButtonVisible;
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 73:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 74:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 75:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_75_NavigationViewOverflowLabelMode;
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_76_NavigationViewPaneDisplayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 77:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_77_NavigationViewSelectionFollowsFocus;
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 78:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_78_NavigationViewShoulderNavigationEnabled;
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 79:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_79_NavigationViewTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 80:   //  TextControlBoxNS.TextControlBox
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_80_TextControlBox;
                userType.StaticInitializer = StaticInitializer_80_TextControlBox;
                userType.AddMemberName("ShowLineHighlighter");
                userType.AddMemberName("SyntaxHighlighting");
                userType.AddMemberName("IsReadonly");
                userType.AddMemberName("Text");
                userType.AddMemberName("CodeLanguage");
                userType.AddMemberName("LineEnding");
                userType.AddMemberName("SpaceBetweenLineNumberAndText");
                userType.AddMemberName("CursorPosition");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("RenderedFontSize");
                userType.AddMemberName("RequestedTheme");
                userType.AddMemberName("Design");
                userType.AddMemberName("ShowLineNumbers");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("CursorSize");
                userType.AddMemberName("ContextFlyout");
                userType.AddMemberName("ContextFlyoutDisabled");
                userType.AddMemberName("SelectionStart");
                userType.AddMemberName("SelectionLength");
                userType.AddMemberName("SelectedText");
                userType.AddMemberName("NumberOfLines");
                userType.AddMemberName("CurrentLineIndex");
                userType.AddMemberName("ScrollBarPosition");
                userType.AddMemberName("CharacterCount");
                userType.AddMemberName("VerticalScrollSensitivity");
                userType.AddMemberName("HorizontalScrollSensitivity");
                userType.AddMemberName("VerticalScroll");
                userType.AddMemberName("HorizontalScroll");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("UseSpacesInsteadTabs");
                userType.AddMemberName("NumberOfSpacesForTab");
                userType.AddMemberName("SearchIsOpen");
                userType.AddMemberName("Lines");
                userType.AddMemberName("DoAutoPairing");
                xamlType = userType;
                break;

            case 81:   //  TextControlBoxNS.CodeLanguage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_81_CodeLanguage;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 82:   //  TextControlBoxNS.LineEnding
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_82_LineEnding;
                userType.AddEnumValue("LF", global::TextControlBoxNS.LineEnding.LF);
                userType.AddEnumValue("CRLF", global::TextControlBoxNS.LineEnding.CRLF);
                userType.AddEnumValue("CR", global::TextControlBoxNS.LineEnding.CR);
                xamlType = userType;
                break;

            case 83:   //  Single
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 84:   //  TextControlBoxNS.CursorPosition
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_84_CursorPosition;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 85:   //  Microsoft.UI.Xaml.Media.FontFamily
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 86:   //  Microsoft.UI.Xaml.ElementTheme
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 87:   //  TextControlBoxNS.TextControlBoxDesign
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_87_TextControlBoxDesign;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 88:   //  TextControlBoxNS.CursorSize
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_88_CursorSize;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 89:   //  Microsoft.UI.Xaml.Controls.MenuFlyout
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 90:   //  TextControlBoxNS.ScrollBarPosition
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_90_ScrollBarPosition;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 91:   //  System.Collections.Generic.IEnumerable`1<String>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_91_IEnumerable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 92:   //  Microsoft.UI.Xaml.Controls.TabView
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_92_TabView;
                userType.StaticInitializer = StaticInitializer_92_TabView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.TabView.TabItems");
                userType.AddMemberName("TabItems");
                userType.AddMemberName("AddTabButtonCommand");
                userType.AddMemberName("AddTabButtonCommandParameter");
                userType.AddMemberName("AllowDropTabs");
                userType.AddMemberName("CanDragTabs");
                userType.AddMemberName("CanReorderTabs");
                userType.AddMemberName("CanTearOutTabs");
                userType.AddMemberName("CloseButtonOverlayMode");
                userType.AddMemberName("IsAddTabButtonVisible");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("TabItemTemplate");
                userType.AddMemberName("TabItemTemplateSelector");
                userType.AddMemberName("TabItemsSource");
                userType.AddMemberName("TabStripFooter");
                userType.AddMemberName("TabStripFooterTemplate");
                userType.AddMemberName("TabStripHeader");
                userType.AddMemberName("TabStripHeaderTemplate");
                userType.AddMemberName("TabWidthMode");
                xamlType = userType;
                break;

            case 93:   //  System.Windows.Input.ICommand
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_93_ICommand;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 94:   //  Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_94_TabViewCloseButtonOverlayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.Auto);
                userType.AddEnumValue("OnPointerOver", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.OnPointerOver);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.Always);
                xamlType = userType;
                break;

            case 95:   //  Microsoft.UI.Xaml.Controls.TabViewWidthMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_95_TabViewWidthMode;
                userType.AddEnumValue("Equal", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.Equal);
                userType.AddEnumValue("SizeToContent", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.SizeToContent);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.Compact);
                xamlType = userType;
                break;

            case 96:   //  CommunityToolkit.WinUI.FontIconExtension
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension"));
                userType.Activator = Activate_96_FontIconExtension;
                userType.StaticInitializer = StaticInitializer_96_FontIconExtension;
                userType.AddMemberName("Glyph");
                userType.AddMemberName("FontFamily");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 97:   //  CommunityToolkit.WinUI.TextIconExtension
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.StaticInitializer = StaticInitializer_97_TextIconExtension;
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("IsTextScaleFactorEnabled");
                userType.AddMemberName("MirroredWhenRightToLeft");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 98:   //  Microsoft.UI.Xaml.Markup.MarkupExtension
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 99:   //  Windows.UI.Text.FontWeight
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_99_FontWeight;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 100:   //  Windows.UI.Text.FontStyle
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_100_FontStyle;
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 101:   //  CommunityToolkit.WinUI.Controls.TabbedCommandBarItem
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.CommandBar"));
                userType.Activator = Activate_101_TabbedCommandBarItem;
                userType.StaticInitializer = StaticInitializer_101_TabbedCommandBarItem;
                userType.AddMemberName("Header");
                userType.AddMemberName("IsContextual");
                userType.AddMemberName("OverflowButtonAlignment");
                userType.AddMemberName("CommandAlignment");
                xamlType = userType;
                break;

            case 102:   //  Microsoft.UI.Xaml.Controls.CommandBar
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 103:   //  Microsoft.UI.Xaml.HorizontalAlignment
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 104:   //  Microsoft.UI.Xaml.Controls.SplitButton
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_104_SplitButton;
                userType.StaticInitializer = StaticInitializer_104_SplitButton;
                userType.AddMemberName("Flyout");
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                xamlType = userType;
                break;

            case 105:   //  Syncfusion.UI.Xaml.Charts.SfCartesianChart
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase"));
                userType.Activator = Activate_105_SfCartesianChart;
                userType.StaticInitializer = StaticInitializer_105_SfCartesianChart;
                userType.SetContentPropertyName("Syncfusion.UI.Xaml.Charts.SfCartesianChart.Series");
                userType.AddMemberName("Series");
                userType.AddMemberName("XAxes");
                userType.AddMemberName("YAxes");
                userType.AddMemberName("SelectionBehavior");
                userType.AddMemberName("ZoomPanBehavior");
                userType.AddMemberName("TrackballBehavior");
                userType.AddMemberName("CrosshairBehavior");
                userType.AddMemberName("PaletteBrushes");
                userType.AddMemberName("PlotAreaBorderBrush");
                userType.AddMemberName("PlotAreaBorderThickness");
                userType.AddMemberName("PlotAreaBackground");
                userType.AddMemberName("IsTransposed");
                userType.AddMemberName("EnableSideBySideSeriesPlacement");
                xamlType = userType;
                break;

            case 106:   //  Syncfusion.UI.Xaml.Charts.ChartBase
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_106_ChartBase;
                userType.AddMemberName("Legend");
                userType.AddMemberName("TooltipBehavior");
                userType.AddMemberName("InteractiveBehavior");
                userType.AddMemberName("SeriesClipRect");
                userType.AddMemberName("Header");
                userType.AddMemberName("HorizontalHeaderAlignment");
                userType.AddMemberName("VerticalHeaderAlignment");
                xamlType = userType;
                break;

            case 107:   //  Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>"));
                userType.StaticInitializer = StaticInitializer_107_CartesianSeriesCollection;
                userType.CollectionAdd = VectorAdd_107_CartesianSeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 108:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>"));
                userType.Activator = Activate_108_ObservableCollection;
                userType.StaticInitializer = StaticInitializer_108_ObservableCollection;
                userType.CollectionAdd = VectorAdd_108_ObservableCollection;
                xamlType = userType;
                break;

            case 109:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_109_Collection;
                userType.StaticInitializer = StaticInitializer_109_Collection;
                userType.CollectionAdd = VectorAdd_109_Collection;
                xamlType = userType;
                break;

            case 110:   //  Syncfusion.UI.Xaml.Charts.CartesianSeries
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries"));
                userType.StaticInitializer = StaticInitializer_110_CartesianSeries;
                userType.AddMemberName("DataLabelSettings");
                userType.AddMemberName("XAxisName");
                userType.AddMemberName("YAxisName");
                userType.AddMemberName("ShowTrackballLabel");
                xamlType = userType;
                break;

            case 111:   //  Syncfusion.UI.Xaml.Charts.ChartSeries
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_111_ChartSeries;
                userType.AddMemberName("SelectionBehavior");
                userType.AddMemberName("PaletteBrushes");
                userType.AddMemberName("TooltipTemplate");
                userType.AddMemberName("EnableTooltip");
                userType.AddMemberName("ListenPropertyChange");
                userType.AddMemberName("IsSeriesVisible");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("TrackballLabelTemplate");
                userType.AddMemberName("Fill");
                userType.AddMemberName("Label");
                userType.AddMemberName("LegendIcon");
                userType.AddMemberName("LegendIconTemplate");
                userType.AddMemberName("IsVisibleOnLegend");
                userType.AddMemberName("XBindingPath");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("Chart");
                userType.AddMemberName("ShowDataLabels");
                userType.AddMemberName("ActualXAxis");
                userType.AddMemberName("ActualYAxis");
                xamlType = userType;
                break;

            case 112:   //  Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings"));
                userType.StaticInitializer = StaticInitializer_112_CartesianDataLabelSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 113:   //  Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_113_ChartDataLabelSettings;
                xamlType = userType;
                break;

            case 114:   //  Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"));
                userType.StaticInitializer = StaticInitializer_114_DataPointSelectionBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 115:   //  Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_115_ChartSelectionBehavior;
                xamlType = userType;
                break;

            case 116:   //  Syncfusion.UI.Xaml.Charts.ChartBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_116_ChartBehavior;
                xamlType = userType;
                break;

            case 117:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_117_IList;
                userType.CollectionAdd = VectorAdd_117_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 118:   //  Syncfusion.UI.Xaml.Charts.ChartLegendIcon
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_118_ChartLegendIcon;
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.None);
                userType.AddEnumValue("SeriesType", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.SeriesType);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Rectangle);
                userType.AddEnumValue("StraightLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.StraightLine);
                userType.AddEnumValue("VerticalLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.VerticalLine);
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Circle);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Diamond);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Pentagon);
                userType.AddEnumValue("Hexagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Hexagon);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Triangle);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.InvertedTriangle);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Cross);
                userType.AddEnumValue("Plus", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Plus);
                xamlType = userType;
                break;

            case 119:   //  TimeSpan
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_119_TimeSpan;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 120:   //  Syncfusion.UI.Xaml.Charts.ChartAxis
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_120_ChartAxis;
                userType.AddMemberName("VisibleMinimum");
                userType.AddMemberName("VisibleMaximum");
                userType.AddMemberName("PlotOffsetStart");
                userType.AddMemberName("PlotOffsetEnd");
                userType.AddMemberName("AxisLineOffset");
                userType.AddMemberName("LabelRotation");
                userType.AddMemberName("AxisLineStyle");
                userType.AddMemberName("LabelStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsInversed");
                userType.AddMemberName("EdgeLabelsDrawingMode");
                userType.AddMemberName("MajorGridLineStyle");
                userType.AddMemberName("MajorTickStyle");
                userType.AddMemberName("ZoomPosition");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ShowMajorGridLines");
                userType.AddMemberName("EnableAutoIntervalOnZooming");
                userType.AddMemberName("LabelsIntersectAction");
                userType.AddMemberName("LabelExtent");
                userType.AddMemberName("OpposedPosition");
                userType.AddMemberName("TickLineSize");
                userType.AddMemberName("ShowTrackballLabel");
                userType.AddMemberName("TrackballLabelTemplate");
                userType.AddMemberName("CrosshairLabelTemplate");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("AutoScrollingMode");
                userType.AddMemberName("AutoScrollingDelta");
                xamlType = userType;
                break;

            case 121:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>"));
                userType.StaticInitializer = StaticInitializer_121_ObservableCollection;
                userType.CollectionAdd = VectorAdd_121_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 122:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_122_Collection;
                userType.StaticInitializer = StaticInitializer_122_Collection;
                userType.CollectionAdd = VectorAdd_122_Collection;
                xamlType = userType;
                break;

            case 123:   //  Syncfusion.UI.Xaml.Charts.LabelStyle
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_123_LabelStyle;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 124:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_124_EdgeLabelsDrawingMode;
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Center);
                userType.AddEnumValue("Shift", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Shift);
                userType.AddEnumValue("Fit", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Fit);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Hide);
                xamlType = userType;
                break;

            case 125:   //  Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_125_AxisLabelsIntersectAction;
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.None);
                userType.AddEnumValue("MultipleRows", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.MultipleRows);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Hide);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Auto);
                userType.AddEnumValue("Wrap", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Wrap);
                xamlType = userType;
                break;

            case 126:   //  Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_126_ChartAutoScrollingMode;
                userType.AddEnumValue("Start", global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.Start);
                userType.AddEnumValue("End", global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.End);
                xamlType = userType;
                break;

            case 127:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>"));
                userType.StaticInitializer = StaticInitializer_127_ObservableCollection;
                userType.CollectionAdd = VectorAdd_127_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 128:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_128_Collection;
                userType.StaticInitializer = StaticInitializer_128_Collection;
                userType.CollectionAdd = VectorAdd_128_Collection;
                xamlType = userType;
                break;

            case 129:   //  Syncfusion.UI.Xaml.Charts.RangeAxisBase
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                userType.StaticInitializer = StaticInitializer_129_RangeAxisBase;
                userType.AddMemberName("EdgeLabelsVisibilityMode");
                userType.AddMemberName("MinorTicksPerInterval");
                userType.AddMemberName("MinorTickLineSize");
                userType.AddMemberName("MinorGridLineStyle");
                userType.AddMemberName("MinorTickStyle");
                userType.AddMemberName("ShowMinorGridLines");
                xamlType = userType;
                break;

            case 130:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_130_EdgeLabelsVisibilityMode;
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Default);
                userType.AddEnumValue("AlwaysVisible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.AlwaysVisible);
                userType.AddEnumValue("Visible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Visible);
                xamlType = userType;
                break;

            case 131:   //  Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"));
                userType.StaticInitializer = StaticInitializer_131_SeriesSelectionBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 132:   //  Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_132_ChartZoomPanBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 133:   //  Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_133_ChartTrackballBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 134:   //  Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_134_ChartCrosshairBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 135:   //  Syncfusion.UI.Xaml.Charts.ChartLegend
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_135_ChartLegend;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 136:   //  Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_136_ChartTooltipBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 137:   //  Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.StaticInitializer = StaticInitializer_137_ChartInteractiveBehavior;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 138:   //  Windows.Foundation.Rect
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 139:   //  Syncfusion.UI.Xaml.Charts.CategoryAxis
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                userType.Activator = Activate_139_CategoryAxis;
                userType.StaticInitializer = StaticInitializer_139_CategoryAxis;
                userType.AddMemberName("Interval");
                userType.AddMemberName("LabelPlacement");
                xamlType = userType;
                break;

            case 140:   //  Syncfusion.UI.Xaml.Charts.LabelPlacement
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_140_LabelPlacement;
                userType.AddEnumValue("OnTicks", global::Syncfusion.UI.Xaml.Charts.LabelPlacement.OnTicks);
                userType.AddEnumValue("BetweenTicks", global::Syncfusion.UI.Xaml.Charts.LabelPlacement.BetweenTicks);
                xamlType = userType;
                break;

            case 141:   //  Syncfusion.UI.Xaml.Charts.NumericalAxis
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase"));
                userType.Activator = Activate_141_NumericalAxis;
                userType.StaticInitializer = StaticInitializer_141_NumericalAxis;
                userType.AddMemberName("Interval");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("RangePadding");
                userType.AddMemberName("ActualMinimum");
                userType.AddMemberName("ActualMaximum");
                xamlType = userType;
                break;

            case 142:   //  Syncfusion.UI.Xaml.Charts.NumericalPadding
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_142_NumericalPadding;
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Auto);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.None);
                userType.AddEnumValue("Round", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Round);
                userType.AddEnumValue("Normal", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Normal);
                userType.AddEnumValue("Additional", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Additional);
                userType.AddEnumValue("RoundStart", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundStart);
                userType.AddEnumValue("RoundEnd", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundEnd);
                userType.AddEnumValue("PrependInterval", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.PrependInterval);
                userType.AddEnumValue("AppendInterval", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.AppendInterval);
                xamlType = userType;
                break;

            case 143:   //  Syncfusion.UI.Xaml.Charts.ColumnSeries
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries"));
                userType.Activator = Activate_143_ColumnSeries;
                userType.StaticInitializer = StaticInitializer_143_ColumnSeries;
                userType.AddMemberName("SegmentSpacing");
                userType.AddMemberName("CustomTemplate");
                userType.AddMemberName("Stroke");
                xamlType = userType;
                break;

            case 144:   //  Syncfusion.UI.Xaml.Charts.XyDataSeries
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries"));
                userType.StaticInitializer = StaticInitializer_144_XyDataSeries;
                userType.AddMemberName("YBindingPath");
                userType.AddMemberName("StrokeWidth");
                xamlType = userType;
                break;

            case 145:   //  ACOMv2.Views.HomeLandingPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_145_HomeLandingPage;
                userType.StaticInitializer = StaticInitializer_145_HomeLandingPage;
                userType.AddMemberName("AppInfo");
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 146:   //  ACOMv2.ViewModels.HomeLandingViewModel
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_146_HomeLandingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 147:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableObject
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_147_ObservableObject;
                xamlType = userType;
                break;

            case 148:   //  WinUICommunity.TitleBar
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_148_TitleBar;
                userType.StaticInitializer = StaticInitializer_148_TitleBar;
                userType.AddMemberName("Title");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("Subtitle");
                userType.AddMemberName("Content");
                userType.AddMemberName("Footer");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 149:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 150:   //  WinUICommunity.TitleBarTemplateSettings
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_150_TitleBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 151:   //  WinUICommunity.BreadcrumbNavigator
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.BreadcrumbBar"));
                userType.Activator = Activate_151_BreadcrumbNavigator;
                userType.StaticInitializer = StaticInitializer_151_BreadcrumbNavigator;
                userType.AddMemberName("BreadCrumbs");
                userType.AddMemberName("UseBuiltInEventForFrame");
                userType.AddMemberName("Frame");
                userType.AddMemberName("PageDictionary");
                userType.AddMemberName("NavigationView");
                userType.AddMemberName("HeaderVisibilityOptions");
                userType.AddMemberName("IsHeaderVisible");
                userType.AddMemberName("PageTitle");
                userType.AddMemberName("ClearNavigation");
                xamlType = userType;
                break;

            case 152:   //  Microsoft.UI.Xaml.Controls.BreadcrumbBar
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_152_BreadcrumbBar;
                userType.StaticInitializer = StaticInitializer_152_BreadcrumbBar;
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                xamlType = userType;
                break;

            case 153:   //  System.Collections.ObjectModel.ObservableCollection`1<WinUICommunity.NavigationBreadcrumb>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<WinUICommunity.NavigationBreadcrumb>"));
                userType.StaticInitializer = StaticInitializer_153_ObservableCollection;
                userType.CollectionAdd = VectorAdd_153_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 154:   //  System.Collections.ObjectModel.Collection`1<WinUICommunity.NavigationBreadcrumb>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_154_Collection;
                userType.StaticInitializer = StaticInitializer_154_Collection;
                userType.CollectionAdd = VectorAdd_154_Collection;
                xamlType = userType;
                break;

            case 155:   //  WinUICommunity.NavigationBreadcrumb
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_155_NavigationBreadcrumb;
                userType.AddMemberName("Label");
                userType.AddMemberName("Page");
                userType.AddMemberName("Parameter");
                xamlType = userType;
                break;

            case 156:   //  System.Type
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.StaticInitializer = StaticInitializer_156_Type;
                userType.AddMemberName("Assembly");
                userType.AddMemberName("AssemblyQualifiedName");
                userType.AddMemberName("Attributes");
                userType.AddMemberName("BaseType");
                userType.AddMemberName("ContainsGenericParameters");
                userType.AddMemberName("DeclaringMethod");
                userType.AddMemberName("DeclaringType");
                userType.AddMemberName("FullName");
                userType.AddMemberName("GenericParameterAttributes");
                userType.AddMemberName("GenericParameterPosition");
                userType.AddMemberName("GenericTypeArguments");
                userType.AddMemberName("GUID");
                userType.AddMemberName("HasElementType");
                userType.AddMemberName("IsAbstract");
                userType.AddMemberName("IsAnsiClass");
                userType.AddMemberName("IsArray");
                userType.AddMemberName("IsAutoClass");
                userType.AddMemberName("IsAutoLayout");
                userType.AddMemberName("IsByRef");
                userType.AddMemberName("IsByRefLike");
                userType.AddMemberName("IsClass");
                userType.AddMemberName("IsCOMObject");
                userType.AddMemberName("IsConstructedGenericType");
                userType.AddMemberName("IsContextful");
                userType.AddMemberName("IsEnum");
                userType.AddMemberName("IsExplicitLayout");
                userType.AddMemberName("IsFunctionPointer");
                userType.AddMemberName("IsGenericMethodParameter");
                userType.AddMemberName("IsGenericParameter");
                userType.AddMemberName("IsGenericType");
                userType.AddMemberName("IsGenericTypeDefinition");
                userType.AddMemberName("IsGenericTypeParameter");
                userType.AddMemberName("IsImport");
                userType.AddMemberName("IsInterface");
                userType.AddMemberName("IsLayoutSequential");
                userType.AddMemberName("IsMarshalByRef");
                userType.AddMemberName("IsNested");
                userType.AddMemberName("IsNestedAssembly");
                userType.AddMemberName("IsNestedFamANDAssem");
                userType.AddMemberName("IsNestedFamily");
                userType.AddMemberName("IsNestedFamORAssem");
                userType.AddMemberName("IsNestedPrivate");
                userType.AddMemberName("IsNestedPublic");
                userType.AddMemberName("IsNotPublic");
                userType.AddMemberName("IsPointer");
                userType.AddMemberName("IsPrimitive");
                userType.AddMemberName("IsPublic");
                userType.AddMemberName("IsSealed");
                userType.AddMemberName("IsSecurityCritical");
                userType.AddMemberName("IsSecuritySafeCritical");
                userType.AddMemberName("IsSecurityTransparent");
                userType.AddMemberName("IsSerializable");
                userType.AddMemberName("IsSignatureType");
                userType.AddMemberName("IsSpecialName");
                userType.AddMemberName("IsSZArray");
                userType.AddMemberName("IsTypeDefinition");
                userType.AddMemberName("IsUnicodeClass");
                userType.AddMemberName("IsUnmanagedFunctionPointer");
                userType.AddMemberName("IsValueType");
                userType.AddMemberName("IsVariableBoundArray");
                userType.AddMemberName("IsVisible");
                userType.AddMemberName("MemberType");
                userType.AddMemberName("Module");
                userType.AddMemberName("Namespace");
                userType.AddMemberName("ReflectedType");
                userType.AddMemberName("StructLayoutAttribute");
                userType.AddMemberName("TypeHandle");
                userType.AddMemberName("TypeInitializer");
                userType.AddMemberName("UnderlyingSystemType");
                xamlType = userType;
                break;

            case 157:   //  System.Reflection.MemberInfo
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_157_MemberInfo;
                userType.AddMemberName("CustomAttributes");
                userType.AddMemberName("IsCollectible");
                userType.AddMemberName("MetadataToken");
                userType.AddMemberName("Name");
                xamlType = userType;
                break;

            case 158:   //  Microsoft.UI.Xaml.Controls.Frame
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 159:   //  System.Collections.Generic.Dictionary`2<System.Type, WinUICommunity.BreadcrumbPageConfig>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_159_Dictionary;
                userType.DictionaryAdd = MapAdd_159_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 160:   //  WinUICommunity.BreadcrumbPageConfig
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_160_BreadcrumbPageConfig;
                userType.StaticInitializer = StaticInitializer_160_BreadcrumbPageConfig;
                userType.AddMemberName("PageTitle");
                userType.AddMemberName("IsHeaderVisible");
                userType.AddMemberName("ClearNavigation");
                xamlType = userType;
                break;

            case 161:   //  System.Reflection.Assembly
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_161_Assembly;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 162:   //  System.Reflection.TypeAttributes
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_162_TypeAttributes;
                userType.AddEnumValue("AnsiClass", global::System.Reflection.TypeAttributes.AnsiClass);
                userType.AddEnumValue("AutoLayout", global::System.Reflection.TypeAttributes.AutoLayout);
                userType.AddEnumValue("Class", global::System.Reflection.TypeAttributes.Class);
                userType.AddEnumValue("NotPublic", global::System.Reflection.TypeAttributes.NotPublic);
                userType.AddEnumValue("Public", global::System.Reflection.TypeAttributes.Public);
                userType.AddEnumValue("NestedPublic", global::System.Reflection.TypeAttributes.NestedPublic);
                userType.AddEnumValue("NestedPrivate", global::System.Reflection.TypeAttributes.NestedPrivate);
                userType.AddEnumValue("NestedFamily", global::System.Reflection.TypeAttributes.NestedFamily);
                userType.AddEnumValue("NestedAssembly", global::System.Reflection.TypeAttributes.NestedAssembly);
                userType.AddEnumValue("NestedFamANDAssem", global::System.Reflection.TypeAttributes.NestedFamANDAssem);
                userType.AddEnumValue("NestedFamORAssem", global::System.Reflection.TypeAttributes.NestedFamORAssem);
                userType.AddEnumValue("VisibilityMask", global::System.Reflection.TypeAttributes.VisibilityMask);
                userType.AddEnumValue("SequentialLayout", global::System.Reflection.TypeAttributes.SequentialLayout);
                userType.AddEnumValue("ExplicitLayout", global::System.Reflection.TypeAttributes.ExplicitLayout);
                userType.AddEnumValue("LayoutMask", global::System.Reflection.TypeAttributes.LayoutMask);
                userType.AddEnumValue("ClassSemanticsMask", global::System.Reflection.TypeAttributes.ClassSemanticsMask);
                userType.AddEnumValue("Interface", global::System.Reflection.TypeAttributes.Interface);
                userType.AddEnumValue("Abstract", global::System.Reflection.TypeAttributes.Abstract);
                userType.AddEnumValue("Sealed", global::System.Reflection.TypeAttributes.Sealed);
                userType.AddEnumValue("SpecialName", global::System.Reflection.TypeAttributes.SpecialName);
                userType.AddEnumValue("RTSpecialName", global::System.Reflection.TypeAttributes.RTSpecialName);
                userType.AddEnumValue("Import", global::System.Reflection.TypeAttributes.Import);
                userType.AddEnumValue("Serializable", global::System.Reflection.TypeAttributes.Serializable);
                userType.AddEnumValue("WindowsRuntime", global::System.Reflection.TypeAttributes.WindowsRuntime);
                userType.AddEnumValue("UnicodeClass", global::System.Reflection.TypeAttributes.UnicodeClass);
                userType.AddEnumValue("AutoClass", global::System.Reflection.TypeAttributes.AutoClass);
                userType.AddEnumValue("CustomFormatClass", global::System.Reflection.TypeAttributes.CustomFormatClass);
                userType.AddEnumValue("StringFormatMask", global::System.Reflection.TypeAttributes.StringFormatMask);
                userType.AddEnumValue("HasSecurity", global::System.Reflection.TypeAttributes.HasSecurity);
                userType.AddEnumValue("ReservedMask", global::System.Reflection.TypeAttributes.ReservedMask);
                userType.AddEnumValue("BeforeFieldInit", global::System.Reflection.TypeAttributes.BeforeFieldInit);
                userType.AddEnumValue("CustomFormatMask", global::System.Reflection.TypeAttributes.CustomFormatMask);
                xamlType = userType;
                break;

            case 163:   //  System.Reflection.MethodBase
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.StaticInitializer = StaticInitializer_163_MethodBase;
                xamlType = userType;
                break;

            case 164:   //  System.Reflection.GenericParameterAttributes
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_164_GenericParameterAttributes;
                userType.AddEnumValue("None", global::System.Reflection.GenericParameterAttributes.None);
                userType.AddEnumValue("Covariant", global::System.Reflection.GenericParameterAttributes.Covariant);
                userType.AddEnumValue("Contravariant", global::System.Reflection.GenericParameterAttributes.Contravariant);
                userType.AddEnumValue("VarianceMask", global::System.Reflection.GenericParameterAttributes.VarianceMask);
                userType.AddEnumValue("ReferenceTypeConstraint", global::System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint);
                userType.AddEnumValue("NotNullableValueTypeConstraint", global::System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint);
                userType.AddEnumValue("DefaultConstructorConstraint", global::System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint);
                userType.AddEnumValue("SpecialConstraintMask", global::System.Reflection.GenericParameterAttributes.SpecialConstraintMask);
                userType.AddEnumValue("AllowByRefLike", global::System.Reflection.GenericParameterAttributes.AllowByRefLike);
                xamlType = userType;
                break;

            case 165:   //  System.Type[]
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 166:   //  System.Array
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_166_Array;
                xamlType = userType;
                break;

            case 167:   //  Guid
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_167_Guid;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 168:   //  System.Reflection.MemberTypes
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_168_MemberTypes;
                userType.AddEnumValue("Constructor", global::System.Reflection.MemberTypes.Constructor);
                userType.AddEnumValue("Event", global::System.Reflection.MemberTypes.Event);
                userType.AddEnumValue("Field", global::System.Reflection.MemberTypes.Field);
                userType.AddEnumValue("Method", global::System.Reflection.MemberTypes.Method);
                userType.AddEnumValue("Property", global::System.Reflection.MemberTypes.Property);
                userType.AddEnumValue("TypeInfo", global::System.Reflection.MemberTypes.TypeInfo);
                userType.AddEnumValue("Custom", global::System.Reflection.MemberTypes.Custom);
                userType.AddEnumValue("NestedType", global::System.Reflection.MemberTypes.NestedType);
                userType.AddEnumValue("All", global::System.Reflection.MemberTypes.All);
                xamlType = userType;
                break;

            case 169:   //  System.Reflection.Module
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_169_Module;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 170:   //  System.Runtime.InteropServices.StructLayoutAttribute
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Attribute"));
                userType.StaticInitializer = StaticInitializer_170_StructLayoutAttribute;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 171:   //  System.Attribute
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_171_Attribute;
                xamlType = userType;
                break;

            case 172:   //  System.RuntimeTypeHandle
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_172_RuntimeTypeHandle;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 173:   //  System.Reflection.ConstructorInfo
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MethodBase"));
                userType.StaticInitializer = StaticInitializer_173_ConstructorInfo;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 174:   //  System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_174_IEnumerable;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 175:   //  WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_175_BreadcrumbNavigatorHeaderVisibilityOptions;
                userType.AddEnumValue("None", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.None);
                userType.AddEnumValue("BreadcrumbNavigatorOnly", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.BreadcrumbNavigatorOnly);
                userType.AddEnumValue("NavigationViewOnly", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.NavigationViewOnly);
                userType.AddEnumValue("Both", global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions.Both);
                xamlType = userType;
                break;

            case 176:   //  CommunityToolkit.WinUI.Controls.PropertySizer
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase"));
                userType.Activator = Activate_176_PropertySizer;
                userType.StaticInitializer = StaticInitializer_176_PropertySizer;
                userType.AddMemberName("Binding");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("IsDragInverted");
                userType.AddMemberName("Maximum");
                xamlType = userType;
                break;

            case 177:   //  WinUICommunity.BitmapIconSourceExtension
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.Activator = Activate_177_BitmapIconSourceExtension;
                userType.StaticInitializer = StaticInitializer_177_BitmapIconSourceExtension;
                userType.AddMemberName("Source");
                userType.AddMemberName("ShowAsMonochrome");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 178:   //  System.Uri
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_178_Uri;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 179:   //  WinUICommunity.FontIconExtension
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUICommunity.TextIconExtension"));
                userType.Activator = Activate_179_FontIconExtension;
                userType.StaticInitializer = StaticInitializer_179_FontIconExtension;
                userType.AddMemberName("Glyph");
                userType.AddMemberName("GlyphCode");
                userType.AddMemberName("GlyphName");
                userType.AddMemberName("FontFamily");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 180:   //  WinUICommunity.TextIconExtension
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.StaticInitializer = StaticInitializer_180_TextIconExtension;
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("IsTextScaleFactorEnabled");
                userType.AddMemberName("MirroredWhenRightToLeft");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 181:   //  WinUICommunity.GlyphCode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_181_GlyphCode;
                userType.AddEnumValue("None", global::WinUICommunity.GlyphCode.None);
                userType.AddEnumValue("E700", global::WinUICommunity.GlyphCode.E700);
                userType.AddEnumValue("E701", global::WinUICommunity.GlyphCode.E701);
                userType.AddEnumValue("E702", global::WinUICommunity.GlyphCode.E702);
                userType.AddEnumValue("E703", global::WinUICommunity.GlyphCode.E703);
                userType.AddEnumValue("E704", global::WinUICommunity.GlyphCode.E704);
                userType.AddEnumValue("E705", global::WinUICommunity.GlyphCode.E705);
                userType.AddEnumValue("E706", global::WinUICommunity.GlyphCode.E706);
                userType.AddEnumValue("E707", global::WinUICommunity.GlyphCode.E707);
                userType.AddEnumValue("E708", global::WinUICommunity.GlyphCode.E708);
                userType.AddEnumValue("E709", global::WinUICommunity.GlyphCode.E709);
                userType.AddEnumValue("E70A", global::WinUICommunity.GlyphCode.E70A);
                userType.AddEnumValue("E70B", global::WinUICommunity.GlyphCode.E70B);
                userType.AddEnumValue("E70C", global::WinUICommunity.GlyphCode.E70C);
                userType.AddEnumValue("E70D", global::WinUICommunity.GlyphCode.E70D);
                userType.AddEnumValue("E70E", global::WinUICommunity.GlyphCode.E70E);
                userType.AddEnumValue("E70F", global::WinUICommunity.GlyphCode.E70F);
                userType.AddEnumValue("E710", global::WinUICommunity.GlyphCode.E710);
                userType.AddEnumValue("E711", global::WinUICommunity.GlyphCode.E711);
                userType.AddEnumValue("E712", global::WinUICommunity.GlyphCode.E712);
                userType.AddEnumValue("E713", global::WinUICommunity.GlyphCode.E713);
                userType.AddEnumValue("E714", global::WinUICommunity.GlyphCode.E714);
                userType.AddEnumValue("E715", global::WinUICommunity.GlyphCode.E715);
                userType.AddEnumValue("E716", global::WinUICommunity.GlyphCode.E716);
                userType.AddEnumValue("E717", global::WinUICommunity.GlyphCode.E717);
                userType.AddEnumValue("E718", global::WinUICommunity.GlyphCode.E718);
                userType.AddEnumValue("E719", global::WinUICommunity.GlyphCode.E719);
                userType.AddEnumValue("E71A", global::WinUICommunity.GlyphCode.E71A);
                userType.AddEnumValue("E71B", global::WinUICommunity.GlyphCode.E71B);
                userType.AddEnumValue("E71C", global::WinUICommunity.GlyphCode.E71C);
                userType.AddEnumValue("E71D", global::WinUICommunity.GlyphCode.E71D);
                userType.AddEnumValue("E71E", global::WinUICommunity.GlyphCode.E71E);
                userType.AddEnumValue("E71F", global::WinUICommunity.GlyphCode.E71F);
                userType.AddEnumValue("E720", global::WinUICommunity.GlyphCode.E720);
                userType.AddEnumValue("E721", global::WinUICommunity.GlyphCode.E721);
                userType.AddEnumValue("E722", global::WinUICommunity.GlyphCode.E722);
                userType.AddEnumValue("E723", global::WinUICommunity.GlyphCode.E723);
                userType.AddEnumValue("E724", global::WinUICommunity.GlyphCode.E724);
                userType.AddEnumValue("E725", global::WinUICommunity.GlyphCode.E725);
                userType.AddEnumValue("E726", global::WinUICommunity.GlyphCode.E726);
                userType.AddEnumValue("E727", global::WinUICommunity.GlyphCode.E727);
                userType.AddEnumValue("E728", global::WinUICommunity.GlyphCode.E728);
                userType.AddEnumValue("E729", global::WinUICommunity.GlyphCode.E729);
                userType.AddEnumValue("E72A", global::WinUICommunity.GlyphCode.E72A);
                userType.AddEnumValue("E72B", global::WinUICommunity.GlyphCode.E72B);
                userType.AddEnumValue("E72C", global::WinUICommunity.GlyphCode.E72C);
                userType.AddEnumValue("E72D", global::WinUICommunity.GlyphCode.E72D);
                userType.AddEnumValue("E72E", global::WinUICommunity.GlyphCode.E72E);
                userType.AddEnumValue("E730", global::WinUICommunity.GlyphCode.E730);
                userType.AddEnumValue("E731", global::WinUICommunity.GlyphCode.E731);
                userType.AddEnumValue("E734", global::WinUICommunity.GlyphCode.E734);
                userType.AddEnumValue("E735", global::WinUICommunity.GlyphCode.E735);
                userType.AddEnumValue("E736", global::WinUICommunity.GlyphCode.E736);
                userType.AddEnumValue("E737", global::WinUICommunity.GlyphCode.E737);
                userType.AddEnumValue("E738", global::WinUICommunity.GlyphCode.E738);
                userType.AddEnumValue("E739", global::WinUICommunity.GlyphCode.E739);
                userType.AddEnumValue("E73A", global::WinUICommunity.GlyphCode.E73A);
                userType.AddEnumValue("E73B", global::WinUICommunity.GlyphCode.E73B);
                userType.AddEnumValue("E73C", global::WinUICommunity.GlyphCode.E73C);
                userType.AddEnumValue("E73D", global::WinUICommunity.GlyphCode.E73D);
                userType.AddEnumValue("E73E", global::WinUICommunity.GlyphCode.E73E);
                userType.AddEnumValue("E73F", global::WinUICommunity.GlyphCode.E73F);
                userType.AddEnumValue("E740", global::WinUICommunity.GlyphCode.E740);
                userType.AddEnumValue("E741", global::WinUICommunity.GlyphCode.E741);
                userType.AddEnumValue("E742", global::WinUICommunity.GlyphCode.E742);
                userType.AddEnumValue("E743", global::WinUICommunity.GlyphCode.E743);
                userType.AddEnumValue("E744", global::WinUICommunity.GlyphCode.E744);
                userType.AddEnumValue("E745", global::WinUICommunity.GlyphCode.E745);
                userType.AddEnumValue("E746", global::WinUICommunity.GlyphCode.E746);
                userType.AddEnumValue("E747", global::WinUICommunity.GlyphCode.E747);
                userType.AddEnumValue("E748", global::WinUICommunity.GlyphCode.E748);
                userType.AddEnumValue("E749", global::WinUICommunity.GlyphCode.E749);
                userType.AddEnumValue("E74A", global::WinUICommunity.GlyphCode.E74A);
                userType.AddEnumValue("E74B", global::WinUICommunity.GlyphCode.E74B);
                userType.AddEnumValue("E74C", global::WinUICommunity.GlyphCode.E74C);
                userType.AddEnumValue("E74D", global::WinUICommunity.GlyphCode.E74D);
                userType.AddEnumValue("E74E", global::WinUICommunity.GlyphCode.E74E);
                userType.AddEnumValue("E74F", global::WinUICommunity.GlyphCode.E74F);
                userType.AddEnumValue("E750", global::WinUICommunity.GlyphCode.E750);
                userType.AddEnumValue("E751", global::WinUICommunity.GlyphCode.E751);
                userType.AddEnumValue("E752", global::WinUICommunity.GlyphCode.E752);
                userType.AddEnumValue("E753", global::WinUICommunity.GlyphCode.E753);
                userType.AddEnumValue("E754", global::WinUICommunity.GlyphCode.E754);
                userType.AddEnumValue("E755", global::WinUICommunity.GlyphCode.E755);
                userType.AddEnumValue("E756", global::WinUICommunity.GlyphCode.E756);
                userType.AddEnumValue("E759", global::WinUICommunity.GlyphCode.E759);
                userType.AddEnumValue("E75A", global::WinUICommunity.GlyphCode.E75A);
                userType.AddEnumValue("E75B", global::WinUICommunity.GlyphCode.E75B);
                userType.AddEnumValue("E75C", global::WinUICommunity.GlyphCode.E75C);
                userType.AddEnumValue("E75D", global::WinUICommunity.GlyphCode.E75D);
                userType.AddEnumValue("E75E", global::WinUICommunity.GlyphCode.E75E);
                userType.AddEnumValue("E75F", global::WinUICommunity.GlyphCode.E75F);
                userType.AddEnumValue("E760", global::WinUICommunity.GlyphCode.E760);
                userType.AddEnumValue("E761", global::WinUICommunity.GlyphCode.E761);
                userType.AddEnumValue("E762", global::WinUICommunity.GlyphCode.E762);
                userType.AddEnumValue("E763", global::WinUICommunity.GlyphCode.E763);
                userType.AddEnumValue("E764", global::WinUICommunity.GlyphCode.E764);
                userType.AddEnumValue("E765", global::WinUICommunity.GlyphCode.E765);
                userType.AddEnumValue("E766", global::WinUICommunity.GlyphCode.E766);
                userType.AddEnumValue("E767", global::WinUICommunity.GlyphCode.E767);
                userType.AddEnumValue("E768", global::WinUICommunity.GlyphCode.E768);
                userType.AddEnumValue("E769", global::WinUICommunity.GlyphCode.E769);
                userType.AddEnumValue("E76B", global::WinUICommunity.GlyphCode.E76B);
                userType.AddEnumValue("E76C", global::WinUICommunity.GlyphCode.E76C);
                userType.AddEnumValue("E76D", global::WinUICommunity.GlyphCode.E76D);
                userType.AddEnumValue("E76E", global::WinUICommunity.GlyphCode.E76E);
                userType.AddEnumValue("E76F", global::WinUICommunity.GlyphCode.E76F);
                userType.AddEnumValue("E770", global::WinUICommunity.GlyphCode.E770);
                userType.AddEnumValue("E771", global::WinUICommunity.GlyphCode.E771);
                userType.AddEnumValue("E772", global::WinUICommunity.GlyphCode.E772);
                userType.AddEnumValue("E773", global::WinUICommunity.GlyphCode.E773);
                userType.AddEnumValue("E774", global::WinUICommunity.GlyphCode.E774);
                userType.AddEnumValue("E775", global::WinUICommunity.GlyphCode.E775);
                userType.AddEnumValue("E776", global::WinUICommunity.GlyphCode.E776);
                userType.AddEnumValue("E777", global::WinUICommunity.GlyphCode.E777);
                userType.AddEnumValue("E778", global::WinUICommunity.GlyphCode.E778);
                userType.AddEnumValue("E779", global::WinUICommunity.GlyphCode.E779);
                userType.AddEnumValue("E77A", global::WinUICommunity.GlyphCode.E77A);
                userType.AddEnumValue("E77B", global::WinUICommunity.GlyphCode.E77B);
                userType.AddEnumValue("E77C", global::WinUICommunity.GlyphCode.E77C);
                userType.AddEnumValue("E77E", global::WinUICommunity.GlyphCode.E77E);
                userType.AddEnumValue("E77F", global::WinUICommunity.GlyphCode.E77F);
                userType.AddEnumValue("E780", global::WinUICommunity.GlyphCode.E780);
                userType.AddEnumValue("E781", global::WinUICommunity.GlyphCode.E781);
                userType.AddEnumValue("E783", global::WinUICommunity.GlyphCode.E783);
                userType.AddEnumValue("E784", global::WinUICommunity.GlyphCode.E784);
                userType.AddEnumValue("E785", global::WinUICommunity.GlyphCode.E785);
                userType.AddEnumValue("E786", global::WinUICommunity.GlyphCode.E786);
                userType.AddEnumValue("E787", global::WinUICommunity.GlyphCode.E787);
                userType.AddEnumValue("E788", global::WinUICommunity.GlyphCode.E788);
                userType.AddEnumValue("E789", global::WinUICommunity.GlyphCode.E789);
                userType.AddEnumValue("E78A", global::WinUICommunity.GlyphCode.E78A);
                userType.AddEnumValue("E78B", global::WinUICommunity.GlyphCode.E78B);
                userType.AddEnumValue("E78C", global::WinUICommunity.GlyphCode.E78C);
                userType.AddEnumValue("E790", global::WinUICommunity.GlyphCode.E790);
                userType.AddEnumValue("E791", global::WinUICommunity.GlyphCode.E791);
                userType.AddEnumValue("E792", global::WinUICommunity.GlyphCode.E792);
                userType.AddEnumValue("E793", global::WinUICommunity.GlyphCode.E793);
                userType.AddEnumValue("E799", global::WinUICommunity.GlyphCode.E799);
                userType.AddEnumValue("E7A5", global::WinUICommunity.GlyphCode.E7A5);
                userType.AddEnumValue("E7A6", global::WinUICommunity.GlyphCode.E7A6);
                userType.AddEnumValue("E7A7", global::WinUICommunity.GlyphCode.E7A7);
                userType.AddEnumValue("E7A8", global::WinUICommunity.GlyphCode.E7A8);
                userType.AddEnumValue("E7AC", global::WinUICommunity.GlyphCode.E7AC);
                userType.AddEnumValue("E7AD", global::WinUICommunity.GlyphCode.E7AD);
                userType.AddEnumValue("E7B3", global::WinUICommunity.GlyphCode.E7B3);
                userType.AddEnumValue("E7B5", global::WinUICommunity.GlyphCode.E7B5);
                userType.AddEnumValue("E7B7", global::WinUICommunity.GlyphCode.E7B7);
                userType.AddEnumValue("E7B8", global::WinUICommunity.GlyphCode.E7B8);
                userType.AddEnumValue("E7BA", global::WinUICommunity.GlyphCode.E7BA);
                userType.AddEnumValue("E7BC", global::WinUICommunity.GlyphCode.E7BC);
                userType.AddEnumValue("E7BE", global::WinUICommunity.GlyphCode.E7BE);
                userType.AddEnumValue("E7BF", global::WinUICommunity.GlyphCode.E7BF);
                userType.AddEnumValue("E7C0", global::WinUICommunity.GlyphCode.E7C0);
                userType.AddEnumValue("E7C1", global::WinUICommunity.GlyphCode.E7C1);
                userType.AddEnumValue("E7C2", global::WinUICommunity.GlyphCode.E7C2);
                userType.AddEnumValue("E7C3", global::WinUICommunity.GlyphCode.E7C3);
                userType.AddEnumValue("E7C4", global::WinUICommunity.GlyphCode.E7C4);
                userType.AddEnumValue("E7C5", global::WinUICommunity.GlyphCode.E7C5);
                userType.AddEnumValue("E7C6", global::WinUICommunity.GlyphCode.E7C6);
                userType.AddEnumValue("E7C7", global::WinUICommunity.GlyphCode.E7C7);
                userType.AddEnumValue("E7C8", global::WinUICommunity.GlyphCode.E7C8);
                userType.AddEnumValue("E7C9", global::WinUICommunity.GlyphCode.E7C9);
                userType.AddEnumValue("E7DE", global::WinUICommunity.GlyphCode.E7DE);
                userType.AddEnumValue("E7E3", global::WinUICommunity.GlyphCode.E7E3);
                userType.AddEnumValue("E7E6", global::WinUICommunity.GlyphCode.E7E6);
                userType.AddEnumValue("E7E7", global::WinUICommunity.GlyphCode.E7E7);
                userType.AddEnumValue("E7E8", global::WinUICommunity.GlyphCode.E7E8);
                userType.AddEnumValue("E7EA", global::WinUICommunity.GlyphCode.E7EA);
                userType.AddEnumValue("E7EB", global::WinUICommunity.GlyphCode.E7EB);
                userType.AddEnumValue("E7EC", global::WinUICommunity.GlyphCode.E7EC);
                userType.AddEnumValue("E7ED", global::WinUICommunity.GlyphCode.E7ED);
                userType.AddEnumValue("E7EE", global::WinUICommunity.GlyphCode.E7EE);
                userType.AddEnumValue("E7EF", global::WinUICommunity.GlyphCode.E7EF);
                userType.AddEnumValue("E7F0", global::WinUICommunity.GlyphCode.E7F0);
                userType.AddEnumValue("E7F1", global::WinUICommunity.GlyphCode.E7F1);
                userType.AddEnumValue("E7F2", global::WinUICommunity.GlyphCode.E7F2);
                userType.AddEnumValue("E7F3", global::WinUICommunity.GlyphCode.E7F3);
                userType.AddEnumValue("E7F4", global::WinUICommunity.GlyphCode.E7F4);
                userType.AddEnumValue("E7F5", global::WinUICommunity.GlyphCode.E7F5);
                userType.AddEnumValue("E7F6", global::WinUICommunity.GlyphCode.E7F6);
                userType.AddEnumValue("E7F7", global::WinUICommunity.GlyphCode.E7F7);
                userType.AddEnumValue("E7F8", global::WinUICommunity.GlyphCode.E7F8);
                userType.AddEnumValue("E7F9", global::WinUICommunity.GlyphCode.E7F9);
                userType.AddEnumValue("E7FA", global::WinUICommunity.GlyphCode.E7FA);
                userType.AddEnumValue("E7FB", global::WinUICommunity.GlyphCode.E7FB);
                userType.AddEnumValue("E7FC", global::WinUICommunity.GlyphCode.E7FC);
                userType.AddEnumValue("E7FD", global::WinUICommunity.GlyphCode.E7FD);
                userType.AddEnumValue("E802", global::WinUICommunity.GlyphCode.E802);
                userType.AddEnumValue("E803", global::WinUICommunity.GlyphCode.E803);
                userType.AddEnumValue("E804", global::WinUICommunity.GlyphCode.E804);
                userType.AddEnumValue("E805", global::WinUICommunity.GlyphCode.E805);
                userType.AddEnumValue("E806", global::WinUICommunity.GlyphCode.E806);
                userType.AddEnumValue("E809", global::WinUICommunity.GlyphCode.E809);
                userType.AddEnumValue("E80A", global::WinUICommunity.GlyphCode.E80A);
                userType.AddEnumValue("E80B", global::WinUICommunity.GlyphCode.E80B);
                userType.AddEnumValue("E80C", global::WinUICommunity.GlyphCode.E80C);
                userType.AddEnumValue("E80D", global::WinUICommunity.GlyphCode.E80D);
                userType.AddEnumValue("E80F", global::WinUICommunity.GlyphCode.E80F);
                userType.AddEnumValue("E811", global::WinUICommunity.GlyphCode.E811);
                userType.AddEnumValue("E812", global::WinUICommunity.GlyphCode.E812);
                userType.AddEnumValue("E813", global::WinUICommunity.GlyphCode.E813);
                userType.AddEnumValue("E814", global::WinUICommunity.GlyphCode.E814);
                userType.AddEnumValue("E815", global::WinUICommunity.GlyphCode.E815);
                userType.AddEnumValue("E816", global::WinUICommunity.GlyphCode.E816);
                userType.AddEnumValue("E819", global::WinUICommunity.GlyphCode.E819);
                userType.AddEnumValue("E81A", global::WinUICommunity.GlyphCode.E81A);
                userType.AddEnumValue("E81B", global::WinUICommunity.GlyphCode.E81B);
                userType.AddEnumValue("E81C", global::WinUICommunity.GlyphCode.E81C);
                userType.AddEnumValue("E81D", global::WinUICommunity.GlyphCode.E81D);
                userType.AddEnumValue("E81E", global::WinUICommunity.GlyphCode.E81E);
                userType.AddEnumValue("E81F", global::WinUICommunity.GlyphCode.E81F);
                userType.AddEnumValue("E821", global::WinUICommunity.GlyphCode.E821);
                userType.AddEnumValue("E822", global::WinUICommunity.GlyphCode.E822);
                userType.AddEnumValue("E823", global::WinUICommunity.GlyphCode.E823);
                userType.AddEnumValue("E825", global::WinUICommunity.GlyphCode.E825);
                userType.AddEnumValue("E826", global::WinUICommunity.GlyphCode.E826);
                userType.AddEnumValue("E829", global::WinUICommunity.GlyphCode.E829);
                userType.AddEnumValue("E82A", global::WinUICommunity.GlyphCode.E82A);
                userType.AddEnumValue("E82B", global::WinUICommunity.GlyphCode.E82B);
                userType.AddEnumValue("E82C", global::WinUICommunity.GlyphCode.E82C);
                userType.AddEnumValue("E82D", global::WinUICommunity.GlyphCode.E82D);
                userType.AddEnumValue("E82E", global::WinUICommunity.GlyphCode.E82E);
                userType.AddEnumValue("E82F", global::WinUICommunity.GlyphCode.E82F);
                userType.AddEnumValue("E830", global::WinUICommunity.GlyphCode.E830);
                userType.AddEnumValue("E835", global::WinUICommunity.GlyphCode.E835);
                userType.AddEnumValue("E836", global::WinUICommunity.GlyphCode.E836);
                userType.AddEnumValue("E838", global::WinUICommunity.GlyphCode.E838);
                userType.AddEnumValue("E839", global::WinUICommunity.GlyphCode.E839);
                userType.AddEnumValue("E83A", global::WinUICommunity.GlyphCode.E83A);
                userType.AddEnumValue("E83B", global::WinUICommunity.GlyphCode.E83B);
                userType.AddEnumValue("E83C", global::WinUICommunity.GlyphCode.E83C);
                userType.AddEnumValue("E83D", global::WinUICommunity.GlyphCode.E83D);
                userType.AddEnumValue("E83E", global::WinUICommunity.GlyphCode.E83E);
                userType.AddEnumValue("E83F", global::WinUICommunity.GlyphCode.E83F);
                userType.AddEnumValue("E840", global::WinUICommunity.GlyphCode.E840);
                userType.AddEnumValue("E841", global::WinUICommunity.GlyphCode.E841);
                userType.AddEnumValue("E842", global::WinUICommunity.GlyphCode.E842);
                userType.AddEnumValue("E843", global::WinUICommunity.GlyphCode.E843);
                userType.AddEnumValue("E844", global::WinUICommunity.GlyphCode.E844);
                userType.AddEnumValue("E845", global::WinUICommunity.GlyphCode.E845);
                userType.AddEnumValue("E846", global::WinUICommunity.GlyphCode.E846);
                userType.AddEnumValue("E847", global::WinUICommunity.GlyphCode.E847);
                userType.AddEnumValue("E848", global::WinUICommunity.GlyphCode.E848);
                userType.AddEnumValue("E849", global::WinUICommunity.GlyphCode.E849);
                userType.AddEnumValue("E84A", global::WinUICommunity.GlyphCode.E84A);
                userType.AddEnumValue("E84B", global::WinUICommunity.GlyphCode.E84B);
                userType.AddEnumValue("E84C", global::WinUICommunity.GlyphCode.E84C);
                userType.AddEnumValue("E84D", global::WinUICommunity.GlyphCode.E84D);
                userType.AddEnumValue("E84E", global::WinUICommunity.GlyphCode.E84E);
                userType.AddEnumValue("E84F", global::WinUICommunity.GlyphCode.E84F);
                userType.AddEnumValue("E850", global::WinUICommunity.GlyphCode.E850);
                userType.AddEnumValue("E851", global::WinUICommunity.GlyphCode.E851);
                userType.AddEnumValue("E852", global::WinUICommunity.GlyphCode.E852);
                userType.AddEnumValue("E853", global::WinUICommunity.GlyphCode.E853);
                userType.AddEnumValue("E854", global::WinUICommunity.GlyphCode.E854);
                userType.AddEnumValue("E855", global::WinUICommunity.GlyphCode.E855);
                userType.AddEnumValue("E856", global::WinUICommunity.GlyphCode.E856);
                userType.AddEnumValue("E857", global::WinUICommunity.GlyphCode.E857);
                userType.AddEnumValue("E858", global::WinUICommunity.GlyphCode.E858);
                userType.AddEnumValue("E859", global::WinUICommunity.GlyphCode.E859);
                userType.AddEnumValue("E85A", global::WinUICommunity.GlyphCode.E85A);
                userType.AddEnumValue("E85B", global::WinUICommunity.GlyphCode.E85B);
                userType.AddEnumValue("E85C", global::WinUICommunity.GlyphCode.E85C);
                userType.AddEnumValue("E85D", global::WinUICommunity.GlyphCode.E85D);
                userType.AddEnumValue("E85E", global::WinUICommunity.GlyphCode.E85E);
                userType.AddEnumValue("E85F", global::WinUICommunity.GlyphCode.E85F);
                userType.AddEnumValue("E860", global::WinUICommunity.GlyphCode.E860);
                userType.AddEnumValue("E861", global::WinUICommunity.GlyphCode.E861);
                userType.AddEnumValue("E862", global::WinUICommunity.GlyphCode.E862);
                userType.AddEnumValue("E863", global::WinUICommunity.GlyphCode.E863);
                userType.AddEnumValue("E864", global::WinUICommunity.GlyphCode.E864);
                userType.AddEnumValue("E865", global::WinUICommunity.GlyphCode.E865);
                userType.AddEnumValue("E866", global::WinUICommunity.GlyphCode.E866);
                userType.AddEnumValue("E867", global::WinUICommunity.GlyphCode.E867);
                userType.AddEnumValue("E868", global::WinUICommunity.GlyphCode.E868);
                userType.AddEnumValue("E869", global::WinUICommunity.GlyphCode.E869);
                userType.AddEnumValue("E86A", global::WinUICommunity.GlyphCode.E86A);
                userType.AddEnumValue("E86B", global::WinUICommunity.GlyphCode.E86B);
                userType.AddEnumValue("E86C", global::WinUICommunity.GlyphCode.E86C);
                userType.AddEnumValue("E86D", global::WinUICommunity.GlyphCode.E86D);
                userType.AddEnumValue("E86E", global::WinUICommunity.GlyphCode.E86E);
                userType.AddEnumValue("E86F", global::WinUICommunity.GlyphCode.E86F);
                userType.AddEnumValue("E870", global::WinUICommunity.GlyphCode.E870);
                userType.AddEnumValue("E871", global::WinUICommunity.GlyphCode.E871);
                userType.AddEnumValue("E872", global::WinUICommunity.GlyphCode.E872);
                userType.AddEnumValue("E873", global::WinUICommunity.GlyphCode.E873);
                userType.AddEnumValue("E874", global::WinUICommunity.GlyphCode.E874);
                userType.AddEnumValue("E875", global::WinUICommunity.GlyphCode.E875);
                userType.AddEnumValue("E876", global::WinUICommunity.GlyphCode.E876);
                userType.AddEnumValue("E877", global::WinUICommunity.GlyphCode.E877);
                userType.AddEnumValue("E878", global::WinUICommunity.GlyphCode.E878);
                userType.AddEnumValue("E879", global::WinUICommunity.GlyphCode.E879);
                userType.AddEnumValue("E87A", global::WinUICommunity.GlyphCode.E87A);
                userType.AddEnumValue("E87B", global::WinUICommunity.GlyphCode.E87B);
                userType.AddEnumValue("E87C", global::WinUICommunity.GlyphCode.E87C);
                userType.AddEnumValue("E87D", global::WinUICommunity.GlyphCode.E87D);
                userType.AddEnumValue("E87E", global::WinUICommunity.GlyphCode.E87E);
                userType.AddEnumValue("E87F", global::WinUICommunity.GlyphCode.E87F);
                userType.AddEnumValue("E880", global::WinUICommunity.GlyphCode.E880);
                userType.AddEnumValue("E881", global::WinUICommunity.GlyphCode.E881);
                userType.AddEnumValue("E882", global::WinUICommunity.GlyphCode.E882);
                userType.AddEnumValue("E883", global::WinUICommunity.GlyphCode.E883);
                userType.AddEnumValue("E884", global::WinUICommunity.GlyphCode.E884);
                userType.AddEnumValue("E885", global::WinUICommunity.GlyphCode.E885);
                userType.AddEnumValue("E886", global::WinUICommunity.GlyphCode.E886);
                userType.AddEnumValue("E887", global::WinUICommunity.GlyphCode.E887);
                userType.AddEnumValue("E888", global::WinUICommunity.GlyphCode.E888);
                userType.AddEnumValue("E889", global::WinUICommunity.GlyphCode.E889);
                userType.AddEnumValue("E88A", global::WinUICommunity.GlyphCode.E88A);
                userType.AddEnumValue("E88B", global::WinUICommunity.GlyphCode.E88B);
                userType.AddEnumValue("E88C", global::WinUICommunity.GlyphCode.E88C);
                userType.AddEnumValue("E88D", global::WinUICommunity.GlyphCode.E88D);
                userType.AddEnumValue("E88E", global::WinUICommunity.GlyphCode.E88E);
                userType.AddEnumValue("E88F", global::WinUICommunity.GlyphCode.E88F);
                userType.AddEnumValue("E890", global::WinUICommunity.GlyphCode.E890);
                userType.AddEnumValue("E891", global::WinUICommunity.GlyphCode.E891);
                userType.AddEnumValue("E892", global::WinUICommunity.GlyphCode.E892);
                userType.AddEnumValue("E893", global::WinUICommunity.GlyphCode.E893);
                userType.AddEnumValue("E894", global::WinUICommunity.GlyphCode.E894);
                userType.AddEnumValue("E895", global::WinUICommunity.GlyphCode.E895);
                userType.AddEnumValue("E896", global::WinUICommunity.GlyphCode.E896);
                userType.AddEnumValue("E897", global::WinUICommunity.GlyphCode.E897);
                userType.AddEnumValue("E898", global::WinUICommunity.GlyphCode.E898);
                userType.AddEnumValue("E899", global::WinUICommunity.GlyphCode.E899);
                userType.AddEnumValue("E89A", global::WinUICommunity.GlyphCode.E89A);
                userType.AddEnumValue("E89B", global::WinUICommunity.GlyphCode.E89B);
                userType.AddEnumValue("E89C", global::WinUICommunity.GlyphCode.E89C);
                userType.AddEnumValue("E89E", global::WinUICommunity.GlyphCode.E89E);
                userType.AddEnumValue("E89F", global::WinUICommunity.GlyphCode.E89F);
                userType.AddEnumValue("E8A0", global::WinUICommunity.GlyphCode.E8A0);
                userType.AddEnumValue("E8A1", global::WinUICommunity.GlyphCode.E8A1);
                userType.AddEnumValue("E8A2", global::WinUICommunity.GlyphCode.E8A2);
                userType.AddEnumValue("E8A3", global::WinUICommunity.GlyphCode.E8A3);
                userType.AddEnumValue("E8A4", global::WinUICommunity.GlyphCode.E8A4);
                userType.AddEnumValue("E8A5", global::WinUICommunity.GlyphCode.E8A5);
                userType.AddEnumValue("E8A6", global::WinUICommunity.GlyphCode.E8A6);
                userType.AddEnumValue("E8A7", global::WinUICommunity.GlyphCode.E8A7);
                userType.AddEnumValue("E8A8", global::WinUICommunity.GlyphCode.E8A8);
                userType.AddEnumValue("E8A9", global::WinUICommunity.GlyphCode.E8A9);
                userType.AddEnumValue("E8AA", global::WinUICommunity.GlyphCode.E8AA);
                userType.AddEnumValue("E8AB", global::WinUICommunity.GlyphCode.E8AB);
                userType.AddEnumValue("E8AC", global::WinUICommunity.GlyphCode.E8AC);
                userType.AddEnumValue("E8AD", global::WinUICommunity.GlyphCode.E8AD);
                userType.AddEnumValue("E8AE", global::WinUICommunity.GlyphCode.E8AE);
                userType.AddEnumValue("E8AF", global::WinUICommunity.GlyphCode.E8AF);
                userType.AddEnumValue("E8B0", global::WinUICommunity.GlyphCode.E8B0);
                userType.AddEnumValue("E8B1", global::WinUICommunity.GlyphCode.E8B1);
                userType.AddEnumValue("E8B2", global::WinUICommunity.GlyphCode.E8B2);
                userType.AddEnumValue("E8B3", global::WinUICommunity.GlyphCode.E8B3);
                userType.AddEnumValue("E8B4", global::WinUICommunity.GlyphCode.E8B4);
                userType.AddEnumValue("E8B5", global::WinUICommunity.GlyphCode.E8B5);
                userType.AddEnumValue("E8B6", global::WinUICommunity.GlyphCode.E8B6);
                userType.AddEnumValue("E8B7", global::WinUICommunity.GlyphCode.E8B7);
                userType.AddEnumValue("E8B8", global::WinUICommunity.GlyphCode.E8B8);
                userType.AddEnumValue("E8B9", global::WinUICommunity.GlyphCode.E8B9);
                userType.AddEnumValue("E8BA", global::WinUICommunity.GlyphCode.E8BA);
                userType.AddEnumValue("E8BB", global::WinUICommunity.GlyphCode.E8BB);
                userType.AddEnumValue("E8BC", global::WinUICommunity.GlyphCode.E8BC);
                userType.AddEnumValue("E8BD", global::WinUICommunity.GlyphCode.E8BD);
                userType.AddEnumValue("E8BE", global::WinUICommunity.GlyphCode.E8BE);
                userType.AddEnumValue("E8BF", global::WinUICommunity.GlyphCode.E8BF);
                userType.AddEnumValue("E8C0", global::WinUICommunity.GlyphCode.E8C0);
                userType.AddEnumValue("E8C1", global::WinUICommunity.GlyphCode.E8C1);
                userType.AddEnumValue("E8C2", global::WinUICommunity.GlyphCode.E8C2);
                userType.AddEnumValue("E8C3", global::WinUICommunity.GlyphCode.E8C3);
                userType.AddEnumValue("E8C4", global::WinUICommunity.GlyphCode.E8C4);
                userType.AddEnumValue("E8C5", global::WinUICommunity.GlyphCode.E8C5);
                userType.AddEnumValue("E8C6", global::WinUICommunity.GlyphCode.E8C6);
                userType.AddEnumValue("E8C7", global::WinUICommunity.GlyphCode.E8C7);
                userType.AddEnumValue("E8C8", global::WinUICommunity.GlyphCode.E8C8);
                userType.AddEnumValue("E8C9", global::WinUICommunity.GlyphCode.E8C9);
                userType.AddEnumValue("E8CA", global::WinUICommunity.GlyphCode.E8CA);
                userType.AddEnumValue("E8CB", global::WinUICommunity.GlyphCode.E8CB);
                userType.AddEnumValue("E8CC", global::WinUICommunity.GlyphCode.E8CC);
                userType.AddEnumValue("E8CD", global::WinUICommunity.GlyphCode.E8CD);
                userType.AddEnumValue("E8CE", global::WinUICommunity.GlyphCode.E8CE);
                userType.AddEnumValue("E8CF", global::WinUICommunity.GlyphCode.E8CF);
                userType.AddEnumValue("E8D0", global::WinUICommunity.GlyphCode.E8D0);
                userType.AddEnumValue("E8D1", global::WinUICommunity.GlyphCode.E8D1);
                userType.AddEnumValue("E8D2", global::WinUICommunity.GlyphCode.E8D2);
                userType.AddEnumValue("E8D3", global::WinUICommunity.GlyphCode.E8D3);
                userType.AddEnumValue("E8D4", global::WinUICommunity.GlyphCode.E8D4);
                userType.AddEnumValue("E8D5", global::WinUICommunity.GlyphCode.E8D5);
                userType.AddEnumValue("E8D6", global::WinUICommunity.GlyphCode.E8D6);
                userType.AddEnumValue("E8D7", global::WinUICommunity.GlyphCode.E8D7);
                userType.AddEnumValue("E8D8", global::WinUICommunity.GlyphCode.E8D8);
                userType.AddEnumValue("E8D9", global::WinUICommunity.GlyphCode.E8D9);
                userType.AddEnumValue("E8DA", global::WinUICommunity.GlyphCode.E8DA);
                userType.AddEnumValue("E8DB", global::WinUICommunity.GlyphCode.E8DB);
                userType.AddEnumValue("E8DC", global::WinUICommunity.GlyphCode.E8DC);
                userType.AddEnumValue("E8DD", global::WinUICommunity.GlyphCode.E8DD);
                userType.AddEnumValue("E8DE", global::WinUICommunity.GlyphCode.E8DE);
                userType.AddEnumValue("E8DF", global::WinUICommunity.GlyphCode.E8DF);
                userType.AddEnumValue("E8E0", global::WinUICommunity.GlyphCode.E8E0);
                userType.AddEnumValue("E8E1", global::WinUICommunity.GlyphCode.E8E1);
                userType.AddEnumValue("E8E2", global::WinUICommunity.GlyphCode.E8E2);
                userType.AddEnumValue("E8E3", global::WinUICommunity.GlyphCode.E8E3);
                userType.AddEnumValue("E8E4", global::WinUICommunity.GlyphCode.E8E4);
                userType.AddEnumValue("E8E5", global::WinUICommunity.GlyphCode.E8E5);
                userType.AddEnumValue("E8E6", global::WinUICommunity.GlyphCode.E8E6);
                userType.AddEnumValue("E8E7", global::WinUICommunity.GlyphCode.E8E7);
                userType.AddEnumValue("E8E8", global::WinUICommunity.GlyphCode.E8E8);
                userType.AddEnumValue("E8E9", global::WinUICommunity.GlyphCode.E8E9);
                userType.AddEnumValue("E8EA", global::WinUICommunity.GlyphCode.E8EA);
                userType.AddEnumValue("E8EB", global::WinUICommunity.GlyphCode.E8EB);
                userType.AddEnumValue("E8EC", global::WinUICommunity.GlyphCode.E8EC);
                userType.AddEnumValue("E8ED", global::WinUICommunity.GlyphCode.E8ED);
                userType.AddEnumValue("E8EE", global::WinUICommunity.GlyphCode.E8EE);
                userType.AddEnumValue("E8EF", global::WinUICommunity.GlyphCode.E8EF);
                userType.AddEnumValue("E8F0", global::WinUICommunity.GlyphCode.E8F0);
                userType.AddEnumValue("E8F1", global::WinUICommunity.GlyphCode.E8F1);
                userType.AddEnumValue("E8F2", global::WinUICommunity.GlyphCode.E8F2);
                userType.AddEnumValue("E8F3", global::WinUICommunity.GlyphCode.E8F3);
                userType.AddEnumValue("E8F4", global::WinUICommunity.GlyphCode.E8F4);
                userType.AddEnumValue("E8F5", global::WinUICommunity.GlyphCode.E8F5);
                userType.AddEnumValue("E8F6", global::WinUICommunity.GlyphCode.E8F6);
                userType.AddEnumValue("E8F7", global::WinUICommunity.GlyphCode.E8F7);
                userType.AddEnumValue("E8F8", global::WinUICommunity.GlyphCode.E8F8);
                userType.AddEnumValue("E8F9", global::WinUICommunity.GlyphCode.E8F9);
                userType.AddEnumValue("E8FA", global::WinUICommunity.GlyphCode.E8FA);
                userType.AddEnumValue("E8FB", global::WinUICommunity.GlyphCode.E8FB);
                userType.AddEnumValue("E8FC", global::WinUICommunity.GlyphCode.E8FC);
                userType.AddEnumValue("E8FD", global::WinUICommunity.GlyphCode.E8FD);
                userType.AddEnumValue("E8FE", global::WinUICommunity.GlyphCode.E8FE);
                userType.AddEnumValue("E8FF", global::WinUICommunity.GlyphCode.E8FF);
                userType.AddEnumValue("E902", global::WinUICommunity.GlyphCode.E902);
                userType.AddEnumValue("E904", global::WinUICommunity.GlyphCode.E904);
                userType.AddEnumValue("E905", global::WinUICommunity.GlyphCode.E905);
                userType.AddEnumValue("E906", global::WinUICommunity.GlyphCode.E906);
                userType.AddEnumValue("E907", global::WinUICommunity.GlyphCode.E907);
                userType.AddEnumValue("E908", global::WinUICommunity.GlyphCode.E908);
                userType.AddEnumValue("E909", global::WinUICommunity.GlyphCode.E909);
                userType.AddEnumValue("E90A", global::WinUICommunity.GlyphCode.E90A);
                userType.AddEnumValue("E90B", global::WinUICommunity.GlyphCode.E90B);
                userType.AddEnumValue("E90C", global::WinUICommunity.GlyphCode.E90C);
                userType.AddEnumValue("E90D", global::WinUICommunity.GlyphCode.E90D);
                userType.AddEnumValue("E90E", global::WinUICommunity.GlyphCode.E90E);
                userType.AddEnumValue("E90F", global::WinUICommunity.GlyphCode.E90F);
                userType.AddEnumValue("E910", global::WinUICommunity.GlyphCode.E910);
                userType.AddEnumValue("E911", global::WinUICommunity.GlyphCode.E911);
                userType.AddEnumValue("E912", global::WinUICommunity.GlyphCode.E912);
                userType.AddEnumValue("E913", global::WinUICommunity.GlyphCode.E913);
                userType.AddEnumValue("E914", global::WinUICommunity.GlyphCode.E914);
                userType.AddEnumValue("E915", global::WinUICommunity.GlyphCode.E915);
                userType.AddEnumValue("E916", global::WinUICommunity.GlyphCode.E916);
                userType.AddEnumValue("E91B", global::WinUICommunity.GlyphCode.E91B);
                userType.AddEnumValue("E91C", global::WinUICommunity.GlyphCode.E91C);
                userType.AddEnumValue("E91F", global::WinUICommunity.GlyphCode.E91F);
                userType.AddEnumValue("E921", global::WinUICommunity.GlyphCode.E921);
                userType.AddEnumValue("E922", global::WinUICommunity.GlyphCode.E922);
                userType.AddEnumValue("E923", global::WinUICommunity.GlyphCode.E923);
                userType.AddEnumValue("E924", global::WinUICommunity.GlyphCode.E924);
                userType.AddEnumValue("E925", global::WinUICommunity.GlyphCode.E925);
                userType.AddEnumValue("E926", global::WinUICommunity.GlyphCode.E926);
                userType.AddEnumValue("E927", global::WinUICommunity.GlyphCode.E927);
                userType.AddEnumValue("E928", global::WinUICommunity.GlyphCode.E928);
                userType.AddEnumValue("E929", global::WinUICommunity.GlyphCode.E929);
                userType.AddEnumValue("E92C", global::WinUICommunity.GlyphCode.E92C);
                userType.AddEnumValue("E92D", global::WinUICommunity.GlyphCode.E92D);
                userType.AddEnumValue("E92E", global::WinUICommunity.GlyphCode.E92E);
                userType.AddEnumValue("E92F", global::WinUICommunity.GlyphCode.E92F);
                userType.AddEnumValue("E930", global::WinUICommunity.GlyphCode.E930);
                userType.AddEnumValue("E931", global::WinUICommunity.GlyphCode.E931);
                userType.AddEnumValue("E932", global::WinUICommunity.GlyphCode.E932);
                userType.AddEnumValue("E933", global::WinUICommunity.GlyphCode.E933);
                userType.AddEnumValue("E934", global::WinUICommunity.GlyphCode.E934);
                userType.AddEnumValue("E935", global::WinUICommunity.GlyphCode.E935);
                userType.AddEnumValue("E936", global::WinUICommunity.GlyphCode.E936);
                userType.AddEnumValue("E937", global::WinUICommunity.GlyphCode.E937);
                userType.AddEnumValue("E938", global::WinUICommunity.GlyphCode.E938);
                userType.AddEnumValue("E939", global::WinUICommunity.GlyphCode.E939);
                userType.AddEnumValue("E93C", global::WinUICommunity.GlyphCode.E93C);
                userType.AddEnumValue("E93E", global::WinUICommunity.GlyphCode.E93E);
                userType.AddEnumValue("E943", global::WinUICommunity.GlyphCode.E943);
                userType.AddEnumValue("E944", global::WinUICommunity.GlyphCode.E944);
                userType.AddEnumValue("E945", global::WinUICommunity.GlyphCode.E945);
                userType.AddEnumValue("E946", global::WinUICommunity.GlyphCode.E946);
                userType.AddEnumValue("E947", global::WinUICommunity.GlyphCode.E947);
                userType.AddEnumValue("E948", global::WinUICommunity.GlyphCode.E948);
                userType.AddEnumValue("E949", global::WinUICommunity.GlyphCode.E949);
                userType.AddEnumValue("E94A", global::WinUICommunity.GlyphCode.E94A);
                userType.AddEnumValue("E94B", global::WinUICommunity.GlyphCode.E94B);
                userType.AddEnumValue("E94C", global::WinUICommunity.GlyphCode.E94C);
                userType.AddEnumValue("E94D", global::WinUICommunity.GlyphCode.E94D);
                userType.AddEnumValue("E94E", global::WinUICommunity.GlyphCode.E94E);
                userType.AddEnumValue("E94F", global::WinUICommunity.GlyphCode.E94F);
                userType.AddEnumValue("E950", global::WinUICommunity.GlyphCode.E950);
                userType.AddEnumValue("E951", global::WinUICommunity.GlyphCode.E951);
                userType.AddEnumValue("E952", global::WinUICommunity.GlyphCode.E952);
                userType.AddEnumValue("E953", global::WinUICommunity.GlyphCode.E953);
                userType.AddEnumValue("E954", global::WinUICommunity.GlyphCode.E954);
                userType.AddEnumValue("E955", global::WinUICommunity.GlyphCode.E955);
                userType.AddEnumValue("E956", global::WinUICommunity.GlyphCode.E956);
                userType.AddEnumValue("E957", global::WinUICommunity.GlyphCode.E957);
                userType.AddEnumValue("E958", global::WinUICommunity.GlyphCode.E958);
                userType.AddEnumValue("E95A", global::WinUICommunity.GlyphCode.E95A);
                userType.AddEnumValue("E95B", global::WinUICommunity.GlyphCode.E95B);
                userType.AddEnumValue("E95D", global::WinUICommunity.GlyphCode.E95D);
                userType.AddEnumValue("E95E", global::WinUICommunity.GlyphCode.E95E);
                userType.AddEnumValue("E95F", global::WinUICommunity.GlyphCode.E95F);
                userType.AddEnumValue("E960", global::WinUICommunity.GlyphCode.E960);
                userType.AddEnumValue("E961", global::WinUICommunity.GlyphCode.E961);
                userType.AddEnumValue("E962", global::WinUICommunity.GlyphCode.E962);
                userType.AddEnumValue("E963", global::WinUICommunity.GlyphCode.E963);
                userType.AddEnumValue("E964", global::WinUICommunity.GlyphCode.E964);
                userType.AddEnumValue("E965", global::WinUICommunity.GlyphCode.E965);
                userType.AddEnumValue("E966", global::WinUICommunity.GlyphCode.E966);
                userType.AddEnumValue("E967", global::WinUICommunity.GlyphCode.E967);
                userType.AddEnumValue("E968", global::WinUICommunity.GlyphCode.E968);
                userType.AddEnumValue("E969", global::WinUICommunity.GlyphCode.E969);
                userType.AddEnumValue("E96A", global::WinUICommunity.GlyphCode.E96A);
                userType.AddEnumValue("E96D", global::WinUICommunity.GlyphCode.E96D);
                userType.AddEnumValue("E96E", global::WinUICommunity.GlyphCode.E96E);
                userType.AddEnumValue("E96F", global::WinUICommunity.GlyphCode.E96F);
                userType.AddEnumValue("E970", global::WinUICommunity.GlyphCode.E970);
                userType.AddEnumValue("E971", global::WinUICommunity.GlyphCode.E971);
                userType.AddEnumValue("E972", global::WinUICommunity.GlyphCode.E972);
                userType.AddEnumValue("E973", global::WinUICommunity.GlyphCode.E973);
                userType.AddEnumValue("E974", global::WinUICommunity.GlyphCode.E974);
                userType.AddEnumValue("E975", global::WinUICommunity.GlyphCode.E975);
                userType.AddEnumValue("E976", global::WinUICommunity.GlyphCode.E976);
                userType.AddEnumValue("E977", global::WinUICommunity.GlyphCode.E977);
                userType.AddEnumValue("E978", global::WinUICommunity.GlyphCode.E978);
                userType.AddEnumValue("E979", global::WinUICommunity.GlyphCode.E979);
                userType.AddEnumValue("E97A", global::WinUICommunity.GlyphCode.E97A);
                userType.AddEnumValue("E97B", global::WinUICommunity.GlyphCode.E97B);
                userType.AddEnumValue("E97C", global::WinUICommunity.GlyphCode.E97C);
                userType.AddEnumValue("E97D", global::WinUICommunity.GlyphCode.E97D);
                userType.AddEnumValue("E97E", global::WinUICommunity.GlyphCode.E97E);
                userType.AddEnumValue("E97F", global::WinUICommunity.GlyphCode.E97F);
                userType.AddEnumValue("E980", global::WinUICommunity.GlyphCode.E980);
                userType.AddEnumValue("E981", global::WinUICommunity.GlyphCode.E981);
                userType.AddEnumValue("E982", global::WinUICommunity.GlyphCode.E982);
                userType.AddEnumValue("E983", global::WinUICommunity.GlyphCode.E983);
                userType.AddEnumValue("E984", global::WinUICommunity.GlyphCode.E984);
                userType.AddEnumValue("E985", global::WinUICommunity.GlyphCode.E985);
                userType.AddEnumValue("E986", global::WinUICommunity.GlyphCode.E986);
                userType.AddEnumValue("E987", global::WinUICommunity.GlyphCode.E987);
                userType.AddEnumValue("E988", global::WinUICommunity.GlyphCode.E988);
                userType.AddEnumValue("E989", global::WinUICommunity.GlyphCode.E989);
                userType.AddEnumValue("E98A", global::WinUICommunity.GlyphCode.E98A);
                userType.AddEnumValue("E98F", global::WinUICommunity.GlyphCode.E98F);
                userType.AddEnumValue("E990", global::WinUICommunity.GlyphCode.E990);
                userType.AddEnumValue("E992", global::WinUICommunity.GlyphCode.E992);
                userType.AddEnumValue("E993", global::WinUICommunity.GlyphCode.E993);
                userType.AddEnumValue("E994", global::WinUICommunity.GlyphCode.E994);
                userType.AddEnumValue("E995", global::WinUICommunity.GlyphCode.E995);
                userType.AddEnumValue("E996", global::WinUICommunity.GlyphCode.E996);
                userType.AddEnumValue("E998", global::WinUICommunity.GlyphCode.E998);
                userType.AddEnumValue("E99A", global::WinUICommunity.GlyphCode.E99A);
                userType.AddEnumValue("E9A1", global::WinUICommunity.GlyphCode.E9A1);
                userType.AddEnumValue("E9A6", global::WinUICommunity.GlyphCode.E9A6);
                userType.AddEnumValue("E9A8", global::WinUICommunity.GlyphCode.E9A8);
                userType.AddEnumValue("E9A9", global::WinUICommunity.GlyphCode.E9A9);
                userType.AddEnumValue("E9AA", global::WinUICommunity.GlyphCode.E9AA);
                userType.AddEnumValue("E9AB", global::WinUICommunity.GlyphCode.E9AB);
                userType.AddEnumValue("E9AC", global::WinUICommunity.GlyphCode.E9AC);
                userType.AddEnumValue("E9AD", global::WinUICommunity.GlyphCode.E9AD);
                userType.AddEnumValue("E9AE", global::WinUICommunity.GlyphCode.E9AE);
                userType.AddEnumValue("E9AF", global::WinUICommunity.GlyphCode.E9AF);
                userType.AddEnumValue("E9B0", global::WinUICommunity.GlyphCode.E9B0);
                userType.AddEnumValue("E9B1", global::WinUICommunity.GlyphCode.E9B1);
                userType.AddEnumValue("E9B2", global::WinUICommunity.GlyphCode.E9B2);
                userType.AddEnumValue("E9B3", global::WinUICommunity.GlyphCode.E9B3);
                userType.AddEnumValue("E9B4", global::WinUICommunity.GlyphCode.E9B4);
                userType.AddEnumValue("E9B5", global::WinUICommunity.GlyphCode.E9B5);
                userType.AddEnumValue("E9B6", global::WinUICommunity.GlyphCode.E9B6);
                userType.AddEnumValue("E9B7", global::WinUICommunity.GlyphCode.E9B7);
                userType.AddEnumValue("E9B8", global::WinUICommunity.GlyphCode.E9B8);
                userType.AddEnumValue("E9B9", global::WinUICommunity.GlyphCode.E9B9);
                userType.AddEnumValue("E9BA", global::WinUICommunity.GlyphCode.E9BA);
                userType.AddEnumValue("E9BB", global::WinUICommunity.GlyphCode.E9BB);
                userType.AddEnumValue("E9BC", global::WinUICommunity.GlyphCode.E9BC);
                userType.AddEnumValue("E9CA", global::WinUICommunity.GlyphCode.E9CA);
                userType.AddEnumValue("E9CE", global::WinUICommunity.GlyphCode.E9CE);
                userType.AddEnumValue("E9D2", global::WinUICommunity.GlyphCode.E9D2);
                userType.AddEnumValue("E9D5", global::WinUICommunity.GlyphCode.E9D5);
                userType.AddEnumValue("E9D9", global::WinUICommunity.GlyphCode.E9D9);
                userType.AddEnumValue("E9E9", global::WinUICommunity.GlyphCode.E9E9);
                userType.AddEnumValue("E9F3", global::WinUICommunity.GlyphCode.E9F3);
                userType.AddEnumValue("E9F5", global::WinUICommunity.GlyphCode.E9F5);
                userType.AddEnumValue("E9F9", global::WinUICommunity.GlyphCode.E9F9);
                userType.AddEnumValue("EA0C", global::WinUICommunity.GlyphCode.EA0C);
                userType.AddEnumValue("EA0D", global::WinUICommunity.GlyphCode.EA0D);
                userType.AddEnumValue("EA14", global::WinUICommunity.GlyphCode.EA14);
                userType.AddEnumValue("EA18", global::WinUICommunity.GlyphCode.EA18);
                userType.AddEnumValue("EA1F", global::WinUICommunity.GlyphCode.EA1F);
                userType.AddEnumValue("EA21", global::WinUICommunity.GlyphCode.EA21);
                userType.AddEnumValue("EA24", global::WinUICommunity.GlyphCode.EA24);
                userType.AddEnumValue("EA35", global::WinUICommunity.GlyphCode.EA35);
                userType.AddEnumValue("EA37", global::WinUICommunity.GlyphCode.EA37);
                userType.AddEnumValue("EA38", global::WinUICommunity.GlyphCode.EA38);
                userType.AddEnumValue("EA39", global::WinUICommunity.GlyphCode.EA39);
                userType.AddEnumValue("EA3A", global::WinUICommunity.GlyphCode.EA3A);
                userType.AddEnumValue("EA3B", global::WinUICommunity.GlyphCode.EA3B);
                userType.AddEnumValue("EA3C", global::WinUICommunity.GlyphCode.EA3C);
                userType.AddEnumValue("EA3D", global::WinUICommunity.GlyphCode.EA3D);
                userType.AddEnumValue("EA3F", global::WinUICommunity.GlyphCode.EA3F);
                userType.AddEnumValue("EA40", global::WinUICommunity.GlyphCode.EA40);
                userType.AddEnumValue("EA41", global::WinUICommunity.GlyphCode.EA41);
                userType.AddEnumValue("EA42", global::WinUICommunity.GlyphCode.EA42);
                userType.AddEnumValue("EA43", global::WinUICommunity.GlyphCode.EA43);
                userType.AddEnumValue("EA44", global::WinUICommunity.GlyphCode.EA44);
                userType.AddEnumValue("EA47", global::WinUICommunity.GlyphCode.EA47);
                userType.AddEnumValue("EA48", global::WinUICommunity.GlyphCode.EA48);
                userType.AddEnumValue("EA49", global::WinUICommunity.GlyphCode.EA49);
                userType.AddEnumValue("EA4A", global::WinUICommunity.GlyphCode.EA4A);
                userType.AddEnumValue("EA4B", global::WinUICommunity.GlyphCode.EA4B);
                userType.AddEnumValue("EA4C", global::WinUICommunity.GlyphCode.EA4C);
                userType.AddEnumValue("EA4E", global::WinUICommunity.GlyphCode.EA4E);
                userType.AddEnumValue("EA4F", global::WinUICommunity.GlyphCode.EA4F);
                userType.AddEnumValue("EA50", global::WinUICommunity.GlyphCode.EA50);
                userType.AddEnumValue("EA51", global::WinUICommunity.GlyphCode.EA51);
                userType.AddEnumValue("EA52", global::WinUICommunity.GlyphCode.EA52);
                userType.AddEnumValue("EA53", global::WinUICommunity.GlyphCode.EA53);
                userType.AddEnumValue("EA54", global::WinUICommunity.GlyphCode.EA54);
                userType.AddEnumValue("EA55", global::WinUICommunity.GlyphCode.EA55);
                userType.AddEnumValue("EA56", global::WinUICommunity.GlyphCode.EA56);
                userType.AddEnumValue("EA57", global::WinUICommunity.GlyphCode.EA57);
                userType.AddEnumValue("EA58", global::WinUICommunity.GlyphCode.EA58);
                userType.AddEnumValue("EA5B", global::WinUICommunity.GlyphCode.EA5B);
                userType.AddEnumValue("EA5C", global::WinUICommunity.GlyphCode.EA5C);
                userType.AddEnumValue("EA5E", global::WinUICommunity.GlyphCode.EA5E);
                userType.AddEnumValue("EA5F", global::WinUICommunity.GlyphCode.EA5F);
                userType.AddEnumValue("EA60", global::WinUICommunity.GlyphCode.EA60);
                userType.AddEnumValue("EA61", global::WinUICommunity.GlyphCode.EA61);
                userType.AddEnumValue("EA62", global::WinUICommunity.GlyphCode.EA62);
                userType.AddEnumValue("EA63", global::WinUICommunity.GlyphCode.EA63);
                userType.AddEnumValue("EA64", global::WinUICommunity.GlyphCode.EA64);
                userType.AddEnumValue("EA65", global::WinUICommunity.GlyphCode.EA65);
                userType.AddEnumValue("EA69", global::WinUICommunity.GlyphCode.EA69);
                userType.AddEnumValue("EA6A", global::WinUICommunity.GlyphCode.EA6A);
                userType.AddEnumValue("EA6C", global::WinUICommunity.GlyphCode.EA6C);
                userType.AddEnumValue("EA79", global::WinUICommunity.GlyphCode.EA79);
                userType.AddEnumValue("EA80", global::WinUICommunity.GlyphCode.EA80);
                userType.AddEnumValue("EA81", global::WinUICommunity.GlyphCode.EA81);
                userType.AddEnumValue("EA82", global::WinUICommunity.GlyphCode.EA82);
                userType.AddEnumValue("EA83", global::WinUICommunity.GlyphCode.EA83);
                userType.AddEnumValue("EA84", global::WinUICommunity.GlyphCode.EA84);
                userType.AddEnumValue("EA86", global::WinUICommunity.GlyphCode.EA86);
                userType.AddEnumValue("EA89", global::WinUICommunity.GlyphCode.EA89);
                userType.AddEnumValue("EA8A", global::WinUICommunity.GlyphCode.EA8A);
                userType.AddEnumValue("EA8B", global::WinUICommunity.GlyphCode.EA8B);
                userType.AddEnumValue("EA8C", global::WinUICommunity.GlyphCode.EA8C);
                userType.AddEnumValue("EA8D", global::WinUICommunity.GlyphCode.EA8D);
                userType.AddEnumValue("EA8E", global::WinUICommunity.GlyphCode.EA8E);
                userType.AddEnumValue("EA8F", global::WinUICommunity.GlyphCode.EA8F);
                userType.AddEnumValue("EA90", global::WinUICommunity.GlyphCode.EA90);
                userType.AddEnumValue("EA91", global::WinUICommunity.GlyphCode.EA91);
                userType.AddEnumValue("EA92", global::WinUICommunity.GlyphCode.EA92);
                userType.AddEnumValue("EA93", global::WinUICommunity.GlyphCode.EA93);
                userType.AddEnumValue("EA94", global::WinUICommunity.GlyphCode.EA94);
                userType.AddEnumValue("EA95", global::WinUICommunity.GlyphCode.EA95);
                userType.AddEnumValue("EA97", global::WinUICommunity.GlyphCode.EA97);
                userType.AddEnumValue("EA98", global::WinUICommunity.GlyphCode.EA98);
                userType.AddEnumValue("EA99", global::WinUICommunity.GlyphCode.EA99);
                userType.AddEnumValue("EAC2", global::WinUICommunity.GlyphCode.EAC2);
                userType.AddEnumValue("EADF", global::WinUICommunity.GlyphCode.EADF);
                userType.AddEnumValue("EAFC", global::WinUICommunity.GlyphCode.EAFC);
                userType.AddEnumValue("EB05", global::WinUICommunity.GlyphCode.EB05);
                userType.AddEnumValue("EB0F", global::WinUICommunity.GlyphCode.EB0F);
                userType.AddEnumValue("EB11", global::WinUICommunity.GlyphCode.EB11);
                userType.AddEnumValue("EB3C", global::WinUICommunity.GlyphCode.EB3C);
                userType.AddEnumValue("EB41", global::WinUICommunity.GlyphCode.EB41);
                userType.AddEnumValue("EB42", global::WinUICommunity.GlyphCode.EB42);
                userType.AddEnumValue("EB44", global::WinUICommunity.GlyphCode.EB44);
                userType.AddEnumValue("EB47", global::WinUICommunity.GlyphCode.EB47);
                userType.AddEnumValue("EB48", global::WinUICommunity.GlyphCode.EB48);
                userType.AddEnumValue("EB49", global::WinUICommunity.GlyphCode.EB49);
                userType.AddEnumValue("EB4A", global::WinUICommunity.GlyphCode.EB4A);
                userType.AddEnumValue("EB4B", global::WinUICommunity.GlyphCode.EB4B);
                userType.AddEnumValue("EB4C", global::WinUICommunity.GlyphCode.EB4C);
                userType.AddEnumValue("EB4D", global::WinUICommunity.GlyphCode.EB4D);
                userType.AddEnumValue("EB4E", global::WinUICommunity.GlyphCode.EB4E);
                userType.AddEnumValue("EB4F", global::WinUICommunity.GlyphCode.EB4F);
                userType.AddEnumValue("EB50", global::WinUICommunity.GlyphCode.EB50);
                userType.AddEnumValue("EB51", global::WinUICommunity.GlyphCode.EB51);
                userType.AddEnumValue("EB52", global::WinUICommunity.GlyphCode.EB52);
                userType.AddEnumValue("EB55", global::WinUICommunity.GlyphCode.EB55);
                userType.AddEnumValue("EB56", global::WinUICommunity.GlyphCode.EB56);
                userType.AddEnumValue("EB57", global::WinUICommunity.GlyphCode.EB57);
                userType.AddEnumValue("EB58", global::WinUICommunity.GlyphCode.EB58);
                userType.AddEnumValue("EB59", global::WinUICommunity.GlyphCode.EB59);
                userType.AddEnumValue("EB5A", global::WinUICommunity.GlyphCode.EB5A);
                userType.AddEnumValue("EB5B", global::WinUICommunity.GlyphCode.EB5B);
                userType.AddEnumValue("EB5C", global::WinUICommunity.GlyphCode.EB5C);
                userType.AddEnumValue("EB5D", global::WinUICommunity.GlyphCode.EB5D);
                userType.AddEnumValue("EB5E", global::WinUICommunity.GlyphCode.EB5E);
                userType.AddEnumValue("EB5F", global::WinUICommunity.GlyphCode.EB5F);
                userType.AddEnumValue("EB60", global::WinUICommunity.GlyphCode.EB60);
                userType.AddEnumValue("EB61", global::WinUICommunity.GlyphCode.EB61);
                userType.AddEnumValue("EB62", global::WinUICommunity.GlyphCode.EB62);
                userType.AddEnumValue("EB63", global::WinUICommunity.GlyphCode.EB63);
                userType.AddEnumValue("EB66", global::WinUICommunity.GlyphCode.EB66);
                userType.AddEnumValue("EB67", global::WinUICommunity.GlyphCode.EB67);
                userType.AddEnumValue("EB68", global::WinUICommunity.GlyphCode.EB68);
                userType.AddEnumValue("EB77", global::WinUICommunity.GlyphCode.EB77);
                userType.AddEnumValue("EB7E", global::WinUICommunity.GlyphCode.EB7E);
                userType.AddEnumValue("EB82", global::WinUICommunity.GlyphCode.EB82);
                userType.AddEnumValue("EB83", global::WinUICommunity.GlyphCode.EB83);
                userType.AddEnumValue("EB84", global::WinUICommunity.GlyphCode.EB84);
                userType.AddEnumValue("EB85", global::WinUICommunity.GlyphCode.EB85);
                userType.AddEnumValue("EB86", global::WinUICommunity.GlyphCode.EB86);
                userType.AddEnumValue("EB87", global::WinUICommunity.GlyphCode.EB87);
                userType.AddEnumValue("EB88", global::WinUICommunity.GlyphCode.EB88);
                userType.AddEnumValue("EB89", global::WinUICommunity.GlyphCode.EB89);
                userType.AddEnumValue("EB8A", global::WinUICommunity.GlyphCode.EB8A);
                userType.AddEnumValue("EB8B", global::WinUICommunity.GlyphCode.EB8B);
                userType.AddEnumValue("EB8C", global::WinUICommunity.GlyphCode.EB8C);
                userType.AddEnumValue("EB8D", global::WinUICommunity.GlyphCode.EB8D);
                userType.AddEnumValue("EB90", global::WinUICommunity.GlyphCode.EB90);
                userType.AddEnumValue("EB91", global::WinUICommunity.GlyphCode.EB91);
                userType.AddEnumValue("EB95", global::WinUICommunity.GlyphCode.EB95);
                userType.AddEnumValue("EB96", global::WinUICommunity.GlyphCode.EB96);
                userType.AddEnumValue("EB97", global::WinUICommunity.GlyphCode.EB97);
                userType.AddEnumValue("EB9D", global::WinUICommunity.GlyphCode.EB9D);
                userType.AddEnumValue("EB9E", global::WinUICommunity.GlyphCode.EB9E);
                userType.AddEnumValue("EB9F", global::WinUICommunity.GlyphCode.EB9F);
                userType.AddEnumValue("EBA0", global::WinUICommunity.GlyphCode.EBA0);
                userType.AddEnumValue("EBA1", global::WinUICommunity.GlyphCode.EBA1);
                userType.AddEnumValue("EBA2", global::WinUICommunity.GlyphCode.EBA2);
                userType.AddEnumValue("EBA3", global::WinUICommunity.GlyphCode.EBA3);
                userType.AddEnumValue("EBA4", global::WinUICommunity.GlyphCode.EBA4);
                userType.AddEnumValue("EBA5", global::WinUICommunity.GlyphCode.EBA5);
                userType.AddEnumValue("EBA6", global::WinUICommunity.GlyphCode.EBA6);
                userType.AddEnumValue("EBA7", global::WinUICommunity.GlyphCode.EBA7);
                userType.AddEnumValue("EBA8", global::WinUICommunity.GlyphCode.EBA8);
                userType.AddEnumValue("EBA9", global::WinUICommunity.GlyphCode.EBA9);
                userType.AddEnumValue("EBAA", global::WinUICommunity.GlyphCode.EBAA);
                userType.AddEnumValue("EBAB", global::WinUICommunity.GlyphCode.EBAB);
                userType.AddEnumValue("EBAC", global::WinUICommunity.GlyphCode.EBAC);
                userType.AddEnumValue("EBAD", global::WinUICommunity.GlyphCode.EBAD);
                userType.AddEnumValue("EBAE", global::WinUICommunity.GlyphCode.EBAE);
                userType.AddEnumValue("EBAF", global::WinUICommunity.GlyphCode.EBAF);
                userType.AddEnumValue("EBB0", global::WinUICommunity.GlyphCode.EBB0);
                userType.AddEnumValue("EBB1", global::WinUICommunity.GlyphCode.EBB1);
                userType.AddEnumValue("EBB2", global::WinUICommunity.GlyphCode.EBB2);
                userType.AddEnumValue("EBB3", global::WinUICommunity.GlyphCode.EBB3);
                userType.AddEnumValue("EBB4", global::WinUICommunity.GlyphCode.EBB4);
                userType.AddEnumValue("EBB5", global::WinUICommunity.GlyphCode.EBB5);
                userType.AddEnumValue("EBB6", global::WinUICommunity.GlyphCode.EBB6);
                userType.AddEnumValue("EBB7", global::WinUICommunity.GlyphCode.EBB7);
                userType.AddEnumValue("EBB8", global::WinUICommunity.GlyphCode.EBB8);
                userType.AddEnumValue("EBB9", global::WinUICommunity.GlyphCode.EBB9);
                userType.AddEnumValue("EBBA", global::WinUICommunity.GlyphCode.EBBA);
                userType.AddEnumValue("EBBB", global::WinUICommunity.GlyphCode.EBBB);
                userType.AddEnumValue("EBBC", global::WinUICommunity.GlyphCode.EBBC);
                userType.AddEnumValue("EBBD", global::WinUICommunity.GlyphCode.EBBD);
                userType.AddEnumValue("EBBE", global::WinUICommunity.GlyphCode.EBBE);
                userType.AddEnumValue("EBBF", global::WinUICommunity.GlyphCode.EBBF);
                userType.AddEnumValue("EBC0", global::WinUICommunity.GlyphCode.EBC0);
                userType.AddEnumValue("EBC3", global::WinUICommunity.GlyphCode.EBC3);
                userType.AddEnumValue("EBC4", global::WinUICommunity.GlyphCode.EBC4);
                userType.AddEnumValue("EBC5", global::WinUICommunity.GlyphCode.EBC5);
                userType.AddEnumValue("EBC6", global::WinUICommunity.GlyphCode.EBC6);
                userType.AddEnumValue("EBD2", global::WinUICommunity.GlyphCode.EBD2);
                userType.AddEnumValue("EBD3", global::WinUICommunity.GlyphCode.EBD3);
                userType.AddEnumValue("EBD4", global::WinUICommunity.GlyphCode.EBD4);
                userType.AddEnumValue("EBD5", global::WinUICommunity.GlyphCode.EBD5);
                userType.AddEnumValue("EBD6", global::WinUICommunity.GlyphCode.EBD6);
                userType.AddEnumValue("EBD7", global::WinUICommunity.GlyphCode.EBD7);
                userType.AddEnumValue("EBD8", global::WinUICommunity.GlyphCode.EBD8);
                userType.AddEnumValue("EBD9", global::WinUICommunity.GlyphCode.EBD9);
                userType.AddEnumValue("EBDA", global::WinUICommunity.GlyphCode.EBDA);
                userType.AddEnumValue("EBDB", global::WinUICommunity.GlyphCode.EBDB);
                userType.AddEnumValue("EBDE", global::WinUICommunity.GlyphCode.EBDE);
                userType.AddEnumValue("EBE6", global::WinUICommunity.GlyphCode.EBE6);
                userType.AddEnumValue("EBE7", global::WinUICommunity.GlyphCode.EBE7);
                userType.AddEnumValue("EBE8", global::WinUICommunity.GlyphCode.EBE8);
                userType.AddEnumValue("EBFC", global::WinUICommunity.GlyphCode.EBFC);
                userType.AddEnumValue("EBFD", global::WinUICommunity.GlyphCode.EBFD);
                userType.AddEnumValue("EBFE", global::WinUICommunity.GlyphCode.EBFE);
                userType.AddEnumValue("EBFF", global::WinUICommunity.GlyphCode.EBFF);
                userType.AddEnumValue("EC00", global::WinUICommunity.GlyphCode.EC00);
                userType.AddEnumValue("EC02", global::WinUICommunity.GlyphCode.EC02);
                userType.AddEnumValue("EC05", global::WinUICommunity.GlyphCode.EC05);
                userType.AddEnumValue("EC06", global::WinUICommunity.GlyphCode.EC06);
                userType.AddEnumValue("EC07", global::WinUICommunity.GlyphCode.EC07);
                userType.AddEnumValue("EC08", global::WinUICommunity.GlyphCode.EC08);
                userType.AddEnumValue("EC09", global::WinUICommunity.GlyphCode.EC09);
                userType.AddEnumValue("EC0A", global::WinUICommunity.GlyphCode.EC0A);
                userType.AddEnumValue("EC0B", global::WinUICommunity.GlyphCode.EC0B);
                userType.AddEnumValue("EC11", global::WinUICommunity.GlyphCode.EC11);
                userType.AddEnumValue("EC12", global::WinUICommunity.GlyphCode.EC12);
                userType.AddEnumValue("EC13", global::WinUICommunity.GlyphCode.EC13);
                userType.AddEnumValue("EC14", global::WinUICommunity.GlyphCode.EC14);
                userType.AddEnumValue("EC15", global::WinUICommunity.GlyphCode.EC15);
                userType.AddEnumValue("EC16", global::WinUICommunity.GlyphCode.EC16);
                userType.AddEnumValue("EC19", global::WinUICommunity.GlyphCode.EC19);
                userType.AddEnumValue("EC1B", global::WinUICommunity.GlyphCode.EC1B);
                userType.AddEnumValue("EC1E", global::WinUICommunity.GlyphCode.EC1E);
                userType.AddEnumValue("EC20", global::WinUICommunity.GlyphCode.EC20);
                userType.AddEnumValue("EC24", global::WinUICommunity.GlyphCode.EC24);
                userType.AddEnumValue("EC25", global::WinUICommunity.GlyphCode.EC25);
                userType.AddEnumValue("EC26", global::WinUICommunity.GlyphCode.EC26);
                userType.AddEnumValue("EC27", global::WinUICommunity.GlyphCode.EC27);
                userType.AddEnumValue("EC31", global::WinUICommunity.GlyphCode.EC31);
                userType.AddEnumValue("EC32", global::WinUICommunity.GlyphCode.EC32);
                userType.AddEnumValue("EC37", global::WinUICommunity.GlyphCode.EC37);
                userType.AddEnumValue("EC38", global::WinUICommunity.GlyphCode.EC38);
                userType.AddEnumValue("EC39", global::WinUICommunity.GlyphCode.EC39);
                userType.AddEnumValue("EC3A", global::WinUICommunity.GlyphCode.EC3A);
                userType.AddEnumValue("EC3B", global::WinUICommunity.GlyphCode.EC3B);
                userType.AddEnumValue("EC3C", global::WinUICommunity.GlyphCode.EC3C);
                userType.AddEnumValue("EC3D", global::WinUICommunity.GlyphCode.EC3D);
                userType.AddEnumValue("EC3E", global::WinUICommunity.GlyphCode.EC3E);
                userType.AddEnumValue("EC3F", global::WinUICommunity.GlyphCode.EC3F);
                userType.AddEnumValue("EC40", global::WinUICommunity.GlyphCode.EC40);
                userType.AddEnumValue("EC41", global::WinUICommunity.GlyphCode.EC41);
                userType.AddEnumValue("EC42", global::WinUICommunity.GlyphCode.EC42);
                userType.AddEnumValue("EC43", global::WinUICommunity.GlyphCode.EC43);
                userType.AddEnumValue("EC44", global::WinUICommunity.GlyphCode.EC44);
                userType.AddEnumValue("EC45", global::WinUICommunity.GlyphCode.EC45);
                userType.AddEnumValue("EC46", global::WinUICommunity.GlyphCode.EC46);
                userType.AddEnumValue("EC47", global::WinUICommunity.GlyphCode.EC47);
                userType.AddEnumValue("EC48", global::WinUICommunity.GlyphCode.EC48);
                userType.AddEnumValue("EC49", global::WinUICommunity.GlyphCode.EC49);
                userType.AddEnumValue("EC4A", global::WinUICommunity.GlyphCode.EC4A);
                userType.AddEnumValue("EC4E", global::WinUICommunity.GlyphCode.EC4E);
                userType.AddEnumValue("EC4F", global::WinUICommunity.GlyphCode.EC4F);
                userType.AddEnumValue("EC50", global::WinUICommunity.GlyphCode.EC50);
                userType.AddEnumValue("EC51", global::WinUICommunity.GlyphCode.EC51);
                userType.AddEnumValue("EC52", global::WinUICommunity.GlyphCode.EC52);
                userType.AddEnumValue("EC54", global::WinUICommunity.GlyphCode.EC54);
                userType.AddEnumValue("EC55", global::WinUICommunity.GlyphCode.EC55);
                userType.AddEnumValue("EC56", global::WinUICommunity.GlyphCode.EC56);
                userType.AddEnumValue("EC57", global::WinUICommunity.GlyphCode.EC57);
                userType.AddEnumValue("EC58", global::WinUICommunity.GlyphCode.EC58);
                userType.AddEnumValue("EC59", global::WinUICommunity.GlyphCode.EC59);
                userType.AddEnumValue("EC5A", global::WinUICommunity.GlyphCode.EC5A);
                userType.AddEnumValue("EC5B", global::WinUICommunity.GlyphCode.EC5B);
                userType.AddEnumValue("EC5C", global::WinUICommunity.GlyphCode.EC5C);
                userType.AddEnumValue("EC61", global::WinUICommunity.GlyphCode.EC61);
                userType.AddEnumValue("EC64", global::WinUICommunity.GlyphCode.EC64);
                userType.AddEnumValue("EC6C", global::WinUICommunity.GlyphCode.EC6C);
                userType.AddEnumValue("EC6D", global::WinUICommunity.GlyphCode.EC6D);
                userType.AddEnumValue("EC71", global::WinUICommunity.GlyphCode.EC71);
                userType.AddEnumValue("EC72", global::WinUICommunity.GlyphCode.EC72);
                userType.AddEnumValue("EC74", global::WinUICommunity.GlyphCode.EC74);
                userType.AddEnumValue("EC75", global::WinUICommunity.GlyphCode.EC75);
                userType.AddEnumValue("EC76", global::WinUICommunity.GlyphCode.EC76);
                userType.AddEnumValue("EC77", global::WinUICommunity.GlyphCode.EC77);
                userType.AddEnumValue("EC7A", global::WinUICommunity.GlyphCode.EC7A);
                userType.AddEnumValue("EC7E", global::WinUICommunity.GlyphCode.EC7E);
                userType.AddEnumValue("EC7F", global::WinUICommunity.GlyphCode.EC7F);
                userType.AddEnumValue("EC80", global::WinUICommunity.GlyphCode.EC80);
                userType.AddEnumValue("EC81", global::WinUICommunity.GlyphCode.EC81);
                userType.AddEnumValue("EC87", global::WinUICommunity.GlyphCode.EC87);
                userType.AddEnumValue("EC88", global::WinUICommunity.GlyphCode.EC88);
                userType.AddEnumValue("EC8A", global::WinUICommunity.GlyphCode.EC8A);
                userType.AddEnumValue("EC8F", global::WinUICommunity.GlyphCode.EC8F);
                userType.AddEnumValue("EC92", global::WinUICommunity.GlyphCode.EC92);
                userType.AddEnumValue("EC94", global::WinUICommunity.GlyphCode.EC94);
                userType.AddEnumValue("ECA5", global::WinUICommunity.GlyphCode.ECA5);
                userType.AddEnumValue("ECA7", global::WinUICommunity.GlyphCode.ECA7);
                userType.AddEnumValue("ECAA", global::WinUICommunity.GlyphCode.ECAA);
                userType.AddEnumValue("ECAD", global::WinUICommunity.GlyphCode.ECAD);
                userType.AddEnumValue("ECAF", global::WinUICommunity.GlyphCode.ECAF);
                userType.AddEnumValue("ECB9", global::WinUICommunity.GlyphCode.ECB9);
                userType.AddEnumValue("ECBA", global::WinUICommunity.GlyphCode.ECBA);
                userType.AddEnumValue("ECBB", global::WinUICommunity.GlyphCode.ECBB);
                userType.AddEnumValue("ECBC", global::WinUICommunity.GlyphCode.ECBC);
                userType.AddEnumValue("ECBD", global::WinUICommunity.GlyphCode.ECBD);
                userType.AddEnumValue("ECBE", global::WinUICommunity.GlyphCode.ECBE);
                userType.AddEnumValue("ECBF", global::WinUICommunity.GlyphCode.ECBF);
                userType.AddEnumValue("ECC4", global::WinUICommunity.GlyphCode.ECC4);
                userType.AddEnumValue("ECC5", global::WinUICommunity.GlyphCode.ECC5);
                userType.AddEnumValue("ECC6", global::WinUICommunity.GlyphCode.ECC6);
                userType.AddEnumValue("ECC8", global::WinUICommunity.GlyphCode.ECC8);
                userType.AddEnumValue("ECC9", global::WinUICommunity.GlyphCode.ECC9);
                userType.AddEnumValue("ECCA", global::WinUICommunity.GlyphCode.ECCA);
                userType.AddEnumValue("ECCB", global::WinUICommunity.GlyphCode.ECCB);
                userType.AddEnumValue("ECCC", global::WinUICommunity.GlyphCode.ECCC);
                userType.AddEnumValue("ECCD", global::WinUICommunity.GlyphCode.ECCD);
                userType.AddEnumValue("ECE4", global::WinUICommunity.GlyphCode.ECE4);
                userType.AddEnumValue("ECE7", global::WinUICommunity.GlyphCode.ECE7);
                userType.AddEnumValue("ECE8", global::WinUICommunity.GlyphCode.ECE8);
                userType.AddEnumValue("ECE9", global::WinUICommunity.GlyphCode.ECE9);
                userType.AddEnumValue("ECF0", global::WinUICommunity.GlyphCode.ECF0);
                userType.AddEnumValue("ECF1", global::WinUICommunity.GlyphCode.ECF1);
                userType.AddEnumValue("ECF3", global::WinUICommunity.GlyphCode.ECF3);
                userType.AddEnumValue("ED0C", global::WinUICommunity.GlyphCode.ED0C);
                userType.AddEnumValue("ED0D", global::WinUICommunity.GlyphCode.ED0D);
                userType.AddEnumValue("ED0E", global::WinUICommunity.GlyphCode.ED0E);
                userType.AddEnumValue("ED10", global::WinUICommunity.GlyphCode.ED10);
                userType.AddEnumValue("ED11", global::WinUICommunity.GlyphCode.ED11);
                userType.AddEnumValue("ED14", global::WinUICommunity.GlyphCode.ED14);
                userType.AddEnumValue("ED15", global::WinUICommunity.GlyphCode.ED15);
                userType.AddEnumValue("ED1A", global::WinUICommunity.GlyphCode.ED1A);
                userType.AddEnumValue("ED1E", global::WinUICommunity.GlyphCode.ED1E);
                userType.AddEnumValue("ED1F", global::WinUICommunity.GlyphCode.ED1F);
                userType.AddEnumValue("ED25", global::WinUICommunity.GlyphCode.ED25);
                userType.AddEnumValue("ED28", global::WinUICommunity.GlyphCode.ED28);
                userType.AddEnumValue("ED2A", global::WinUICommunity.GlyphCode.ED2A);
                userType.AddEnumValue("ED2B", global::WinUICommunity.GlyphCode.ED2B);
                userType.AddEnumValue("ED2C", global::WinUICommunity.GlyphCode.ED2C);
                userType.AddEnumValue("ED2D", global::WinUICommunity.GlyphCode.ED2D);
                userType.AddEnumValue("ED2E", global::WinUICommunity.GlyphCode.ED2E);
                userType.AddEnumValue("ED2F", global::WinUICommunity.GlyphCode.ED2F);
                userType.AddEnumValue("ED30", global::WinUICommunity.GlyphCode.ED30);
                userType.AddEnumValue("ED31", global::WinUICommunity.GlyphCode.ED31);
                userType.AddEnumValue("ED32", global::WinUICommunity.GlyphCode.ED32);
                userType.AddEnumValue("ED33", global::WinUICommunity.GlyphCode.ED33);
                userType.AddEnumValue("ED35", global::WinUICommunity.GlyphCode.ED35);
                userType.AddEnumValue("ED39", global::WinUICommunity.GlyphCode.ED39);
                userType.AddEnumValue("ED3A", global::WinUICommunity.GlyphCode.ED3A);
                userType.AddEnumValue("ED3C", global::WinUICommunity.GlyphCode.ED3C);
                userType.AddEnumValue("ED3D", global::WinUICommunity.GlyphCode.ED3D);
                userType.AddEnumValue("ED41", global::WinUICommunity.GlyphCode.ED41);
                userType.AddEnumValue("ED42", global::WinUICommunity.GlyphCode.ED42);
                userType.AddEnumValue("ED43", global::WinUICommunity.GlyphCode.ED43);
                userType.AddEnumValue("ED44", global::WinUICommunity.GlyphCode.ED44);
                userType.AddEnumValue("ED47", global::WinUICommunity.GlyphCode.ED47);
                userType.AddEnumValue("ED4C", global::WinUICommunity.GlyphCode.ED4C);
                userType.AddEnumValue("ED4D", global::WinUICommunity.GlyphCode.ED4D);
                userType.AddEnumValue("ED53", global::WinUICommunity.GlyphCode.ED53);
                userType.AddEnumValue("ED54", global::WinUICommunity.GlyphCode.ED54);
                userType.AddEnumValue("ED55", global::WinUICommunity.GlyphCode.ED55);
                userType.AddEnumValue("ED56", global::WinUICommunity.GlyphCode.ED56);
                userType.AddEnumValue("ED57", global::WinUICommunity.GlyphCode.ED57);
                userType.AddEnumValue("ED58", global::WinUICommunity.GlyphCode.ED58);
                userType.AddEnumValue("ED59", global::WinUICommunity.GlyphCode.ED59);
                userType.AddEnumValue("ED5A", global::WinUICommunity.GlyphCode.ED5A);
                userType.AddEnumValue("ED5B", global::WinUICommunity.GlyphCode.ED5B);
                userType.AddEnumValue("ED5C", global::WinUICommunity.GlyphCode.ED5C);
                userType.AddEnumValue("ED5D", global::WinUICommunity.GlyphCode.ED5D);
                userType.AddEnumValue("ED5E", global::WinUICommunity.GlyphCode.ED5E);
                userType.AddEnumValue("ED5F", global::WinUICommunity.GlyphCode.ED5F);
                userType.AddEnumValue("ED60", global::WinUICommunity.GlyphCode.ED60);
                userType.AddEnumValue("ED61", global::WinUICommunity.GlyphCode.ED61);
                userType.AddEnumValue("ED62", global::WinUICommunity.GlyphCode.ED62);
                userType.AddEnumValue("ED63", global::WinUICommunity.GlyphCode.ED63);
                userType.AddEnumValue("ED64", global::WinUICommunity.GlyphCode.ED64);
                userType.AddEnumValue("ED65", global::WinUICommunity.GlyphCode.ED65);
                userType.AddEnumValue("ED66", global::WinUICommunity.GlyphCode.ED66);
                userType.AddEnumValue("ED67", global::WinUICommunity.GlyphCode.ED67);
                userType.AddEnumValue("EDA2", global::WinUICommunity.GlyphCode.EDA2);
                userType.AddEnumValue("EDA3", global::WinUICommunity.GlyphCode.EDA3);
                userType.AddEnumValue("EDA4", global::WinUICommunity.GlyphCode.EDA4);
                userType.AddEnumValue("EDA5", global::WinUICommunity.GlyphCode.EDA5);
                userType.AddEnumValue("EDA6", global::WinUICommunity.GlyphCode.EDA6);
                userType.AddEnumValue("EDA7", global::WinUICommunity.GlyphCode.EDA7);
                userType.AddEnumValue("EDA8", global::WinUICommunity.GlyphCode.EDA8);
                userType.AddEnumValue("EDA9", global::WinUICommunity.GlyphCode.EDA9);
                userType.AddEnumValue("EDAA", global::WinUICommunity.GlyphCode.EDAA);
                userType.AddEnumValue("EDAB", global::WinUICommunity.GlyphCode.EDAB);
                userType.AddEnumValue("EDAC", global::WinUICommunity.GlyphCode.EDAC);
                userType.AddEnumValue("EDAD", global::WinUICommunity.GlyphCode.EDAD);
                userType.AddEnumValue("EDAE", global::WinUICommunity.GlyphCode.EDAE);
                userType.AddEnumValue("EDAF", global::WinUICommunity.GlyphCode.EDAF);
                userType.AddEnumValue("EDB0", global::WinUICommunity.GlyphCode.EDB0);
                userType.AddEnumValue("EDB1", global::WinUICommunity.GlyphCode.EDB1);
                userType.AddEnumValue("EDB3", global::WinUICommunity.GlyphCode.EDB3);
                userType.AddEnumValue("EDB4", global::WinUICommunity.GlyphCode.EDB4);
                userType.AddEnumValue("EDB5", global::WinUICommunity.GlyphCode.EDB5);
                userType.AddEnumValue("EDC6", global::WinUICommunity.GlyphCode.EDC6);
                userType.AddEnumValue("EDD5", global::WinUICommunity.GlyphCode.EDD5);
                userType.AddEnumValue("EDD6", global::WinUICommunity.GlyphCode.EDD6);
                userType.AddEnumValue("EDD7", global::WinUICommunity.GlyphCode.EDD7);
                userType.AddEnumValue("EDD8", global::WinUICommunity.GlyphCode.EDD8);
                userType.AddEnumValue("EDD9", global::WinUICommunity.GlyphCode.EDD9);
                userType.AddEnumValue("EDDA", global::WinUICommunity.GlyphCode.EDDA);
                userType.AddEnumValue("EDDB", global::WinUICommunity.GlyphCode.EDDB);
                userType.AddEnumValue("EDDC", global::WinUICommunity.GlyphCode.EDDC);
                userType.AddEnumValue("EDE0", global::WinUICommunity.GlyphCode.EDE0);
                userType.AddEnumValue("EDE1", global::WinUICommunity.GlyphCode.EDE1);
                userType.AddEnumValue("EDE2", global::WinUICommunity.GlyphCode.EDE2);
                userType.AddEnumValue("EDE3", global::WinUICommunity.GlyphCode.EDE3);
                userType.AddEnumValue("EDE4", global::WinUICommunity.GlyphCode.EDE4);
                userType.AddEnumValue("EDE5", global::WinUICommunity.GlyphCode.EDE5);
                userType.AddEnumValue("EDFB", global::WinUICommunity.GlyphCode.EDFB);
                userType.AddEnumValue("EE35", global::WinUICommunity.GlyphCode.EE35);
                userType.AddEnumValue("EE3F", global::WinUICommunity.GlyphCode.EE3F);
                userType.AddEnumValue("EE40", global::WinUICommunity.GlyphCode.EE40);
                userType.AddEnumValue("EE47", global::WinUICommunity.GlyphCode.EE47);
                userType.AddEnumValue("EE49", global::WinUICommunity.GlyphCode.EE49);
                userType.AddEnumValue("EE4A", global::WinUICommunity.GlyphCode.EE4A);
                userType.AddEnumValue("EE56", global::WinUICommunity.GlyphCode.EE56);
                userType.AddEnumValue("EE57", global::WinUICommunity.GlyphCode.EE57);
                userType.AddEnumValue("EE63", global::WinUICommunity.GlyphCode.EE63);
                userType.AddEnumValue("EE64", global::WinUICommunity.GlyphCode.EE64);
                userType.AddEnumValue("EE65", global::WinUICommunity.GlyphCode.EE65);
                userType.AddEnumValue("EE6F", global::WinUICommunity.GlyphCode.EE6F);
                userType.AddEnumValue("EE71", global::WinUICommunity.GlyphCode.EE71);
                userType.AddEnumValue("EE77", global::WinUICommunity.GlyphCode.EE77);
                userType.AddEnumValue("EE79", global::WinUICommunity.GlyphCode.EE79);
                userType.AddEnumValue("EE7A", global::WinUICommunity.GlyphCode.EE7A);
                userType.AddEnumValue("EE92", global::WinUICommunity.GlyphCode.EE92);
                userType.AddEnumValue("EE93", global::WinUICommunity.GlyphCode.EE93);
                userType.AddEnumValue("EE94", global::WinUICommunity.GlyphCode.EE94);
                userType.AddEnumValue("EEA3", global::WinUICommunity.GlyphCode.EEA3);
                userType.AddEnumValue("EECA", global::WinUICommunity.GlyphCode.EECA);
                userType.AddEnumValue("EF15", global::WinUICommunity.GlyphCode.EF15);
                userType.AddEnumValue("EF16", global::WinUICommunity.GlyphCode.EF16);
                userType.AddEnumValue("EF17", global::WinUICommunity.GlyphCode.EF17);
                userType.AddEnumValue("EF18", global::WinUICommunity.GlyphCode.EF18);
                userType.AddEnumValue("EF19", global::WinUICommunity.GlyphCode.EF19);
                userType.AddEnumValue("EF1F", global::WinUICommunity.GlyphCode.EF1F);
                userType.AddEnumValue("EF20", global::WinUICommunity.GlyphCode.EF20);
                userType.AddEnumValue("EF2C", global::WinUICommunity.GlyphCode.EF2C);
                userType.AddEnumValue("EF2D", global::WinUICommunity.GlyphCode.EF2D);
                userType.AddEnumValue("EF2E", global::WinUICommunity.GlyphCode.EF2E);
                userType.AddEnumValue("EF2F", global::WinUICommunity.GlyphCode.EF2F);
                userType.AddEnumValue("EF31", global::WinUICommunity.GlyphCode.EF31);
                userType.AddEnumValue("EF3B", global::WinUICommunity.GlyphCode.EF3B);
                userType.AddEnumValue("EF3C", global::WinUICommunity.GlyphCode.EF3C);
                userType.AddEnumValue("EF3D", global::WinUICommunity.GlyphCode.EF3D);
                userType.AddEnumValue("EF3E", global::WinUICommunity.GlyphCode.EF3E);
                userType.AddEnumValue("EF3F", global::WinUICommunity.GlyphCode.EF3F);
                userType.AddEnumValue("EF40", global::WinUICommunity.GlyphCode.EF40);
                userType.AddEnumValue("EF42", global::WinUICommunity.GlyphCode.EF42);
                userType.AddEnumValue("EF58", global::WinUICommunity.GlyphCode.EF58);
                userType.AddEnumValue("EF6B", global::WinUICommunity.GlyphCode.EF6B);
                userType.AddEnumValue("EF90", global::WinUICommunity.GlyphCode.EF90);
                userType.AddEnumValue("EFA5", global::WinUICommunity.GlyphCode.EFA5);
                userType.AddEnumValue("EFA9", global::WinUICommunity.GlyphCode.EFA9);
                userType.AddEnumValue("F000", global::WinUICommunity.GlyphCode.F000);
                userType.AddEnumValue("F003", global::WinUICommunity.GlyphCode.F003);
                userType.AddEnumValue("F012", global::WinUICommunity.GlyphCode.F012);
                userType.AddEnumValue("F080", global::WinUICommunity.GlyphCode.F080);
                userType.AddEnumValue("F081", global::WinUICommunity.GlyphCode.F081);
                userType.AddEnumValue("F085", global::WinUICommunity.GlyphCode.F085);
                userType.AddEnumValue("F08C", global::WinUICommunity.GlyphCode.F08C);
                userType.AddEnumValue("F08D", global::WinUICommunity.GlyphCode.F08D);
                userType.AddEnumValue("F08E", global::WinUICommunity.GlyphCode.F08E);
                userType.AddEnumValue("F08F", global::WinUICommunity.GlyphCode.F08F);
                userType.AddEnumValue("F090", global::WinUICommunity.GlyphCode.F090);
                userType.AddEnumValue("F093", global::WinUICommunity.GlyphCode.F093);
                userType.AddEnumValue("F094", global::WinUICommunity.GlyphCode.F094);
                userType.AddEnumValue("F095", global::WinUICommunity.GlyphCode.F095);
                userType.AddEnumValue("F096", global::WinUICommunity.GlyphCode.F096);
                userType.AddEnumValue("F0AD", global::WinUICommunity.GlyphCode.F0AD);
                userType.AddEnumValue("F0AE", global::WinUICommunity.GlyphCode.F0AE);
                userType.AddEnumValue("F0AF", global::WinUICommunity.GlyphCode.F0AF);
                userType.AddEnumValue("F0B0", global::WinUICommunity.GlyphCode.F0B0);
                userType.AddEnumValue("F0B2", global::WinUICommunity.GlyphCode.F0B2);
                userType.AddEnumValue("F0B3", global::WinUICommunity.GlyphCode.F0B3);
                userType.AddEnumValue("F0B4", global::WinUICommunity.GlyphCode.F0B4);
                userType.AddEnumValue("F0B5", global::WinUICommunity.GlyphCode.F0B5);
                userType.AddEnumValue("F0B6", global::WinUICommunity.GlyphCode.F0B6);
                userType.AddEnumValue("F0B7", global::WinUICommunity.GlyphCode.F0B7);
                userType.AddEnumValue("F0B8", global::WinUICommunity.GlyphCode.F0B8);
                userType.AddEnumValue("F0B9", global::WinUICommunity.GlyphCode.F0B9);
                userType.AddEnumValue("F0C6", global::WinUICommunity.GlyphCode.F0C6);
                userType.AddEnumValue("F0C7", global::WinUICommunity.GlyphCode.F0C7);
                userType.AddEnumValue("F0CA", global::WinUICommunity.GlyphCode.F0CA);
                userType.AddEnumValue("F0CB", global::WinUICommunity.GlyphCode.F0CB);
                userType.AddEnumValue("F0CC", global::WinUICommunity.GlyphCode.F0CC);
                userType.AddEnumValue("F0CD", global::WinUICommunity.GlyphCode.F0CD);
                userType.AddEnumValue("F0CE", global::WinUICommunity.GlyphCode.F0CE);
                userType.AddEnumValue("F0D2", global::WinUICommunity.GlyphCode.F0D2);
                userType.AddEnumValue("F0D3", global::WinUICommunity.GlyphCode.F0D3);
                userType.AddEnumValue("F0D5", global::WinUICommunity.GlyphCode.F0D5);
                userType.AddEnumValue("F0D6", global::WinUICommunity.GlyphCode.F0D6);
                userType.AddEnumValue("F0D7", global::WinUICommunity.GlyphCode.F0D7);
                userType.AddEnumValue("F0D8", global::WinUICommunity.GlyphCode.F0D8);
                userType.AddEnumValue("F0E2", global::WinUICommunity.GlyphCode.F0E2);
                userType.AddEnumValue("F0E3", global::WinUICommunity.GlyphCode.F0E3);
                userType.AddEnumValue("F0E4", global::WinUICommunity.GlyphCode.F0E4);
                userType.AddEnumValue("F0E5", global::WinUICommunity.GlyphCode.F0E5);
                userType.AddEnumValue("F0E6", global::WinUICommunity.GlyphCode.F0E6);
                userType.AddEnumValue("F0E7", global::WinUICommunity.GlyphCode.F0E7);
                userType.AddEnumValue("F0E8", global::WinUICommunity.GlyphCode.F0E8);
                userType.AddEnumValue("F0E9", global::WinUICommunity.GlyphCode.F0E9);
                userType.AddEnumValue("F0EA", global::WinUICommunity.GlyphCode.F0EA);
                userType.AddEnumValue("F0EB", global::WinUICommunity.GlyphCode.F0EB);
                userType.AddEnumValue("F0EC", global::WinUICommunity.GlyphCode.F0EC);
                userType.AddEnumValue("F0ED", global::WinUICommunity.GlyphCode.F0ED);
                userType.AddEnumValue("F0EE", global::WinUICommunity.GlyphCode.F0EE);
                userType.AddEnumValue("F0EF", global::WinUICommunity.GlyphCode.F0EF);
                userType.AddEnumValue("F0F7", global::WinUICommunity.GlyphCode.F0F7);
                userType.AddEnumValue("F0F8", global::WinUICommunity.GlyphCode.F0F8);
                userType.AddEnumValue("F0F9", global::WinUICommunity.GlyphCode.F0F9);
                userType.AddEnumValue("F0FB", global::WinUICommunity.GlyphCode.F0FB);
                userType.AddEnumValue("F103", global::WinUICommunity.GlyphCode.F103);
                userType.AddEnumValue("F108", global::WinUICommunity.GlyphCode.F108);
                userType.AddEnumValue("F109", global::WinUICommunity.GlyphCode.F109);
                userType.AddEnumValue("F10A", global::WinUICommunity.GlyphCode.F10A);
                userType.AddEnumValue("F10B", global::WinUICommunity.GlyphCode.F10B);
                userType.AddEnumValue("F10C", global::WinUICommunity.GlyphCode.F10C);
                userType.AddEnumValue("F10D", global::WinUICommunity.GlyphCode.F10D);
                userType.AddEnumValue("F10E", global::WinUICommunity.GlyphCode.F10E);
                userType.AddEnumValue("F110", global::WinUICommunity.GlyphCode.F110);
                userType.AddEnumValue("F111", global::WinUICommunity.GlyphCode.F111);
                userType.AddEnumValue("F119", global::WinUICommunity.GlyphCode.F119);
                userType.AddEnumValue("F11B", global::WinUICommunity.GlyphCode.F11B);
                userType.AddEnumValue("F126", global::WinUICommunity.GlyphCode.F126);
                userType.AddEnumValue("F127", global::WinUICommunity.GlyphCode.F127);
                userType.AddEnumValue("F128", global::WinUICommunity.GlyphCode.F128);
                userType.AddEnumValue("F129", global::WinUICommunity.GlyphCode.F129);
                userType.AddEnumValue("F12A", global::WinUICommunity.GlyphCode.F12A);
                userType.AddEnumValue("F12B", global::WinUICommunity.GlyphCode.F12B);
                userType.AddEnumValue("F12E", global::WinUICommunity.GlyphCode.F12E);
                userType.AddEnumValue("F12F", global::WinUICommunity.GlyphCode.F12F);
                userType.AddEnumValue("F131", global::WinUICommunity.GlyphCode.F131);
                userType.AddEnumValue("F133", global::WinUICommunity.GlyphCode.F133);
                userType.AddEnumValue("F136", global::WinUICommunity.GlyphCode.F136);
                userType.AddEnumValue("F137", global::WinUICommunity.GlyphCode.F137);
                userType.AddEnumValue("F138", global::WinUICommunity.GlyphCode.F138);
                userType.AddEnumValue("F139", global::WinUICommunity.GlyphCode.F139);
                userType.AddEnumValue("F13A", global::WinUICommunity.GlyphCode.F13A);
                userType.AddEnumValue("F13B", global::WinUICommunity.GlyphCode.F13B);
                userType.AddEnumValue("F13C", global::WinUICommunity.GlyphCode.F13C);
                userType.AddEnumValue("F13D", global::WinUICommunity.GlyphCode.F13D);
                userType.AddEnumValue("F13E", global::WinUICommunity.GlyphCode.F13E);
                userType.AddEnumValue("F13F", global::WinUICommunity.GlyphCode.F13F);
                userType.AddEnumValue("F140", global::WinUICommunity.GlyphCode.F140);
                userType.AddEnumValue("F141", global::WinUICommunity.GlyphCode.F141);
                userType.AddEnumValue("F142", global::WinUICommunity.GlyphCode.F142);
                userType.AddEnumValue("F143", global::WinUICommunity.GlyphCode.F143);
                userType.AddEnumValue("F146", global::WinUICommunity.GlyphCode.F146);
                userType.AddEnumValue("F147", global::WinUICommunity.GlyphCode.F147);
                userType.AddEnumValue("F148", global::WinUICommunity.GlyphCode.F148);
                userType.AddEnumValue("F149", global::WinUICommunity.GlyphCode.F149);
                userType.AddEnumValue("F14A", global::WinUICommunity.GlyphCode.F14A);
                userType.AddEnumValue("F14B", global::WinUICommunity.GlyphCode.F14B);
                userType.AddEnumValue("F14C", global::WinUICommunity.GlyphCode.F14C);
                userType.AddEnumValue("F14D", global::WinUICommunity.GlyphCode.F14D);
                userType.AddEnumValue("F14E", global::WinUICommunity.GlyphCode.F14E);
                userType.AddEnumValue("F14F", global::WinUICommunity.GlyphCode.F14F);
                userType.AddEnumValue("F150", global::WinUICommunity.GlyphCode.F150);
                userType.AddEnumValue("F151", global::WinUICommunity.GlyphCode.F151);
                userType.AddEnumValue("F152", global::WinUICommunity.GlyphCode.F152);
                userType.AddEnumValue("F153", global::WinUICommunity.GlyphCode.F153);
                userType.AddEnumValue("F154", global::WinUICommunity.GlyphCode.F154);
                userType.AddEnumValue("F155", global::WinUICommunity.GlyphCode.F155);
                userType.AddEnumValue("F156", global::WinUICommunity.GlyphCode.F156);
                userType.AddEnumValue("F157", global::WinUICommunity.GlyphCode.F157);
                userType.AddEnumValue("F158", global::WinUICommunity.GlyphCode.F158);
                userType.AddEnumValue("F159", global::WinUICommunity.GlyphCode.F159);
                userType.AddEnumValue("F15F", global::WinUICommunity.GlyphCode.F15F);
                userType.AddEnumValue("F161", global::WinUICommunity.GlyphCode.F161);
                userType.AddEnumValue("F163", global::WinUICommunity.GlyphCode.F163);
                userType.AddEnumValue("F164", global::WinUICommunity.GlyphCode.F164);
                userType.AddEnumValue("F165", global::WinUICommunity.GlyphCode.F165);
                userType.AddEnumValue("F166", global::WinUICommunity.GlyphCode.F166);
                userType.AddEnumValue("F167", global::WinUICommunity.GlyphCode.F167);
                userType.AddEnumValue("F168", global::WinUICommunity.GlyphCode.F168);
                userType.AddEnumValue("F169", global::WinUICommunity.GlyphCode.F169);
                userType.AddEnumValue("F16A", global::WinUICommunity.GlyphCode.F16A);
                userType.AddEnumValue("F16B", global::WinUICommunity.GlyphCode.F16B);
                userType.AddEnumValue("F16C", global::WinUICommunity.GlyphCode.F16C);
                userType.AddEnumValue("F16D", global::WinUICommunity.GlyphCode.F16D);
                userType.AddEnumValue("F16E", global::WinUICommunity.GlyphCode.F16E);
                userType.AddEnumValue("F175", global::WinUICommunity.GlyphCode.F175);
                userType.AddEnumValue("F17F", global::WinUICommunity.GlyphCode.F17F);
                userType.AddEnumValue("F180", global::WinUICommunity.GlyphCode.F180);
                userType.AddEnumValue("F182", global::WinUICommunity.GlyphCode.F182);
                userType.AddEnumValue("F191", global::WinUICommunity.GlyphCode.F191);
                userType.AddEnumValue("F193", global::WinUICommunity.GlyphCode.F193);
                userType.AddEnumValue("F19D", global::WinUICommunity.GlyphCode.F19D);
                userType.AddEnumValue("F19E", global::WinUICommunity.GlyphCode.F19E);
                userType.AddEnumValue("F19F", global::WinUICommunity.GlyphCode.F19F);
                userType.AddEnumValue("F1AD", global::WinUICommunity.GlyphCode.F1AD);
                userType.AddEnumValue("F1CB", global::WinUICommunity.GlyphCode.F1CB);
                userType.AddEnumValue("F1CC", global::WinUICommunity.GlyphCode.F1CC);
                userType.AddEnumValue("F1D8", global::WinUICommunity.GlyphCode.F1D8);
                userType.AddEnumValue("F1D9", global::WinUICommunity.GlyphCode.F1D9);
                userType.AddEnumValue("F20C", global::WinUICommunity.GlyphCode.F20C);
                userType.AddEnumValue("F20D", global::WinUICommunity.GlyphCode.F20D);
                userType.AddEnumValue("F210", global::WinUICommunity.GlyphCode.F210);
                userType.AddEnumValue("F211", global::WinUICommunity.GlyphCode.F211);
                userType.AddEnumValue("F22C", global::WinUICommunity.GlyphCode.F22C);
                userType.AddEnumValue("F22E", global::WinUICommunity.GlyphCode.F22E);
                userType.AddEnumValue("F246", global::WinUICommunity.GlyphCode.F246);
                userType.AddEnumValue("F259", global::WinUICommunity.GlyphCode.F259);
                userType.AddEnumValue("F260", global::WinUICommunity.GlyphCode.F260);
                userType.AddEnumValue("F261", global::WinUICommunity.GlyphCode.F261);
                userType.AddEnumValue("F26B", global::WinUICommunity.GlyphCode.F26B);
                userType.AddEnumValue("F26C", global::WinUICommunity.GlyphCode.F26C);
                userType.AddEnumValue("F26D", global::WinUICommunity.GlyphCode.F26D);
                userType.AddEnumValue("F26E", global::WinUICommunity.GlyphCode.F26E);
                userType.AddEnumValue("F270", global::WinUICommunity.GlyphCode.F270);
                userType.AddEnumValue("F271", global::WinUICommunity.GlyphCode.F271);
                userType.AddEnumValue("F272", global::WinUICommunity.GlyphCode.F272);
                userType.AddEnumValue("F28B", global::WinUICommunity.GlyphCode.F28B);
                userType.AddEnumValue("F2B7", global::WinUICommunity.GlyphCode.F2B7);
                userType.AddEnumValue("F32A", global::WinUICommunity.GlyphCode.F32A);
                userType.AddEnumValue("F354", global::WinUICommunity.GlyphCode.F354);
                userType.AddEnumValue("F384", global::WinUICommunity.GlyphCode.F384);
                userType.AddEnumValue("F385", global::WinUICommunity.GlyphCode.F385);
                userType.AddEnumValue("F386", global::WinUICommunity.GlyphCode.F386);
                userType.AddEnumValue("F3B1", global::WinUICommunity.GlyphCode.F3B1);
                userType.AddEnumValue("F3CC", global::WinUICommunity.GlyphCode.F3CC);
                userType.AddEnumValue("F3CD", global::WinUICommunity.GlyphCode.F3CD);
                userType.AddEnumValue("F3E2", global::WinUICommunity.GlyphCode.F3E2);
                userType.AddEnumValue("F3E7", global::WinUICommunity.GlyphCode.F3E7);
                userType.AddEnumValue("F404", global::WinUICommunity.GlyphCode.F404);
                userType.AddEnumValue("F405", global::WinUICommunity.GlyphCode.F405);
                userType.AddEnumValue("F406", global::WinUICommunity.GlyphCode.F406);
                userType.AddEnumValue("F407", global::WinUICommunity.GlyphCode.F407);
                userType.AddEnumValue("F408", global::WinUICommunity.GlyphCode.F408);
                userType.AddEnumValue("F413", global::WinUICommunity.GlyphCode.F413);
                userType.AddEnumValue("F427", global::WinUICommunity.GlyphCode.F427);
                userType.AddEnumValue("F439", global::WinUICommunity.GlyphCode.F439);
                userType.AddEnumValue("F45E", global::WinUICommunity.GlyphCode.F45E);
                userType.AddEnumValue("F45F", global::WinUICommunity.GlyphCode.F45F);
                userType.AddEnumValue("F460", global::WinUICommunity.GlyphCode.F460);
                userType.AddEnumValue("F461", global::WinUICommunity.GlyphCode.F461);
                userType.AddEnumValue("F462", global::WinUICommunity.GlyphCode.F462);
                userType.AddEnumValue("F463", global::WinUICommunity.GlyphCode.F463);
                userType.AddEnumValue("F464", global::WinUICommunity.GlyphCode.F464);
                userType.AddEnumValue("F465", global::WinUICommunity.GlyphCode.F465);
                userType.AddEnumValue("F466", global::WinUICommunity.GlyphCode.F466);
                userType.AddEnumValue("F473", global::WinUICommunity.GlyphCode.F473);
                userType.AddEnumValue("F474", global::WinUICommunity.GlyphCode.F474);
                userType.AddEnumValue("F475", global::WinUICommunity.GlyphCode.F475);
                userType.AddEnumValue("F476", global::WinUICommunity.GlyphCode.F476);
                userType.AddEnumValue("F47F", global::WinUICommunity.GlyphCode.F47F);
                userType.AddEnumValue("F49A", global::WinUICommunity.GlyphCode.F49A);
                userType.AddEnumValue("F4A5", global::WinUICommunity.GlyphCode.F4A5);
                userType.AddEnumValue("F4A9", global::WinUICommunity.GlyphCode.F4A9);
                userType.AddEnumValue("F4AA", global::WinUICommunity.GlyphCode.F4AA);
                userType.AddEnumValue("F4BE", global::WinUICommunity.GlyphCode.F4BE);
                userType.AddEnumValue("F4BF", global::WinUICommunity.GlyphCode.F4BF);
                userType.AddEnumValue("F4C0", global::WinUICommunity.GlyphCode.F4C0);
                userType.AddEnumValue("F4C3", global::WinUICommunity.GlyphCode.F4C3);
                userType.AddEnumValue("F540", global::WinUICommunity.GlyphCode.F540);
                userType.AddEnumValue("F552", global::WinUICommunity.GlyphCode.F552);
                userType.AddEnumValue("F56D", global::WinUICommunity.GlyphCode.F56D);
                userType.AddEnumValue("F56E", global::WinUICommunity.GlyphCode.F56E);
                userType.AddEnumValue("F56F", global::WinUICommunity.GlyphCode.F56F);
                userType.AddEnumValue("F570", global::WinUICommunity.GlyphCode.F570);
                userType.AddEnumValue("F571", global::WinUICommunity.GlyphCode.F571);
                userType.AddEnumValue("F572", global::WinUICommunity.GlyphCode.F572);
                userType.AddEnumValue("F573", global::WinUICommunity.GlyphCode.F573);
                userType.AddEnumValue("F574", global::WinUICommunity.GlyphCode.F574);
                userType.AddEnumValue("F575", global::WinUICommunity.GlyphCode.F575);
                userType.AddEnumValue("F576", global::WinUICommunity.GlyphCode.F576);
                userType.AddEnumValue("F577", global::WinUICommunity.GlyphCode.F577);
                userType.AddEnumValue("F578", global::WinUICommunity.GlyphCode.F578);
                userType.AddEnumValue("F579", global::WinUICommunity.GlyphCode.F579);
                userType.AddEnumValue("F57A", global::WinUICommunity.GlyphCode.F57A);
                userType.AddEnumValue("F57B", global::WinUICommunity.GlyphCode.F57B);
                userType.AddEnumValue("F57C", global::WinUICommunity.GlyphCode.F57C);
                userType.AddEnumValue("F57D", global::WinUICommunity.GlyphCode.F57D);
                userType.AddEnumValue("F57E", global::WinUICommunity.GlyphCode.F57E);
                userType.AddEnumValue("F57F", global::WinUICommunity.GlyphCode.F57F);
                userType.AddEnumValue("F580", global::WinUICommunity.GlyphCode.F580);
                userType.AddEnumValue("F581", global::WinUICommunity.GlyphCode.F581);
                userType.AddEnumValue("F582", global::WinUICommunity.GlyphCode.F582);
                userType.AddEnumValue("F583", global::WinUICommunity.GlyphCode.F583);
                userType.AddEnumValue("F584", global::WinUICommunity.GlyphCode.F584);
                userType.AddEnumValue("F585", global::WinUICommunity.GlyphCode.F585);
                userType.AddEnumValue("F586", global::WinUICommunity.GlyphCode.F586);
                userType.AddEnumValue("F587", global::WinUICommunity.GlyphCode.F587);
                userType.AddEnumValue("F588", global::WinUICommunity.GlyphCode.F588);
                userType.AddEnumValue("F589", global::WinUICommunity.GlyphCode.F589);
                userType.AddEnumValue("F58A", global::WinUICommunity.GlyphCode.F58A);
                userType.AddEnumValue("F58B", global::WinUICommunity.GlyphCode.F58B);
                userType.AddEnumValue("F58C", global::WinUICommunity.GlyphCode.F58C);
                userType.AddEnumValue("F58D", global::WinUICommunity.GlyphCode.F58D);
                userType.AddEnumValue("F58E", global::WinUICommunity.GlyphCode.F58E);
                userType.AddEnumValue("F58F", global::WinUICommunity.GlyphCode.F58F);
                userType.AddEnumValue("F590", global::WinUICommunity.GlyphCode.F590);
                userType.AddEnumValue("F591", global::WinUICommunity.GlyphCode.F591);
                userType.AddEnumValue("F592", global::WinUICommunity.GlyphCode.F592);
                userType.AddEnumValue("F593", global::WinUICommunity.GlyphCode.F593);
                userType.AddEnumValue("F594", global::WinUICommunity.GlyphCode.F594);
                userType.AddEnumValue("F595", global::WinUICommunity.GlyphCode.F595);
                userType.AddEnumValue("F596", global::WinUICommunity.GlyphCode.F596);
                userType.AddEnumValue("F597", global::WinUICommunity.GlyphCode.F597);
                userType.AddEnumValue("F598", global::WinUICommunity.GlyphCode.F598);
                userType.AddEnumValue("F599", global::WinUICommunity.GlyphCode.F599);
                userType.AddEnumValue("F59A", global::WinUICommunity.GlyphCode.F59A);
                userType.AddEnumValue("F59B", global::WinUICommunity.GlyphCode.F59B);
                userType.AddEnumValue("F59C", global::WinUICommunity.GlyphCode.F59C);
                userType.AddEnumValue("F59D", global::WinUICommunity.GlyphCode.F59D);
                userType.AddEnumValue("F59E", global::WinUICommunity.GlyphCode.F59E);
                userType.AddEnumValue("F59F", global::WinUICommunity.GlyphCode.F59F);
                userType.AddEnumValue("F5A0", global::WinUICommunity.GlyphCode.F5A0);
                userType.AddEnumValue("F5A1", global::WinUICommunity.GlyphCode.F5A1);
                userType.AddEnumValue("F5A2", global::WinUICommunity.GlyphCode.F5A2);
                userType.AddEnumValue("F5A3", global::WinUICommunity.GlyphCode.F5A3);
                userType.AddEnumValue("F5A4", global::WinUICommunity.GlyphCode.F5A4);
                userType.AddEnumValue("F5A5", global::WinUICommunity.GlyphCode.F5A5);
                userType.AddEnumValue("F5A6", global::WinUICommunity.GlyphCode.F5A6);
                userType.AddEnumValue("F5A7", global::WinUICommunity.GlyphCode.F5A7);
                userType.AddEnumValue("F5A8", global::WinUICommunity.GlyphCode.F5A8);
                userType.AddEnumValue("F5A9", global::WinUICommunity.GlyphCode.F5A9);
                userType.AddEnumValue("F5AA", global::WinUICommunity.GlyphCode.F5AA);
                userType.AddEnumValue("F5AB", global::WinUICommunity.GlyphCode.F5AB);
                userType.AddEnumValue("F5AC", global::WinUICommunity.GlyphCode.F5AC);
                userType.AddEnumValue("F5AD", global::WinUICommunity.GlyphCode.F5AD);
                userType.AddEnumValue("F5AE", global::WinUICommunity.GlyphCode.F5AE);
                userType.AddEnumValue("F5B0", global::WinUICommunity.GlyphCode.F5B0);
                userType.AddEnumValue("F5E7", global::WinUICommunity.GlyphCode.F5E7);
                userType.AddEnumValue("F5ED", global::WinUICommunity.GlyphCode.F5ED);
                userType.AddEnumValue("F5EE", global::WinUICommunity.GlyphCode.F5EE);
                userType.AddEnumValue("F5EF", global::WinUICommunity.GlyphCode.F5EF);
                userType.AddEnumValue("F5F2", global::WinUICommunity.GlyphCode.F5F2);
                userType.AddEnumValue("F5F3", global::WinUICommunity.GlyphCode.F5F3);
                userType.AddEnumValue("F5F4", global::WinUICommunity.GlyphCode.F5F4);
                userType.AddEnumValue("F5F5", global::WinUICommunity.GlyphCode.F5F5);
                userType.AddEnumValue("F5F6", global::WinUICommunity.GlyphCode.F5F6);
                userType.AddEnumValue("F5F7", global::WinUICommunity.GlyphCode.F5F7);
                userType.AddEnumValue("F5F8", global::WinUICommunity.GlyphCode.F5F8);
                userType.AddEnumValue("F5F9", global::WinUICommunity.GlyphCode.F5F9);
                userType.AddEnumValue("F5FA", global::WinUICommunity.GlyphCode.F5FA);
                userType.AddEnumValue("F5FB", global::WinUICommunity.GlyphCode.F5FB);
                userType.AddEnumValue("F5FC", global::WinUICommunity.GlyphCode.F5FC);
                userType.AddEnumValue("F5FD", global::WinUICommunity.GlyphCode.F5FD);
                userType.AddEnumValue("F5FE", global::WinUICommunity.GlyphCode.F5FE);
                userType.AddEnumValue("F5FF", global::WinUICommunity.GlyphCode.F5FF);
                userType.AddEnumValue("F600", global::WinUICommunity.GlyphCode.F600);
                userType.AddEnumValue("F601", global::WinUICommunity.GlyphCode.F601);
                userType.AddEnumValue("F602", global::WinUICommunity.GlyphCode.F602);
                userType.AddEnumValue("F603", global::WinUICommunity.GlyphCode.F603);
                userType.AddEnumValue("F604", global::WinUICommunity.GlyphCode.F604);
                userType.AddEnumValue("F605", global::WinUICommunity.GlyphCode.F605);
                userType.AddEnumValue("F606", global::WinUICommunity.GlyphCode.F606);
                userType.AddEnumValue("F607", global::WinUICommunity.GlyphCode.F607);
                userType.AddEnumValue("F608", global::WinUICommunity.GlyphCode.F608);
                userType.AddEnumValue("F618", global::WinUICommunity.GlyphCode.F618);
                userType.AddEnumValue("F619", global::WinUICommunity.GlyphCode.F619);
                userType.AddEnumValue("F61A", global::WinUICommunity.GlyphCode.F61A);
                userType.AddEnumValue("F61B", global::WinUICommunity.GlyphCode.F61B);
                userType.AddEnumValue("F61C", global::WinUICommunity.GlyphCode.F61C);
                userType.AddEnumValue("F61D", global::WinUICommunity.GlyphCode.F61D);
                userType.AddEnumValue("F61E", global::WinUICommunity.GlyphCode.F61E);
                userType.AddEnumValue("F61F", global::WinUICommunity.GlyphCode.F61F);
                userType.AddEnumValue("F620", global::WinUICommunity.GlyphCode.F620);
                userType.AddEnumValue("F623", global::WinUICommunity.GlyphCode.F623);
                userType.AddEnumValue("F624", global::WinUICommunity.GlyphCode.F624);
                userType.AddEnumValue("F63C", global::WinUICommunity.GlyphCode.F63C);
                userType.AddEnumValue("F657", global::WinUICommunity.GlyphCode.F657);
                userType.AddEnumValue("F658", global::WinUICommunity.GlyphCode.F658);
                userType.AddEnumValue("F659", global::WinUICommunity.GlyphCode.F659);
                userType.AddEnumValue("F65A", global::WinUICommunity.GlyphCode.F65A);
                userType.AddEnumValue("F65B", global::WinUICommunity.GlyphCode.F65B);
                userType.AddEnumValue("F65C", global::WinUICommunity.GlyphCode.F65C);
                userType.AddEnumValue("F69E", global::WinUICommunity.GlyphCode.F69E);
                userType.AddEnumValue("F6A9", global::WinUICommunity.GlyphCode.F6A9);
                userType.AddEnumValue("F6B8", global::WinUICommunity.GlyphCode.F6B8);
                userType.AddEnumValue("F6BA", global::WinUICommunity.GlyphCode.F6BA);
                userType.AddEnumValue("F6FA", global::WinUICommunity.GlyphCode.F6FA);
                userType.AddEnumValue("F712", global::WinUICommunity.GlyphCode.F712);
                userType.AddEnumValue("F714", global::WinUICommunity.GlyphCode.F714);
                userType.AddEnumValue("F715", global::WinUICommunity.GlyphCode.F715);
                userType.AddEnumValue("F716", global::WinUICommunity.GlyphCode.F716);
                userType.AddEnumValue("F71A", global::WinUICommunity.GlyphCode.F71A);
                userType.AddEnumValue("F71C", global::WinUICommunity.GlyphCode.F71C);
                userType.AddEnumValue("F71D", global::WinUICommunity.GlyphCode.F71D);
                userType.AddEnumValue("F71E", global::WinUICommunity.GlyphCode.F71E);
                userType.AddEnumValue("F738", global::WinUICommunity.GlyphCode.F738);
                userType.AddEnumValue("F739", global::WinUICommunity.GlyphCode.F739);
                userType.AddEnumValue("F73D", global::WinUICommunity.GlyphCode.F73D);
                userType.AddEnumValue("F73E", global::WinUICommunity.GlyphCode.F73E);
                userType.AddEnumValue("F73F", global::WinUICommunity.GlyphCode.F73F);
                userType.AddEnumValue("F740", global::WinUICommunity.GlyphCode.F740);
                userType.AddEnumValue("F741", global::WinUICommunity.GlyphCode.F741);
                userType.AddEnumValue("F742", global::WinUICommunity.GlyphCode.F742);
                userType.AddEnumValue("F743", global::WinUICommunity.GlyphCode.F743);
                userType.AddEnumValue("F744", global::WinUICommunity.GlyphCode.F744);
                userType.AddEnumValue("F745", global::WinUICommunity.GlyphCode.F745);
                userType.AddEnumValue("F746", global::WinUICommunity.GlyphCode.F746);
                userType.AddEnumValue("F763", global::WinUICommunity.GlyphCode.F763);
                userType.AddEnumValue("F781", global::WinUICommunity.GlyphCode.F781);
                userType.AddEnumValue("F785", global::WinUICommunity.GlyphCode.F785);
                userType.AddEnumValue("F78A", global::WinUICommunity.GlyphCode.F78A);
                userType.AddEnumValue("F78B", global::WinUICommunity.GlyphCode.F78B);
                userType.AddEnumValue("F78C", global::WinUICommunity.GlyphCode.F78C);
                userType.AddEnumValue("F78D", global::WinUICommunity.GlyphCode.F78D);
                userType.AddEnumValue("F7AD", global::WinUICommunity.GlyphCode.F7AD);
                userType.AddEnumValue("F7AE", global::WinUICommunity.GlyphCode.F7AE);
                userType.AddEnumValue("F7AF", global::WinUICommunity.GlyphCode.F7AF);
                userType.AddEnumValue("F7B0", global::WinUICommunity.GlyphCode.F7B0);
                userType.AddEnumValue("F7B1", global::WinUICommunity.GlyphCode.F7B1);
                userType.AddEnumValue("F7B2", global::WinUICommunity.GlyphCode.F7B2);
                userType.AddEnumValue("F7B3", global::WinUICommunity.GlyphCode.F7B3);
                userType.AddEnumValue("F7B4", global::WinUICommunity.GlyphCode.F7B4);
                userType.AddEnumValue("F7B5", global::WinUICommunity.GlyphCode.F7B5);
                userType.AddEnumValue("F7B6", global::WinUICommunity.GlyphCode.F7B6);
                userType.AddEnumValue("F7B7", global::WinUICommunity.GlyphCode.F7B7);
                userType.AddEnumValue("F7B8", global::WinUICommunity.GlyphCode.F7B8);
                userType.AddEnumValue("F7B9", global::WinUICommunity.GlyphCode.F7B9);
                userType.AddEnumValue("F7BA", global::WinUICommunity.GlyphCode.F7BA);
                userType.AddEnumValue("F7BB", global::WinUICommunity.GlyphCode.F7BB);
                userType.AddEnumValue("F7ED", global::WinUICommunity.GlyphCode.F7ED);
                userType.AddEnumValue("F7EE", global::WinUICommunity.GlyphCode.F7EE);
                userType.AddEnumValue("F809", global::WinUICommunity.GlyphCode.F809);
                userType.AddEnumValue("F83B", global::WinUICommunity.GlyphCode.F83B);
                userType.AddEnumValue("F83D", global::WinUICommunity.GlyphCode.F83D);
                userType.AddEnumValue("F83E", global::WinUICommunity.GlyphCode.F83E);
                userType.AddEnumValue("F83F", global::WinUICommunity.GlyphCode.F83F);
                userType.AddEnumValue("F847", global::WinUICommunity.GlyphCode.F847);
                userType.AddEnumValue("F87B", global::WinUICommunity.GlyphCode.F87B);
                userType.AddEnumValue("F87C", global::WinUICommunity.GlyphCode.F87C);
                userType.AddEnumValue("F87D", global::WinUICommunity.GlyphCode.F87D);
                userType.AddEnumValue("F87E", global::WinUICommunity.GlyphCode.F87E);
                userType.AddEnumValue("F89A", global::WinUICommunity.GlyphCode.F89A);
                userType.AddEnumValue("F8A5", global::WinUICommunity.GlyphCode.F8A5);
                userType.AddEnumValue("F8A6", global::WinUICommunity.GlyphCode.F8A6);
                userType.AddEnumValue("F8AA", global::WinUICommunity.GlyphCode.F8AA);
                userType.AddEnumValue("F8AB", global::WinUICommunity.GlyphCode.F8AB);
                userType.AddEnumValue("F8AC", global::WinUICommunity.GlyphCode.F8AC);
                userType.AddEnumValue("F8AD", global::WinUICommunity.GlyphCode.F8AD);
                userType.AddEnumValue("F8AE", global::WinUICommunity.GlyphCode.F8AE);
                userType.AddEnumValue("F8AF", global::WinUICommunity.GlyphCode.F8AF);
                userType.AddEnumValue("F8B0", global::WinUICommunity.GlyphCode.F8B0);
                userType.AddEnumValue("F8B1", global::WinUICommunity.GlyphCode.F8B1);
                userType.AddEnumValue("F8B2", global::WinUICommunity.GlyphCode.F8B2);
                userType.AddEnumValue("F8B3", global::WinUICommunity.GlyphCode.F8B3);
                xamlType = userType;
                break;

            case 182:   //  WinUICommunity.GlyphName
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_182_GlyphName;
                userType.AddEnumValue("None", global::WinUICommunity.GlyphName.None);
                userType.AddEnumValue("GlobalNavButton", global::WinUICommunity.GlyphName.GlobalNavButton);
                userType.AddEnumValue("Wifi", global::WinUICommunity.GlyphName.Wifi);
                userType.AddEnumValue("Bluetooth", global::WinUICommunity.GlyphName.Bluetooth);
                userType.AddEnumValue("Connect", global::WinUICommunity.GlyphName.Connect);
                userType.AddEnumValue("InternetSharing", global::WinUICommunity.GlyphName.InternetSharing);
                userType.AddEnumValue("VPN", global::WinUICommunity.GlyphName.VPN);
                userType.AddEnumValue("Brightness", global::WinUICommunity.GlyphName.Brightness);
                userType.AddEnumValue("MapPin", global::WinUICommunity.GlyphName.MapPin);
                userType.AddEnumValue("QuietHours", global::WinUICommunity.GlyphName.QuietHours);
                userType.AddEnumValue("Airplane", global::WinUICommunity.GlyphName.Airplane);
                userType.AddEnumValue("Tablet", global::WinUICommunity.GlyphName.Tablet);
                userType.AddEnumValue("QuickNote", global::WinUICommunity.GlyphName.QuickNote);
                userType.AddEnumValue("RememberedDevice", global::WinUICommunity.GlyphName.RememberedDevice);
                userType.AddEnumValue("ChevronDown", global::WinUICommunity.GlyphName.ChevronDown);
                userType.AddEnumValue("ChevronUp", global::WinUICommunity.GlyphName.ChevronUp);
                userType.AddEnumValue("Edit", global::WinUICommunity.GlyphName.Edit);
                userType.AddEnumValue("Add", global::WinUICommunity.GlyphName.Add);
                userType.AddEnumValue("Cancel", global::WinUICommunity.GlyphName.Cancel);
                userType.AddEnumValue("More", global::WinUICommunity.GlyphName.More);
                userType.AddEnumValue("Settings", global::WinUICommunity.GlyphName.Settings);
                userType.AddEnumValue("Video", global::WinUICommunity.GlyphName.Video);
                userType.AddEnumValue("Mail", global::WinUICommunity.GlyphName.Mail);
                userType.AddEnumValue("People", global::WinUICommunity.GlyphName.People);
                userType.AddEnumValue("Phone", global::WinUICommunity.GlyphName.Phone);
                userType.AddEnumValue("Pin", global::WinUICommunity.GlyphName.Pin);
                userType.AddEnumValue("Shop", global::WinUICommunity.GlyphName.Shop);
                userType.AddEnumValue("Stop", global::WinUICommunity.GlyphName.Stop);
                userType.AddEnumValue("Link", global::WinUICommunity.GlyphName.Link);
                userType.AddEnumValue("Filter", global::WinUICommunity.GlyphName.Filter);
                userType.AddEnumValue("AllApps", global::WinUICommunity.GlyphName.AllApps);
                userType.AddEnumValue("Zoom", global::WinUICommunity.GlyphName.Zoom);
                userType.AddEnumValue("ZoomOut", global::WinUICommunity.GlyphName.ZoomOut);
                userType.AddEnumValue("Microphone", global::WinUICommunity.GlyphName.Microphone);
                userType.AddEnumValue("Search", global::WinUICommunity.GlyphName.Search);
                userType.AddEnumValue("Camera", global::WinUICommunity.GlyphName.Camera);
                userType.AddEnumValue("Attach", global::WinUICommunity.GlyphName.Attach);
                userType.AddEnumValue("Send", global::WinUICommunity.GlyphName.Send);
                userType.AddEnumValue("SendFill", global::WinUICommunity.GlyphName.SendFill);
                userType.AddEnumValue("WalkSolid", global::WinUICommunity.GlyphName.WalkSolid);
                userType.AddEnumValue("InPrivate", global::WinUICommunity.GlyphName.InPrivate);
                userType.AddEnumValue("FavoriteList", global::WinUICommunity.GlyphName.FavoriteList);
                userType.AddEnumValue("PageSolid", global::WinUICommunity.GlyphName.PageSolid);
                userType.AddEnumValue("Forward", global::WinUICommunity.GlyphName.Forward);
                userType.AddEnumValue("Back", global::WinUICommunity.GlyphName.Back);
                userType.AddEnumValue("Refresh", global::WinUICommunity.GlyphName.Refresh);
                userType.AddEnumValue("Share", global::WinUICommunity.GlyphName.Share);
                userType.AddEnumValue("Lock", global::WinUICommunity.GlyphName.Lock);
                userType.AddEnumValue("ReportHacked", global::WinUICommunity.GlyphName.ReportHacked);
                userType.AddEnumValue("EMI", global::WinUICommunity.GlyphName.EMI);
                userType.AddEnumValue("FavoriteStar", global::WinUICommunity.GlyphName.FavoriteStar);
                userType.AddEnumValue("FavoriteStarFill", global::WinUICommunity.GlyphName.FavoriteStarFill);
                userType.AddEnumValue("ReadingMode", global::WinUICommunity.GlyphName.ReadingMode);
                userType.AddEnumValue("Favicon", global::WinUICommunity.GlyphName.Favicon);
                userType.AddEnumValue("Remove", global::WinUICommunity.GlyphName.Remove);
                userType.AddEnumValue("Checkbox", global::WinUICommunity.GlyphName.Checkbox);
                userType.AddEnumValue("CheckboxComposite", global::WinUICommunity.GlyphName.CheckboxComposite);
                userType.AddEnumValue("CheckboxFill", global::WinUICommunity.GlyphName.CheckboxFill);
                userType.AddEnumValue("CheckboxIndeterminate", global::WinUICommunity.GlyphName.CheckboxIndeterminate);
                userType.AddEnumValue("CheckboxCompositeReversed", global::WinUICommunity.GlyphName.CheckboxCompositeReversed);
                userType.AddEnumValue("CheckMark", global::WinUICommunity.GlyphName.CheckMark);
                userType.AddEnumValue("BackToWindow", global::WinUICommunity.GlyphName.BackToWindow);
                userType.AddEnumValue("FullScreen", global::WinUICommunity.GlyphName.FullScreen);
                userType.AddEnumValue("ResizeTouchLarger", global::WinUICommunity.GlyphName.ResizeTouchLarger);
                userType.AddEnumValue("ResizeTouchSmaller", global::WinUICommunity.GlyphName.ResizeTouchSmaller);
                userType.AddEnumValue("ResizeMouseSmall", global::WinUICommunity.GlyphName.ResizeMouseSmall);
                userType.AddEnumValue("ResizeMouseMedium", global::WinUICommunity.GlyphName.ResizeMouseMedium);
                userType.AddEnumValue("ResizeMouseWide", global::WinUICommunity.GlyphName.ResizeMouseWide);
                userType.AddEnumValue("ResizeMouseTall", global::WinUICommunity.GlyphName.ResizeMouseTall);
                userType.AddEnumValue("ResizeMouseLarge", global::WinUICommunity.GlyphName.ResizeMouseLarge);
                userType.AddEnumValue("SwitchUser", global::WinUICommunity.GlyphName.SwitchUser);
                userType.AddEnumValue("Print", global::WinUICommunity.GlyphName.Print);
                userType.AddEnumValue("Up", global::WinUICommunity.GlyphName.Up);
                userType.AddEnumValue("Down", global::WinUICommunity.GlyphName.Down);
                userType.AddEnumValue("OEM", global::WinUICommunity.GlyphName.OEM);
                userType.AddEnumValue("Delete", global::WinUICommunity.GlyphName.Delete);
                userType.AddEnumValue("Save", global::WinUICommunity.GlyphName.Save);
                userType.AddEnumValue("Mute", global::WinUICommunity.GlyphName.Mute);
                userType.AddEnumValue("BackSpaceQWERTY", global::WinUICommunity.GlyphName.BackSpaceQWERTY);
                userType.AddEnumValue("ReturnKey", global::WinUICommunity.GlyphName.ReturnKey);
                userType.AddEnumValue("UpArrowShiftKey", global::WinUICommunity.GlyphName.UpArrowShiftKey);
                userType.AddEnumValue("Cloud", global::WinUICommunity.GlyphName.Cloud);
                userType.AddEnumValue("Flashlight", global::WinUICommunity.GlyphName.Flashlight);
                userType.AddEnumValue("RotationLock", global::WinUICommunity.GlyphName.RotationLock);
                userType.AddEnumValue("CommandPrompt", global::WinUICommunity.GlyphName.CommandPrompt);
                userType.AddEnumValue("SIPMove", global::WinUICommunity.GlyphName.SIPMove);
                userType.AddEnumValue("SIPUndock", global::WinUICommunity.GlyphName.SIPUndock);
                userType.AddEnumValue("SIPRedock", global::WinUICommunity.GlyphName.SIPRedock);
                userType.AddEnumValue("EraseTool", global::WinUICommunity.GlyphName.EraseTool);
                userType.AddEnumValue("UnderscoreSpace", global::WinUICommunity.GlyphName.UnderscoreSpace);
                userType.AddEnumValue("GripperTool", global::WinUICommunity.GlyphName.GripperTool);
                userType.AddEnumValue("Dialpad", global::WinUICommunity.GlyphName.Dialpad);
                userType.AddEnumValue("PageLeft", global::WinUICommunity.GlyphName.PageLeft);
                userType.AddEnumValue("PageRight", global::WinUICommunity.GlyphName.PageRight);
                userType.AddEnumValue("MultiSelect", global::WinUICommunity.GlyphName.MultiSelect);
                userType.AddEnumValue("KeyboardLeftHanded", global::WinUICommunity.GlyphName.KeyboardLeftHanded);
                userType.AddEnumValue("KeyboardRightHanded", global::WinUICommunity.GlyphName.KeyboardRightHanded);
                userType.AddEnumValue("KeyboardClassic", global::WinUICommunity.GlyphName.KeyboardClassic);
                userType.AddEnumValue("KeyboardSplit", global::WinUICommunity.GlyphName.KeyboardSplit);
                userType.AddEnumValue("Volume", global::WinUICommunity.GlyphName.Volume);
                userType.AddEnumValue("Play", global::WinUICommunity.GlyphName.Play);
                userType.AddEnumValue("Pause", global::WinUICommunity.GlyphName.Pause);
                userType.AddEnumValue("ChevronLeft", global::WinUICommunity.GlyphName.ChevronLeft);
                userType.AddEnumValue("ChevronRight", global::WinUICommunity.GlyphName.ChevronRight);
                userType.AddEnumValue("InkingTool", global::WinUICommunity.GlyphName.InkingTool);
                userType.AddEnumValue("Emoji2", global::WinUICommunity.GlyphName.Emoji2);
                userType.AddEnumValue("GripperBarHorizontal", global::WinUICommunity.GlyphName.GripperBarHorizontal);
                userType.AddEnumValue("System", global::WinUICommunity.GlyphName.System);
                userType.AddEnumValue("Personalize", global::WinUICommunity.GlyphName.Personalize);
                userType.AddEnumValue("Devices", global::WinUICommunity.GlyphName.Devices);
                userType.AddEnumValue("SearchAndApps", global::WinUICommunity.GlyphName.SearchAndApps);
                userType.AddEnumValue("Globe", global::WinUICommunity.GlyphName.Globe);
                userType.AddEnumValue("TimeLanguage", global::WinUICommunity.GlyphName.TimeLanguage);
                userType.AddEnumValue("EaseOfAccess", global::WinUICommunity.GlyphName.EaseOfAccess);
                userType.AddEnumValue("UpdateRestore", global::WinUICommunity.GlyphName.UpdateRestore);
                userType.AddEnumValue("HangUp", global::WinUICommunity.GlyphName.HangUp);
                userType.AddEnumValue("ContactInfo", global::WinUICommunity.GlyphName.ContactInfo);
                userType.AddEnumValue("Unpin", global::WinUICommunity.GlyphName.Unpin);
                userType.AddEnumValue("Contact", global::WinUICommunity.GlyphName.Contact);
                userType.AddEnumValue("Memo", global::WinUICommunity.GlyphName.Memo);
                userType.AddEnumValue("IncomingCall", global::WinUICommunity.GlyphName.IncomingCall);
                userType.AddEnumValue("Paste", global::WinUICommunity.GlyphName.Paste);
                userType.AddEnumValue("PhoneBook", global::WinUICommunity.GlyphName.PhoneBook);
                userType.AddEnumValue("LEDLight", global::WinUICommunity.GlyphName.LEDLight);
                userType.AddEnumValue("Error", global::WinUICommunity.GlyphName.Error);
                userType.AddEnumValue("GripperBarVertical", global::WinUICommunity.GlyphName.GripperBarVertical);
                userType.AddEnumValue("Unlock", global::WinUICommunity.GlyphName.Unlock);
                userType.AddEnumValue("Slideshow", global::WinUICommunity.GlyphName.Slideshow);
                userType.AddEnumValue("Calendar", global::WinUICommunity.GlyphName.Calendar);
                userType.AddEnumValue("GripperResize", global::WinUICommunity.GlyphName.GripperResize);
                userType.AddEnumValue("Megaphone", global::WinUICommunity.GlyphName.Megaphone);
                userType.AddEnumValue("Trim", global::WinUICommunity.GlyphName.Trim);
                userType.AddEnumValue("NewWindow", global::WinUICommunity.GlyphName.NewWindow);
                userType.AddEnumValue("SaveLocal", global::WinUICommunity.GlyphName.SaveLocal);
                userType.AddEnumValue("Color", global::WinUICommunity.GlyphName.Color);
                userType.AddEnumValue("DataSense", global::WinUICommunity.GlyphName.DataSense);
                userType.AddEnumValue("SaveAs", global::WinUICommunity.GlyphName.SaveAs);
                userType.AddEnumValue("Light", global::WinUICommunity.GlyphName.Light);
                userType.AddEnumValue("AspectRatio", global::WinUICommunity.GlyphName.AspectRatio);
                userType.AddEnumValue("DataSenseBar", global::WinUICommunity.GlyphName.DataSenseBar);
                userType.AddEnumValue("Redo", global::WinUICommunity.GlyphName.Redo);
                userType.AddEnumValue("Undo", global::WinUICommunity.GlyphName.Undo);
                userType.AddEnumValue("Crop", global::WinUICommunity.GlyphName.Crop);
                userType.AddEnumValue("OpenWith", global::WinUICommunity.GlyphName.OpenWith);
                userType.AddEnumValue("Rotate", global::WinUICommunity.GlyphName.Rotate);
                userType.AddEnumValue("RedEye", global::WinUICommunity.GlyphName.RedEye);
                userType.AddEnumValue("SetlockScreen", global::WinUICommunity.GlyphName.SetlockScreen);
                userType.AddEnumValue("MapPin2", global::WinUICommunity.GlyphName.MapPin2);
                userType.AddEnumValue("Package", global::WinUICommunity.GlyphName.Package);
                userType.AddEnumValue("Warning", global::WinUICommunity.GlyphName.Warning);
                userType.AddEnumValue("ReadingList", global::WinUICommunity.GlyphName.ReadingList);
                userType.AddEnumValue("Education", global::WinUICommunity.GlyphName.Education);
                userType.AddEnumValue("ShoppingCart", global::WinUICommunity.GlyphName.ShoppingCart);
                userType.AddEnumValue("Train", global::WinUICommunity.GlyphName.Train);
                userType.AddEnumValue("Flag", global::WinUICommunity.GlyphName.Flag);
                userType.AddEnumValue("Move", global::WinUICommunity.GlyphName.Move);
                userType.AddEnumValue("Page", global::WinUICommunity.GlyphName.Page);
                userType.AddEnumValue("TaskView", global::WinUICommunity.GlyphName.TaskView);
                userType.AddEnumValue("BrowsePhotos", global::WinUICommunity.GlyphName.BrowsePhotos);
                userType.AddEnumValue("HalfStarLeft", global::WinUICommunity.GlyphName.HalfStarLeft);
                userType.AddEnumValue("HalfStarRight", global::WinUICommunity.GlyphName.HalfStarRight);
                userType.AddEnumValue("Record", global::WinUICommunity.GlyphName.Record);
                userType.AddEnumValue("TouchPointer", global::WinUICommunity.GlyphName.TouchPointer);
                userType.AddEnumValue("LangJPN", global::WinUICommunity.GlyphName.LangJPN);
                userType.AddEnumValue("Ferry", global::WinUICommunity.GlyphName.Ferry);
                userType.AddEnumValue("Highlight", global::WinUICommunity.GlyphName.Highlight);
                userType.AddEnumValue("ActionCenterNotification", global::WinUICommunity.GlyphName.ActionCenterNotification);
                userType.AddEnumValue("PowerButton", global::WinUICommunity.GlyphName.PowerButton);
                userType.AddEnumValue("ResizeTouchNarrower", global::WinUICommunity.GlyphName.ResizeTouchNarrower);
                userType.AddEnumValue("ResizeTouchShorter", global::WinUICommunity.GlyphName.ResizeTouchShorter);
                userType.AddEnumValue("DrivingMode", global::WinUICommunity.GlyphName.DrivingMode);
                userType.AddEnumValue("RingerSilent", global::WinUICommunity.GlyphName.RingerSilent);
                userType.AddEnumValue("OtherUser", global::WinUICommunity.GlyphName.OtherUser);
                userType.AddEnumValue("Admin", global::WinUICommunity.GlyphName.Admin);
                userType.AddEnumValue("CC", global::WinUICommunity.GlyphName.CC);
                userType.AddEnumValue("SDCard", global::WinUICommunity.GlyphName.SDCard);
                userType.AddEnumValue("CallForwarding", global::WinUICommunity.GlyphName.CallForwarding);
                userType.AddEnumValue("SettingsDisplaySound", global::WinUICommunity.GlyphName.SettingsDisplaySound);
                userType.AddEnumValue("TVMonitor", global::WinUICommunity.GlyphName.TVMonitor);
                userType.AddEnumValue("Speakers", global::WinUICommunity.GlyphName.Speakers);
                userType.AddEnumValue("Headphone", global::WinUICommunity.GlyphName.Headphone);
                userType.AddEnumValue("DeviceLaptopPic", global::WinUICommunity.GlyphName.DeviceLaptopPic);
                userType.AddEnumValue("DeviceLaptopNoPic", global::WinUICommunity.GlyphName.DeviceLaptopNoPic);
                userType.AddEnumValue("DeviceMonitorRightPic", global::WinUICommunity.GlyphName.DeviceMonitorRightPic);
                userType.AddEnumValue("DeviceMonitorLeftPic", global::WinUICommunity.GlyphName.DeviceMonitorLeftPic);
                userType.AddEnumValue("DeviceMonitorNoPic", global::WinUICommunity.GlyphName.DeviceMonitorNoPic);
                userType.AddEnumValue("Game", global::WinUICommunity.GlyphName.Game);
                userType.AddEnumValue("HorizontalTabKey", global::WinUICommunity.GlyphName.HorizontalTabKey);
                userType.AddEnumValue("StreetsideSplitMinimize", global::WinUICommunity.GlyphName.StreetsideSplitMinimize);
                userType.AddEnumValue("StreetsideSplitExpand", global::WinUICommunity.GlyphName.StreetsideSplitExpand);
                userType.AddEnumValue("Car", global::WinUICommunity.GlyphName.Car);
                userType.AddEnumValue("Walk", global::WinUICommunity.GlyphName.Walk);
                userType.AddEnumValue("Bus", global::WinUICommunity.GlyphName.Bus);
                userType.AddEnumValue("TiltUp", global::WinUICommunity.GlyphName.TiltUp);
                userType.AddEnumValue("TiltDown", global::WinUICommunity.GlyphName.TiltDown);
                userType.AddEnumValue("CallControl", global::WinUICommunity.GlyphName.CallControl);
                userType.AddEnumValue("RotateMapRight", global::WinUICommunity.GlyphName.RotateMapRight);
                userType.AddEnumValue("RotateMapLeft", global::WinUICommunity.GlyphName.RotateMapLeft);
                userType.AddEnumValue("Home", global::WinUICommunity.GlyphName.Home);
                userType.AddEnumValue("ParkingLocation", global::WinUICommunity.GlyphName.ParkingLocation);
                userType.AddEnumValue("MapCompassTop", global::WinUICommunity.GlyphName.MapCompassTop);
                userType.AddEnumValue("MapCompassBottom", global::WinUICommunity.GlyphName.MapCompassBottom);
                userType.AddEnumValue("IncidentTriangle", global::WinUICommunity.GlyphName.IncidentTriangle);
                userType.AddEnumValue("Touch", global::WinUICommunity.GlyphName.Touch);
                userType.AddEnumValue("MapDirections", global::WinUICommunity.GlyphName.MapDirections);
                userType.AddEnumValue("StartPoint", global::WinUICommunity.GlyphName.StartPoint);
                userType.AddEnumValue("StopPoint", global::WinUICommunity.GlyphName.StopPoint);
                userType.AddEnumValue("EndPoint", global::WinUICommunity.GlyphName.EndPoint);
                userType.AddEnumValue("History", global::WinUICommunity.GlyphName.History);
                userType.AddEnumValue("Location", global::WinUICommunity.GlyphName.Location);
                userType.AddEnumValue("MapLayers", global::WinUICommunity.GlyphName.MapLayers);
                userType.AddEnumValue("Accident", global::WinUICommunity.GlyphName.Accident);
                userType.AddEnumValue("Work", global::WinUICommunity.GlyphName.Work);
                userType.AddEnumValue("Construction", global::WinUICommunity.GlyphName.Construction);
                userType.AddEnumValue("Recent", global::WinUICommunity.GlyphName.Recent);
                userType.AddEnumValue("Bank", global::WinUICommunity.GlyphName.Bank);
                userType.AddEnumValue("DownloadMap", global::WinUICommunity.GlyphName.DownloadMap);
                userType.AddEnumValue("InkingToolFill2", global::WinUICommunity.GlyphName.InkingToolFill2);
                userType.AddEnumValue("HighlightFill2", global::WinUICommunity.GlyphName.HighlightFill2);
                userType.AddEnumValue("EraseToolFill", global::WinUICommunity.GlyphName.EraseToolFill);
                userType.AddEnumValue("EraseToolFill2", global::WinUICommunity.GlyphName.EraseToolFill2);
                userType.AddEnumValue("Dictionary", global::WinUICommunity.GlyphName.Dictionary);
                userType.AddEnumValue("DictionaryAdd", global::WinUICommunity.GlyphName.DictionaryAdd);
                userType.AddEnumValue("ToolTip", global::WinUICommunity.GlyphName.ToolTip);
                userType.AddEnumValue("ChromeBack", global::WinUICommunity.GlyphName.ChromeBack);
                userType.AddEnumValue("ProvisioningPackage", global::WinUICommunity.GlyphName.ProvisioningPackage);
                userType.AddEnumValue("AddRemoteDevice", global::WinUICommunity.GlyphName.AddRemoteDevice);
                userType.AddEnumValue("FolderOpen", global::WinUICommunity.GlyphName.FolderOpen);
                userType.AddEnumValue("Ethernet", global::WinUICommunity.GlyphName.Ethernet);
                userType.AddEnumValue("ShareBroadband", global::WinUICommunity.GlyphName.ShareBroadband);
                userType.AddEnumValue("DirectAccess", global::WinUICommunity.GlyphName.DirectAccess);
                userType.AddEnumValue("DialUp", global::WinUICommunity.GlyphName.DialUp);
                userType.AddEnumValue("DefenderApp", global::WinUICommunity.GlyphName.DefenderApp);
                userType.AddEnumValue("BatteryCharging9", global::WinUICommunity.GlyphName.BatteryCharging9);
                userType.AddEnumValue("Battery10", global::WinUICommunity.GlyphName.Battery10);
                userType.AddEnumValue("Pinned", global::WinUICommunity.GlyphName.Pinned);
                userType.AddEnumValue("PinFill", global::WinUICommunity.GlyphName.PinFill);
                userType.AddEnumValue("PinnedFill", global::WinUICommunity.GlyphName.PinnedFill);
                userType.AddEnumValue("PeriodKey", global::WinUICommunity.GlyphName.PeriodKey);
                userType.AddEnumValue("PuncKey", global::WinUICommunity.GlyphName.PuncKey);
                userType.AddEnumValue("RevToggleKey", global::WinUICommunity.GlyphName.RevToggleKey);
                userType.AddEnumValue("RightArrowKeyTime1", global::WinUICommunity.GlyphName.RightArrowKeyTime1);
                userType.AddEnumValue("RightArrowKeyTime2", global::WinUICommunity.GlyphName.RightArrowKeyTime2);
                userType.AddEnumValue("LeftQuote", global::WinUICommunity.GlyphName.LeftQuote);
                userType.AddEnumValue("RightQuote", global::WinUICommunity.GlyphName.RightQuote);
                userType.AddEnumValue("DownShiftKey", global::WinUICommunity.GlyphName.DownShiftKey);
                userType.AddEnumValue("UpShiftKey", global::WinUICommunity.GlyphName.UpShiftKey);
                userType.AddEnumValue("PuncKey0", global::WinUICommunity.GlyphName.PuncKey0);
                userType.AddEnumValue("PuncKeyLeftBottom", global::WinUICommunity.GlyphName.PuncKeyLeftBottom);
                userType.AddEnumValue("RightArrowKeyTime3", global::WinUICommunity.GlyphName.RightArrowKeyTime3);
                userType.AddEnumValue("RightArrowKeyTime4", global::WinUICommunity.GlyphName.RightArrowKeyTime4);
                userType.AddEnumValue("Battery0", global::WinUICommunity.GlyphName.Battery0);
                userType.AddEnumValue("Battery1", global::WinUICommunity.GlyphName.Battery1);
                userType.AddEnumValue("Battery2", global::WinUICommunity.GlyphName.Battery2);
                userType.AddEnumValue("Battery3", global::WinUICommunity.GlyphName.Battery3);
                userType.AddEnumValue("Battery4", global::WinUICommunity.GlyphName.Battery4);
                userType.AddEnumValue("Battery5", global::WinUICommunity.GlyphName.Battery5);
                userType.AddEnumValue("Battery6", global::WinUICommunity.GlyphName.Battery6);
                userType.AddEnumValue("Battery7", global::WinUICommunity.GlyphName.Battery7);
                userType.AddEnumValue("Battery8", global::WinUICommunity.GlyphName.Battery8);
                userType.AddEnumValue("Battery9", global::WinUICommunity.GlyphName.Battery9);
                userType.AddEnumValue("BatteryCharging0", global::WinUICommunity.GlyphName.BatteryCharging0);
                userType.AddEnumValue("BatteryCharging1", global::WinUICommunity.GlyphName.BatteryCharging1);
                userType.AddEnumValue("BatteryCharging2", global::WinUICommunity.GlyphName.BatteryCharging2);
                userType.AddEnumValue("BatteryCharging3", global::WinUICommunity.GlyphName.BatteryCharging3);
                userType.AddEnumValue("BatteryCharging4", global::WinUICommunity.GlyphName.BatteryCharging4);
                userType.AddEnumValue("BatteryCharging5", global::WinUICommunity.GlyphName.BatteryCharging5);
                userType.AddEnumValue("BatteryCharging6", global::WinUICommunity.GlyphName.BatteryCharging6);
                userType.AddEnumValue("BatteryCharging7", global::WinUICommunity.GlyphName.BatteryCharging7);
                userType.AddEnumValue("BatteryCharging8", global::WinUICommunity.GlyphName.BatteryCharging8);
                userType.AddEnumValue("BatterySaver0", global::WinUICommunity.GlyphName.BatterySaver0);
                userType.AddEnumValue("BatterySaver1", global::WinUICommunity.GlyphName.BatterySaver1);
                userType.AddEnumValue("BatterySaver2", global::WinUICommunity.GlyphName.BatterySaver2);
                userType.AddEnumValue("BatterySaver3", global::WinUICommunity.GlyphName.BatterySaver3);
                userType.AddEnumValue("BatterySaver4", global::WinUICommunity.GlyphName.BatterySaver4);
                userType.AddEnumValue("BatterySaver5", global::WinUICommunity.GlyphName.BatterySaver5);
                userType.AddEnumValue("BatterySaver6", global::WinUICommunity.GlyphName.BatterySaver6);
                userType.AddEnumValue("BatterySaver7", global::WinUICommunity.GlyphName.BatterySaver7);
                userType.AddEnumValue("BatterySaver8", global::WinUICommunity.GlyphName.BatterySaver8);
                userType.AddEnumValue("SignalBars1", global::WinUICommunity.GlyphName.SignalBars1);
                userType.AddEnumValue("SignalBars2", global::WinUICommunity.GlyphName.SignalBars2);
                userType.AddEnumValue("SignalBars3", global::WinUICommunity.GlyphName.SignalBars3);
                userType.AddEnumValue("SignalBars4", global::WinUICommunity.GlyphName.SignalBars4);
                userType.AddEnumValue("SignalBars5", global::WinUICommunity.GlyphName.SignalBars5);
                userType.AddEnumValue("SignalNotConnected", global::WinUICommunity.GlyphName.SignalNotConnected);
                userType.AddEnumValue("Wifi1", global::WinUICommunity.GlyphName.Wifi1);
                userType.AddEnumValue("Wifi2", global::WinUICommunity.GlyphName.Wifi2);
                userType.AddEnumValue("Wifi3", global::WinUICommunity.GlyphName.Wifi3);
                userType.AddEnumValue("MobSIMLock", global::WinUICommunity.GlyphName.MobSIMLock);
                userType.AddEnumValue("MobSIMMissing", global::WinUICommunity.GlyphName.MobSIMMissing);
                userType.AddEnumValue("Vibrate", global::WinUICommunity.GlyphName.Vibrate);
                userType.AddEnumValue("RoamingInternational", global::WinUICommunity.GlyphName.RoamingInternational);
                userType.AddEnumValue("RoamingDomestic", global::WinUICommunity.GlyphName.RoamingDomestic);
                userType.AddEnumValue("CallForwardInternational", global::WinUICommunity.GlyphName.CallForwardInternational);
                userType.AddEnumValue("CallForwardRoaming", global::WinUICommunity.GlyphName.CallForwardRoaming);
                userType.AddEnumValue("JpnRomanji", global::WinUICommunity.GlyphName.JpnRomanji);
                userType.AddEnumValue("JpnRomanjiLock", global::WinUICommunity.GlyphName.JpnRomanjiLock);
                userType.AddEnumValue("JpnRomanjiShift", global::WinUICommunity.GlyphName.JpnRomanjiShift);
                userType.AddEnumValue("JpnRomanjiShiftLock", global::WinUICommunity.GlyphName.JpnRomanjiShiftLock);
                userType.AddEnumValue("StatusDataTransfer", global::WinUICommunity.GlyphName.StatusDataTransfer);
                userType.AddEnumValue("StatusDataTransferVPN", global::WinUICommunity.GlyphName.StatusDataTransferVPN);
                userType.AddEnumValue("StatusDualSIM2", global::WinUICommunity.GlyphName.StatusDualSIM2);
                userType.AddEnumValue("StatusDualSIM2VPN", global::WinUICommunity.GlyphName.StatusDualSIM2VPN);
                userType.AddEnumValue("StatusDualSIM1", global::WinUICommunity.GlyphName.StatusDualSIM1);
                userType.AddEnumValue("StatusDualSIM1VPN", global::WinUICommunity.GlyphName.StatusDualSIM1VPN);
                userType.AddEnumValue("StatusSGLTE", global::WinUICommunity.GlyphName.StatusSGLTE);
                userType.AddEnumValue("StatusSGLTECell", global::WinUICommunity.GlyphName.StatusSGLTECell);
                userType.AddEnumValue("StatusSGLTEDataVPN", global::WinUICommunity.GlyphName.StatusSGLTEDataVPN);
                userType.AddEnumValue("StatusVPN", global::WinUICommunity.GlyphName.StatusVPN);
                userType.AddEnumValue("WifiHotspot", global::WinUICommunity.GlyphName.WifiHotspot);
                userType.AddEnumValue("LanguageKor", global::WinUICommunity.GlyphName.LanguageKor);
                userType.AddEnumValue("LanguageCht", global::WinUICommunity.GlyphName.LanguageCht);
                userType.AddEnumValue("LanguageChs", global::WinUICommunity.GlyphName.LanguageChs);
                userType.AddEnumValue("USB", global::WinUICommunity.GlyphName.USB);
                userType.AddEnumValue("InkingToolFill", global::WinUICommunity.GlyphName.InkingToolFill);
                userType.AddEnumValue("View", global::WinUICommunity.GlyphName.View);
                userType.AddEnumValue("HighlightFill", global::WinUICommunity.GlyphName.HighlightFill);
                userType.AddEnumValue("Previous", global::WinUICommunity.GlyphName.Previous);
                userType.AddEnumValue("Next", global::WinUICommunity.GlyphName.Next);
                userType.AddEnumValue("Clear", global::WinUICommunity.GlyphName.Clear);
                userType.AddEnumValue("Sync", global::WinUICommunity.GlyphName.Sync);
                userType.AddEnumValue("Download", global::WinUICommunity.GlyphName.Download);
                userType.AddEnumValue("Help", global::WinUICommunity.GlyphName.Help);
                userType.AddEnumValue("Upload", global::WinUICommunity.GlyphName.Upload);
                userType.AddEnumValue("Emoji", global::WinUICommunity.GlyphName.Emoji);
                userType.AddEnumValue("TwoPage", global::WinUICommunity.GlyphName.TwoPage);
                userType.AddEnumValue("LeaveChat", global::WinUICommunity.GlyphName.LeaveChat);
                userType.AddEnumValue("MailForward", global::WinUICommunity.GlyphName.MailForward);
                userType.AddEnumValue("RotateCamera", global::WinUICommunity.GlyphName.RotateCamera);
                userType.AddEnumValue("ClosePane", global::WinUICommunity.GlyphName.ClosePane);
                userType.AddEnumValue("OpenPane", global::WinUICommunity.GlyphName.OpenPane);
                userType.AddEnumValue("PreviewLink", global::WinUICommunity.GlyphName.PreviewLink);
                userType.AddEnumValue("AttachCamera", global::WinUICommunity.GlyphName.AttachCamera);
                userType.AddEnumValue("ZoomIn", global::WinUICommunity.GlyphName.ZoomIn);
                userType.AddEnumValue("Bookmarks", global::WinUICommunity.GlyphName.Bookmarks);
                userType.AddEnumValue("Document", global::WinUICommunity.GlyphName.Document);
                userType.AddEnumValue("ProtectedDocument", global::WinUICommunity.GlyphName.ProtectedDocument);
                userType.AddEnumValue("OpenInNewWindow", global::WinUICommunity.GlyphName.OpenInNewWindow);
                userType.AddEnumValue("MailFill", global::WinUICommunity.GlyphName.MailFill);
                userType.AddEnumValue("ViewAll", global::WinUICommunity.GlyphName.ViewAll);
                userType.AddEnumValue("VideoChat", global::WinUICommunity.GlyphName.VideoChat);
                userType.AddEnumValue("Switch", global::WinUICommunity.GlyphName.Switch);
                userType.AddEnumValue("Rename", global::WinUICommunity.GlyphName.Rename);
                userType.AddEnumValue("Go", global::WinUICommunity.GlyphName.Go);
                userType.AddEnumValue("SurfaceHub", global::WinUICommunity.GlyphName.SurfaceHub);
                userType.AddEnumValue("Remote", global::WinUICommunity.GlyphName.Remote);
                userType.AddEnumValue("Click", global::WinUICommunity.GlyphName.Click);
                userType.AddEnumValue("Shuffle", global::WinUICommunity.GlyphName.Shuffle);
                userType.AddEnumValue("Movies", global::WinUICommunity.GlyphName.Movies);
                userType.AddEnumValue("SelectAll", global::WinUICommunity.GlyphName.SelectAll);
                userType.AddEnumValue("Orientation", global::WinUICommunity.GlyphName.Orientation);
                userType.AddEnumValue("Import", global::WinUICommunity.GlyphName.Import);
                userType.AddEnumValue("ImportAll", global::WinUICommunity.GlyphName.ImportAll);
                userType.AddEnumValue("Folder", global::WinUICommunity.GlyphName.Folder);
                userType.AddEnumValue("Webcam", global::WinUICommunity.GlyphName.Webcam);
                userType.AddEnumValue("Picture", global::WinUICommunity.GlyphName.Picture);
                userType.AddEnumValue("Caption", global::WinUICommunity.GlyphName.Caption);
                userType.AddEnumValue("ChromeClose", global::WinUICommunity.GlyphName.ChromeClose);
                userType.AddEnumValue("ShowResults", global::WinUICommunity.GlyphName.ShowResults);
                userType.AddEnumValue("Message", global::WinUICommunity.GlyphName.Message);
                userType.AddEnumValue("Leaf", global::WinUICommunity.GlyphName.Leaf);
                userType.AddEnumValue("CalendarDay", global::WinUICommunity.GlyphName.CalendarDay);
                userType.AddEnumValue("CalendarWeek", global::WinUICommunity.GlyphName.CalendarWeek);
                userType.AddEnumValue("Characters", global::WinUICommunity.GlyphName.Characters);
                userType.AddEnumValue("MailReplyAll", global::WinUICommunity.GlyphName.MailReplyAll);
                userType.AddEnumValue("Read", global::WinUICommunity.GlyphName.Read);
                userType.AddEnumValue("ShowBcc", global::WinUICommunity.GlyphName.ShowBcc);
                userType.AddEnumValue("HideBcc", global::WinUICommunity.GlyphName.HideBcc);
                userType.AddEnumValue("Cut", global::WinUICommunity.GlyphName.Cut);
                userType.AddEnumValue("PaymentCard", global::WinUICommunity.GlyphName.PaymentCard);
                userType.AddEnumValue("Copy", global::WinUICommunity.GlyphName.Copy);
                userType.AddEnumValue("Important", global::WinUICommunity.GlyphName.Important);
                userType.AddEnumValue("MailReply", global::WinUICommunity.GlyphName.MailReply);
                userType.AddEnumValue("Sort", global::WinUICommunity.GlyphName.Sort);
                userType.AddEnumValue("MobileTablet", global::WinUICommunity.GlyphName.MobileTablet);
                userType.AddEnumValue("DisconnectDrive", global::WinUICommunity.GlyphName.DisconnectDrive);
                userType.AddEnumValue("MapDrive", global::WinUICommunity.GlyphName.MapDrive);
                userType.AddEnumValue("ContactPresence", global::WinUICommunity.GlyphName.ContactPresence);
                userType.AddEnumValue("Priority", global::WinUICommunity.GlyphName.Priority);
                userType.AddEnumValue("GotoToday", global::WinUICommunity.GlyphName.GotoToday);
                userType.AddEnumValue("Font", global::WinUICommunity.GlyphName.Font);
                userType.AddEnumValue("FontColor", global::WinUICommunity.GlyphName.FontColor);
                userType.AddEnumValue("Contact2", global::WinUICommunity.GlyphName.Contact2);
                userType.AddEnumValue("FolderFill", global::WinUICommunity.GlyphName.FolderFill);
                userType.AddEnumValue("Audio", global::WinUICommunity.GlyphName.Audio);
                userType.AddEnumValue("Permissions", global::WinUICommunity.GlyphName.Permissions);
                userType.AddEnumValue("DisableUpdates", global::WinUICommunity.GlyphName.DisableUpdates);
                userType.AddEnumValue("Unfavorite", global::WinUICommunity.GlyphName.Unfavorite);
                userType.AddEnumValue("OpenLocal", global::WinUICommunity.GlyphName.OpenLocal);
                userType.AddEnumValue("Italic", global::WinUICommunity.GlyphName.Italic);
                userType.AddEnumValue("Underline", global::WinUICommunity.GlyphName.Underline);
                userType.AddEnumValue("Bold", global::WinUICommunity.GlyphName.Bold);
                userType.AddEnumValue("MoveToFolder", global::WinUICommunity.GlyphName.MoveToFolder);
                userType.AddEnumValue("LikeDislike", global::WinUICommunity.GlyphName.LikeDislike);
                userType.AddEnumValue("Dislike", global::WinUICommunity.GlyphName.Dislike);
                userType.AddEnumValue("Like", global::WinUICommunity.GlyphName.Like);
                userType.AddEnumValue("AlignRight", global::WinUICommunity.GlyphName.AlignRight);
                userType.AddEnumValue("AlignCenter", global::WinUICommunity.GlyphName.AlignCenter);
                userType.AddEnumValue("AlignLeft", global::WinUICommunity.GlyphName.AlignLeft);
                userType.AddEnumValue("OpenFile", global::WinUICommunity.GlyphName.OpenFile);
                userType.AddEnumValue("ClearSelection", global::WinUICommunity.GlyphName.ClearSelection);
                userType.AddEnumValue("FontDecrease", global::WinUICommunity.GlyphName.FontDecrease);
                userType.AddEnumValue("FontIncrease", global::WinUICommunity.GlyphName.FontIncrease);
                userType.AddEnumValue("FontSize", global::WinUICommunity.GlyphName.FontSize);
                userType.AddEnumValue("CellPhone", global::WinUICommunity.GlyphName.CellPhone);
                userType.AddEnumValue("Reshare", global::WinUICommunity.GlyphName.Reshare);
                userType.AddEnumValue("Tag", global::WinUICommunity.GlyphName.Tag);
                userType.AddEnumValue("RepeatOne", global::WinUICommunity.GlyphName.RepeatOne);
                userType.AddEnumValue("RepeatAll", global::WinUICommunity.GlyphName.RepeatAll);
                userType.AddEnumValue("Calculator", global::WinUICommunity.GlyphName.Calculator);
                userType.AddEnumValue("Directions", global::WinUICommunity.GlyphName.Directions);
                userType.AddEnumValue("Library", global::WinUICommunity.GlyphName.Library);
                userType.AddEnumValue("ChatBubbles", global::WinUICommunity.GlyphName.ChatBubbles);
                userType.AddEnumValue("PostUpdate", global::WinUICommunity.GlyphName.PostUpdate);
                userType.AddEnumValue("NewFolder", global::WinUICommunity.GlyphName.NewFolder);
                userType.AddEnumValue("CalendarReply", global::WinUICommunity.GlyphName.CalendarReply);
                userType.AddEnumValue("UnsyncFolder", global::WinUICommunity.GlyphName.UnsyncFolder);
                userType.AddEnumValue("SyncFolder", global::WinUICommunity.GlyphName.SyncFolder);
                userType.AddEnumValue("BlockContact", global::WinUICommunity.GlyphName.BlockContact);
                userType.AddEnumValue("SwitchApps", global::WinUICommunity.GlyphName.SwitchApps);
                userType.AddEnumValue("AddFriend", global::WinUICommunity.GlyphName.AddFriend);
                userType.AddEnumValue("Accept", global::WinUICommunity.GlyphName.Accept);
                userType.AddEnumValue("GoToStart", global::WinUICommunity.GlyphName.GoToStart);
                userType.AddEnumValue("BulletedList", global::WinUICommunity.GlyphName.BulletedList);
                userType.AddEnumValue("Scan", global::WinUICommunity.GlyphName.Scan);
                userType.AddEnumValue("Preview", global::WinUICommunity.GlyphName.Preview);
                userType.AddEnumValue("Group", global::WinUICommunity.GlyphName.Group);
                userType.AddEnumValue("ZeroBars", global::WinUICommunity.GlyphName.ZeroBars);
                userType.AddEnumValue("OneBar", global::WinUICommunity.GlyphName.OneBar);
                userType.AddEnumValue("TwoBars", global::WinUICommunity.GlyphName.TwoBars);
                userType.AddEnumValue("ThreeBars", global::WinUICommunity.GlyphName.ThreeBars);
                userType.AddEnumValue("FourBars", global::WinUICommunity.GlyphName.FourBars);
                userType.AddEnumValue("World", global::WinUICommunity.GlyphName.World);
                userType.AddEnumValue("Comment", global::WinUICommunity.GlyphName.Comment);
                userType.AddEnumValue("MusicInfo", global::WinUICommunity.GlyphName.MusicInfo);
                userType.AddEnumValue("DockLeft", global::WinUICommunity.GlyphName.DockLeft);
                userType.AddEnumValue("DockRight", global::WinUICommunity.GlyphName.DockRight);
                userType.AddEnumValue("DockBottom", global::WinUICommunity.GlyphName.DockBottom);
                userType.AddEnumValue("Repair", global::WinUICommunity.GlyphName.Repair);
                userType.AddEnumValue("Accounts", global::WinUICommunity.GlyphName.Accounts);
                userType.AddEnumValue("DullSound", global::WinUICommunity.GlyphName.DullSound);
                userType.AddEnumValue("Manage", global::WinUICommunity.GlyphName.Manage);
                userType.AddEnumValue("Street", global::WinUICommunity.GlyphName.Street);
                userType.AddEnumValue("Printer3D", global::WinUICommunity.GlyphName.Printer3D);
                userType.AddEnumValue("RadioBullet", global::WinUICommunity.GlyphName.RadioBullet);
                userType.AddEnumValue("Stopwatch", global::WinUICommunity.GlyphName.Stopwatch);
                userType.AddEnumValue("Photo", global::WinUICommunity.GlyphName.Photo);
                userType.AddEnumValue("ActionCenter", global::WinUICommunity.GlyphName.ActionCenter);
                userType.AddEnumValue("FullCircleMask", global::WinUICommunity.GlyphName.FullCircleMask);
                userType.AddEnumValue("ChromeMinimize", global::WinUICommunity.GlyphName.ChromeMinimize);
                userType.AddEnumValue("ChromeMaximize", global::WinUICommunity.GlyphName.ChromeMaximize);
                userType.AddEnumValue("ChromeRestore", global::WinUICommunity.GlyphName.ChromeRestore);
                userType.AddEnumValue("Annotation", global::WinUICommunity.GlyphName.Annotation);
                userType.AddEnumValue("BackSpaceQWERTYSm", global::WinUICommunity.GlyphName.BackSpaceQWERTYSm);
                userType.AddEnumValue("BackSpaceQWERTYMd", global::WinUICommunity.GlyphName.BackSpaceQWERTYMd);
                userType.AddEnumValue("Swipe", global::WinUICommunity.GlyphName.Swipe);
                userType.AddEnumValue("Fingerprint", global::WinUICommunity.GlyphName.Fingerprint);
                userType.AddEnumValue("Handwriting", global::WinUICommunity.GlyphName.Handwriting);
                userType.AddEnumValue("ChromeBackToWindow", global::WinUICommunity.GlyphName.ChromeBackToWindow);
                userType.AddEnumValue("ChromeFullScreen", global::WinUICommunity.GlyphName.ChromeFullScreen);
                userType.AddEnumValue("KeyboardStandard", global::WinUICommunity.GlyphName.KeyboardStandard);
                userType.AddEnumValue("KeyboardDismiss", global::WinUICommunity.GlyphName.KeyboardDismiss);
                userType.AddEnumValue("Completed", global::WinUICommunity.GlyphName.Completed);
                userType.AddEnumValue("ChromeAnnotate", global::WinUICommunity.GlyphName.ChromeAnnotate);
                userType.AddEnumValue("Label", global::WinUICommunity.GlyphName.Label);
                userType.AddEnumValue("IBeam", global::WinUICommunity.GlyphName.IBeam);
                userType.AddEnumValue("IBeamOutline", global::WinUICommunity.GlyphName.IBeamOutline);
                userType.AddEnumValue("FlickDown", global::WinUICommunity.GlyphName.FlickDown);
                userType.AddEnumValue("FlickUp", global::WinUICommunity.GlyphName.FlickUp);
                userType.AddEnumValue("FlickLeft", global::WinUICommunity.GlyphName.FlickLeft);
                userType.AddEnumValue("FlickRight", global::WinUICommunity.GlyphName.FlickRight);
                userType.AddEnumValue("FeedbackApp", global::WinUICommunity.GlyphName.FeedbackApp);
                userType.AddEnumValue("MusicAlbum", global::WinUICommunity.GlyphName.MusicAlbum);
                userType.AddEnumValue("Streaming", global::WinUICommunity.GlyphName.Streaming);
                userType.AddEnumValue("Code", global::WinUICommunity.GlyphName.Code);
                userType.AddEnumValue("ReturnToWindow", global::WinUICommunity.GlyphName.ReturnToWindow);
                userType.AddEnumValue("LightningBolt", global::WinUICommunity.GlyphName.LightningBolt);
                userType.AddEnumValue("Info", global::WinUICommunity.GlyphName.Info);
                userType.AddEnumValue("CalculatorMultiply", global::WinUICommunity.GlyphName.CalculatorMultiply);
                userType.AddEnumValue("CalculatorAddition", global::WinUICommunity.GlyphName.CalculatorAddition);
                userType.AddEnumValue("CalculatorSubtract", global::WinUICommunity.GlyphName.CalculatorSubtract);
                userType.AddEnumValue("CalculatorDivide", global::WinUICommunity.GlyphName.CalculatorDivide);
                userType.AddEnumValue("CalculatorSquareroot", global::WinUICommunity.GlyphName.CalculatorSquareroot);
                userType.AddEnumValue("CalculatorPercentage", global::WinUICommunity.GlyphName.CalculatorPercentage);
                userType.AddEnumValue("CalculatorNegate", global::WinUICommunity.GlyphName.CalculatorNegate);
                userType.AddEnumValue("CalculatorEqualTo", global::WinUICommunity.GlyphName.CalculatorEqualTo);
                userType.AddEnumValue("CalculatorBackspace", global::WinUICommunity.GlyphName.CalculatorBackspace);
                userType.AddEnumValue("Component", global::WinUICommunity.GlyphName.Component);
                userType.AddEnumValue("DMC", global::WinUICommunity.GlyphName.DMC);
                userType.AddEnumValue("Dock", global::WinUICommunity.GlyphName.Dock);
                userType.AddEnumValue("MultimediaDMS", global::WinUICommunity.GlyphName.MultimediaDMS);
                userType.AddEnumValue("MultimediaDVR", global::WinUICommunity.GlyphName.MultimediaDVR);
                userType.AddEnumValue("MultimediaPMP", global::WinUICommunity.GlyphName.MultimediaPMP);
                userType.AddEnumValue("PrintfaxPrinterFile", global::WinUICommunity.GlyphName.PrintfaxPrinterFile);
                userType.AddEnumValue("Sensor", global::WinUICommunity.GlyphName.Sensor);
                userType.AddEnumValue("StorageOptical", global::WinUICommunity.GlyphName.StorageOptical);
                userType.AddEnumValue("Communications", global::WinUICommunity.GlyphName.Communications);
                userType.AddEnumValue("Headset", global::WinUICommunity.GlyphName.Headset);
                userType.AddEnumValue("Projector", global::WinUICommunity.GlyphName.Projector);
                userType.AddEnumValue("Health", global::WinUICommunity.GlyphName.Health);
                userType.AddEnumValue("Wire", global::WinUICommunity.GlyphName.Wire);
                userType.AddEnumValue("Webcam2", global::WinUICommunity.GlyphName.Webcam2);
                userType.AddEnumValue("Input", global::WinUICommunity.GlyphName.Input);
                userType.AddEnumValue("Mouse", global::WinUICommunity.GlyphName.Mouse);
                userType.AddEnumValue("Smartcard", global::WinUICommunity.GlyphName.Smartcard);
                userType.AddEnumValue("SmartcardVirtual", global::WinUICommunity.GlyphName.SmartcardVirtual);
                userType.AddEnumValue("MediaStorageTower", global::WinUICommunity.GlyphName.MediaStorageTower);
                userType.AddEnumValue("ReturnKeySm", global::WinUICommunity.GlyphName.ReturnKeySm);
                userType.AddEnumValue("GameConsole", global::WinUICommunity.GlyphName.GameConsole);
                userType.AddEnumValue("Network", global::WinUICommunity.GlyphName.Network);
                userType.AddEnumValue("StorageNetworkWireless", global::WinUICommunity.GlyphName.StorageNetworkWireless);
                userType.AddEnumValue("StorageTape", global::WinUICommunity.GlyphName.StorageTape);
                userType.AddEnumValue("ChevronUpSmall", global::WinUICommunity.GlyphName.ChevronUpSmall);
                userType.AddEnumValue("ChevronDownSmall", global::WinUICommunity.GlyphName.ChevronDownSmall);
                userType.AddEnumValue("ChevronLeftSmall", global::WinUICommunity.GlyphName.ChevronLeftSmall);
                userType.AddEnumValue("ChevronRightSmall", global::WinUICommunity.GlyphName.ChevronRightSmall);
                userType.AddEnumValue("ChevronUpMed", global::WinUICommunity.GlyphName.ChevronUpMed);
                userType.AddEnumValue("ChevronDownMed", global::WinUICommunity.GlyphName.ChevronDownMed);
                userType.AddEnumValue("ChevronLeftMed", global::WinUICommunity.GlyphName.ChevronLeftMed);
                userType.AddEnumValue("ChevronRightMed", global::WinUICommunity.GlyphName.ChevronRightMed);
                userType.AddEnumValue("Devices2", global::WinUICommunity.GlyphName.Devices2);
                userType.AddEnumValue("ExpandTile", global::WinUICommunity.GlyphName.ExpandTile);
                userType.AddEnumValue("PC1", global::WinUICommunity.GlyphName.PC1);
                userType.AddEnumValue("PresenceChicklet", global::WinUICommunity.GlyphName.PresenceChicklet);
                userType.AddEnumValue("PresenceChickletVideo", global::WinUICommunity.GlyphName.PresenceChickletVideo);
                userType.AddEnumValue("Reply", global::WinUICommunity.GlyphName.Reply);
                userType.AddEnumValue("SetTile", global::WinUICommunity.GlyphName.SetTile);
                userType.AddEnumValue("Type", global::WinUICommunity.GlyphName.Type);
                userType.AddEnumValue("Korean", global::WinUICommunity.GlyphName.Korean);
                userType.AddEnumValue("HalfAlpha", global::WinUICommunity.GlyphName.HalfAlpha);
                userType.AddEnumValue("FullAlpha", global::WinUICommunity.GlyphName.FullAlpha);
                userType.AddEnumValue("Key12On", global::WinUICommunity.GlyphName.Key12On);
                userType.AddEnumValue("ChineseChangjie", global::WinUICommunity.GlyphName.ChineseChangjie);
                userType.AddEnumValue("QWERTYOn", global::WinUICommunity.GlyphName.QWERTYOn);
                userType.AddEnumValue("QWERTYOff", global::WinUICommunity.GlyphName.QWERTYOff);
                userType.AddEnumValue("ChineseQuick", global::WinUICommunity.GlyphName.ChineseQuick);
                userType.AddEnumValue("Japanese", global::WinUICommunity.GlyphName.Japanese);
                userType.AddEnumValue("FullHiragana", global::WinUICommunity.GlyphName.FullHiragana);
                userType.AddEnumValue("FullKatakana", global::WinUICommunity.GlyphName.FullKatakana);
                userType.AddEnumValue("HalfKatakana", global::WinUICommunity.GlyphName.HalfKatakana);
                userType.AddEnumValue("ChineseBoPoMoFo", global::WinUICommunity.GlyphName.ChineseBoPoMoFo);
                userType.AddEnumValue("ChinesePinyin", global::WinUICommunity.GlyphName.ChinesePinyin);
                userType.AddEnumValue("ConstructionCone", global::WinUICommunity.GlyphName.ConstructionCone);
                userType.AddEnumValue("XboxOneConsole", global::WinUICommunity.GlyphName.XboxOneConsole);
                userType.AddEnumValue("Volume0", global::WinUICommunity.GlyphName.Volume0);
                userType.AddEnumValue("Volume1", global::WinUICommunity.GlyphName.Volume1);
                userType.AddEnumValue("Volume2", global::WinUICommunity.GlyphName.Volume2);
                userType.AddEnumValue("Volume3", global::WinUICommunity.GlyphName.Volume3);
                userType.AddEnumValue("BatteryUnknown", global::WinUICommunity.GlyphName.BatteryUnknown);
                userType.AddEnumValue("WifiAttentionOverlay", global::WinUICommunity.GlyphName.WifiAttentionOverlay);
                userType.AddEnumValue("Robot", global::WinUICommunity.GlyphName.Robot);
                userType.AddEnumValue("TapAndSend", global::WinUICommunity.GlyphName.TapAndSend);
                userType.AddEnumValue("FitPage", global::WinUICommunity.GlyphName.FitPage);
                userType.AddEnumValue("PasswordKeyShow", global::WinUICommunity.GlyphName.PasswordKeyShow);
                userType.AddEnumValue("PasswordKeyHide", global::WinUICommunity.GlyphName.PasswordKeyHide);
                userType.AddEnumValue("BidiLtr", global::WinUICommunity.GlyphName.BidiLtr);
                userType.AddEnumValue("BidiRtl", global::WinUICommunity.GlyphName.BidiRtl);
                userType.AddEnumValue("ForwardSm", global::WinUICommunity.GlyphName.ForwardSm);
                userType.AddEnumValue("CommaKey", global::WinUICommunity.GlyphName.CommaKey);
                userType.AddEnumValue("DashKey", global::WinUICommunity.GlyphName.DashKey);
                userType.AddEnumValue("DullSoundKey", global::WinUICommunity.GlyphName.DullSoundKey);
                userType.AddEnumValue("HalfDullSound", global::WinUICommunity.GlyphName.HalfDullSound);
                userType.AddEnumValue("RightDoubleQuote", global::WinUICommunity.GlyphName.RightDoubleQuote);
                userType.AddEnumValue("LeftDoubleQuote", global::WinUICommunity.GlyphName.LeftDoubleQuote);
                userType.AddEnumValue("PuncKeyRightBottom", global::WinUICommunity.GlyphName.PuncKeyRightBottom);
                userType.AddEnumValue("PuncKey1", global::WinUICommunity.GlyphName.PuncKey1);
                userType.AddEnumValue("PuncKey2", global::WinUICommunity.GlyphName.PuncKey2);
                userType.AddEnumValue("PuncKey3", global::WinUICommunity.GlyphName.PuncKey3);
                userType.AddEnumValue("PuncKey4", global::WinUICommunity.GlyphName.PuncKey4);
                userType.AddEnumValue("PuncKey5", global::WinUICommunity.GlyphName.PuncKey5);
                userType.AddEnumValue("PuncKey6", global::WinUICommunity.GlyphName.PuncKey6);
                userType.AddEnumValue("PuncKey9", global::WinUICommunity.GlyphName.PuncKey9);
                userType.AddEnumValue("PuncKey7", global::WinUICommunity.GlyphName.PuncKey7);
                userType.AddEnumValue("PuncKey8", global::WinUICommunity.GlyphName.PuncKey8);
                userType.AddEnumValue("Frigid", global::WinUICommunity.GlyphName.Frigid);
                userType.AddEnumValue("Unknown", global::WinUICommunity.GlyphName.Unknown);
                userType.AddEnumValue("AreaChart", global::WinUICommunity.GlyphName.AreaChart);
                userType.AddEnumValue("CheckList", global::WinUICommunity.GlyphName.CheckList);
                userType.AddEnumValue("Diagnostic", global::WinUICommunity.GlyphName.Diagnostic);
                userType.AddEnumValue("Equalizer", global::WinUICommunity.GlyphName.Equalizer);
                userType.AddEnumValue("Process", global::WinUICommunity.GlyphName.Process);
                userType.AddEnumValue("Processing", global::WinUICommunity.GlyphName.Processing);
                userType.AddEnumValue("ReportDocument", global::WinUICommunity.GlyphName.ReportDocument);
                userType.AddEnumValue("VideoSolid", global::WinUICommunity.GlyphName.VideoSolid);
                userType.AddEnumValue("MixedMediaBadge", global::WinUICommunity.GlyphName.MixedMediaBadge);
                userType.AddEnumValue("DisconnectDisplay", global::WinUICommunity.GlyphName.DisconnectDisplay);
                userType.AddEnumValue("Shield", global::WinUICommunity.GlyphName.Shield);
                userType.AddEnumValue("Info2", global::WinUICommunity.GlyphName.Info2);
                userType.AddEnumValue("ActionCenterAsterisk", global::WinUICommunity.GlyphName.ActionCenterAsterisk);
                userType.AddEnumValue("Beta", global::WinUICommunity.GlyphName.Beta);
                userType.AddEnumValue("SaveCopy", global::WinUICommunity.GlyphName.SaveCopy);
                userType.AddEnumValue("List", global::WinUICommunity.GlyphName.List);
                userType.AddEnumValue("Asterisk", global::WinUICommunity.GlyphName.Asterisk);
                userType.AddEnumValue("ErrorBadge", global::WinUICommunity.GlyphName.ErrorBadge);
                userType.AddEnumValue("CircleRing", global::WinUICommunity.GlyphName.CircleRing);
                userType.AddEnumValue("CircleFill", global::WinUICommunity.GlyphName.CircleFill);
                userType.AddEnumValue("MergeCall", global::WinUICommunity.GlyphName.MergeCall);
                userType.AddEnumValue("PrivateCall", global::WinUICommunity.GlyphName.PrivateCall);
                userType.AddEnumValue("Record2", global::WinUICommunity.GlyphName.Record2);
                userType.AddEnumValue("AllAppsMirrored", global::WinUICommunity.GlyphName.AllAppsMirrored);
                userType.AddEnumValue("BookmarksMirrored", global::WinUICommunity.GlyphName.BookmarksMirrored);
                userType.AddEnumValue("BulletedListMirrored", global::WinUICommunity.GlyphName.BulletedListMirrored);
                userType.AddEnumValue("CallForwardInternationalMirrored", global::WinUICommunity.GlyphName.CallForwardInternationalMirrored);
                userType.AddEnumValue("CallForwardRoamingMirrored", global::WinUICommunity.GlyphName.CallForwardRoamingMirrored);
                userType.AddEnumValue("ChromeBackMirrored", global::WinUICommunity.GlyphName.ChromeBackMirrored);
                userType.AddEnumValue("ClearSelectionMirrored", global::WinUICommunity.GlyphName.ClearSelectionMirrored);
                userType.AddEnumValue("ClosePaneMirrored", global::WinUICommunity.GlyphName.ClosePaneMirrored);
                userType.AddEnumValue("ContactInfoMirrored", global::WinUICommunity.GlyphName.ContactInfoMirrored);
                userType.AddEnumValue("DockRightMirrored", global::WinUICommunity.GlyphName.DockRightMirrored);
                userType.AddEnumValue("DockLeftMirrored", global::WinUICommunity.GlyphName.DockLeftMirrored);
                userType.AddEnumValue("ExpandTileMirrored", global::WinUICommunity.GlyphName.ExpandTileMirrored);
                userType.AddEnumValue("GoMirrored", global::WinUICommunity.GlyphName.GoMirrored);
                userType.AddEnumValue("GripperResizeMirrored", global::WinUICommunity.GlyphName.GripperResizeMirrored);
                userType.AddEnumValue("HelpMirrored", global::WinUICommunity.GlyphName.HelpMirrored);
                userType.AddEnumValue("ImportMirrored", global::WinUICommunity.GlyphName.ImportMirrored);
                userType.AddEnumValue("ImportAllMirrored", global::WinUICommunity.GlyphName.ImportAllMirrored);
                userType.AddEnumValue("LeaveChatMirrored", global::WinUICommunity.GlyphName.LeaveChatMirrored);
                userType.AddEnumValue("ListMirrored", global::WinUICommunity.GlyphName.ListMirrored);
                userType.AddEnumValue("MailForwardMirrored", global::WinUICommunity.GlyphName.MailForwardMirrored);
                userType.AddEnumValue("MailReplyMirrored", global::WinUICommunity.GlyphName.MailReplyMirrored);
                userType.AddEnumValue("MailReplyAllMirrored", global::WinUICommunity.GlyphName.MailReplyAllMirrored);
                userType.AddEnumValue("OpenPaneMirrored", global::WinUICommunity.GlyphName.OpenPaneMirrored);
                userType.AddEnumValue("OpenWithMirrored", global::WinUICommunity.GlyphName.OpenWithMirrored);
                userType.AddEnumValue("ParkingLocationMirrored", global::WinUICommunity.GlyphName.ParkingLocationMirrored);
                userType.AddEnumValue("ResizeMouseMediumMirrored", global::WinUICommunity.GlyphName.ResizeMouseMediumMirrored);
                userType.AddEnumValue("ResizeMouseSmallMirrored", global::WinUICommunity.GlyphName.ResizeMouseSmallMirrored);
                userType.AddEnumValue("ResizeMouseTallMirrored", global::WinUICommunity.GlyphName.ResizeMouseTallMirrored);
                userType.AddEnumValue("ResizeTouchNarrowerMirrored", global::WinUICommunity.GlyphName.ResizeTouchNarrowerMirrored);
                userType.AddEnumValue("SendMirrored", global::WinUICommunity.GlyphName.SendMirrored);
                userType.AddEnumValue("SendFillMirrored", global::WinUICommunity.GlyphName.SendFillMirrored);
                userType.AddEnumValue("ShowResultsMirrored", global::WinUICommunity.GlyphName.ShowResultsMirrored);
                userType.AddEnumValue("Media", global::WinUICommunity.GlyphName.Media);
                userType.AddEnumValue("SyncError", global::WinUICommunity.GlyphName.SyncError);
                userType.AddEnumValue("Devices3", global::WinUICommunity.GlyphName.Devices3);
                userType.AddEnumValue("SlowMotionOn", global::WinUICommunity.GlyphName.SlowMotionOn);
                userType.AddEnumValue("Lightbulb", global::WinUICommunity.GlyphName.Lightbulb);
                userType.AddEnumValue("StatusCircle", global::WinUICommunity.GlyphName.StatusCircle);
                userType.AddEnumValue("StatusTriangle", global::WinUICommunity.GlyphName.StatusTriangle);
                userType.AddEnumValue("StatusError", global::WinUICommunity.GlyphName.StatusError);
                userType.AddEnumValue("StatusWarning", global::WinUICommunity.GlyphName.StatusWarning);
                userType.AddEnumValue("Puzzle", global::WinUICommunity.GlyphName.Puzzle);
                userType.AddEnumValue("CalendarSolid", global::WinUICommunity.GlyphName.CalendarSolid);
                userType.AddEnumValue("HomeSolid", global::WinUICommunity.GlyphName.HomeSolid);
                userType.AddEnumValue("ParkingLocationSolid", global::WinUICommunity.GlyphName.ParkingLocationSolid);
                userType.AddEnumValue("ContactSolid", global::WinUICommunity.GlyphName.ContactSolid);
                userType.AddEnumValue("ConstructionSolid", global::WinUICommunity.GlyphName.ConstructionSolid);
                userType.AddEnumValue("AccidentSolid", global::WinUICommunity.GlyphName.AccidentSolid);
                userType.AddEnumValue("Ringer", global::WinUICommunity.GlyphName.Ringer);
                userType.AddEnumValue("PDF", global::WinUICommunity.GlyphName.PDF);
                userType.AddEnumValue("ThoughtBubble", global::WinUICommunity.GlyphName.ThoughtBubble);
                userType.AddEnumValue("HeartBroken", global::WinUICommunity.GlyphName.HeartBroken);
                userType.AddEnumValue("BatteryCharging10", global::WinUICommunity.GlyphName.BatteryCharging10);
                userType.AddEnumValue("BatterySaver9", global::WinUICommunity.GlyphName.BatterySaver9);
                userType.AddEnumValue("BatterySaver10", global::WinUICommunity.GlyphName.BatterySaver10);
                userType.AddEnumValue("CallForwardingMirrored", global::WinUICommunity.GlyphName.CallForwardingMirrored);
                userType.AddEnumValue("MultiSelectMirrored", global::WinUICommunity.GlyphName.MultiSelectMirrored);
                userType.AddEnumValue("Broom", global::WinUICommunity.GlyphName.Broom);
                userType.AddEnumValue("ForwardCall", global::WinUICommunity.GlyphName.ForwardCall);
                userType.AddEnumValue("Trackers", global::WinUICommunity.GlyphName.Trackers);
                userType.AddEnumValue("Market", global::WinUICommunity.GlyphName.Market);
                userType.AddEnumValue("PieSingle", global::WinUICommunity.GlyphName.PieSingle);
                userType.AddEnumValue("StockUp", global::WinUICommunity.GlyphName.StockUp);
                userType.AddEnumValue("StockDown", global::WinUICommunity.GlyphName.StockDown);
                userType.AddEnumValue("Design", global::WinUICommunity.GlyphName.Design);
                userType.AddEnumValue("Website", global::WinUICommunity.GlyphName.Website);
                userType.AddEnumValue("Drop", global::WinUICommunity.GlyphName.Drop);
                userType.AddEnumValue("Radar", global::WinUICommunity.GlyphName.Radar);
                userType.AddEnumValue("BusSolid", global::WinUICommunity.GlyphName.BusSolid);
                userType.AddEnumValue("FerrySolid", global::WinUICommunity.GlyphName.FerrySolid);
                userType.AddEnumValue("StartPointSolid", global::WinUICommunity.GlyphName.StartPointSolid);
                userType.AddEnumValue("StopPointSolid", global::WinUICommunity.GlyphName.StopPointSolid);
                userType.AddEnumValue("EndPointSolid", global::WinUICommunity.GlyphName.EndPointSolid);
                userType.AddEnumValue("AirplaneSolid", global::WinUICommunity.GlyphName.AirplaneSolid);
                userType.AddEnumValue("TrainSolid", global::WinUICommunity.GlyphName.TrainSolid);
                userType.AddEnumValue("WorkSolid", global::WinUICommunity.GlyphName.WorkSolid);
                userType.AddEnumValue("ReminderFill", global::WinUICommunity.GlyphName.ReminderFill);
                userType.AddEnumValue("Reminder", global::WinUICommunity.GlyphName.Reminder);
                userType.AddEnumValue("Heart", global::WinUICommunity.GlyphName.Heart);
                userType.AddEnumValue("HeartFill", global::WinUICommunity.GlyphName.HeartFill);
                userType.AddEnumValue("EthernetError", global::WinUICommunity.GlyphName.EthernetError);
                userType.AddEnumValue("EthernetWarning", global::WinUICommunity.GlyphName.EthernetWarning);
                userType.AddEnumValue("StatusConnecting1", global::WinUICommunity.GlyphName.StatusConnecting1);
                userType.AddEnumValue("StatusConnecting2", global::WinUICommunity.GlyphName.StatusConnecting2);
                userType.AddEnumValue("StatusUnsecure", global::WinUICommunity.GlyphName.StatusUnsecure);
                userType.AddEnumValue("WifiError0", global::WinUICommunity.GlyphName.WifiError0);
                userType.AddEnumValue("WifiError1", global::WinUICommunity.GlyphName.WifiError1);
                userType.AddEnumValue("WifiError2", global::WinUICommunity.GlyphName.WifiError2);
                userType.AddEnumValue("WifiError3", global::WinUICommunity.GlyphName.WifiError3);
                userType.AddEnumValue("WifiError4", global::WinUICommunity.GlyphName.WifiError4);
                userType.AddEnumValue("WifiWarning0", global::WinUICommunity.GlyphName.WifiWarning0);
                userType.AddEnumValue("WifiWarning1", global::WinUICommunity.GlyphName.WifiWarning1);
                userType.AddEnumValue("WifiWarning2", global::WinUICommunity.GlyphName.WifiWarning2);
                userType.AddEnumValue("WifiWarning3", global::WinUICommunity.GlyphName.WifiWarning3);
                userType.AddEnumValue("WifiWarning4", global::WinUICommunity.GlyphName.WifiWarning4);
                userType.AddEnumValue("Devices4", global::WinUICommunity.GlyphName.Devices4);
                userType.AddEnumValue("NUIIris", global::WinUICommunity.GlyphName.NUIIris);
                userType.AddEnumValue("NUIFace", global::WinUICommunity.GlyphName.NUIFace);
                userType.AddEnumValue("GatewayRouter", global::WinUICommunity.GlyphName.GatewayRouter);
                userType.AddEnumValue("EditMirrored", global::WinUICommunity.GlyphName.EditMirrored);
                userType.AddEnumValue("NUIFPStartSlideHand", global::WinUICommunity.GlyphName.NUIFPStartSlideHand);
                userType.AddEnumValue("NUIFPStartSlideAction", global::WinUICommunity.GlyphName.NUIFPStartSlideAction);
                userType.AddEnumValue("NUIFPContinueSlideHand", global::WinUICommunity.GlyphName.NUIFPContinueSlideHand);
                userType.AddEnumValue("NUIFPContinueSlideAction", global::WinUICommunity.GlyphName.NUIFPContinueSlideAction);
                userType.AddEnumValue("NUIFPRollRightHand", global::WinUICommunity.GlyphName.NUIFPRollRightHand);
                userType.AddEnumValue("NUIFPRollRightHandAction", global::WinUICommunity.GlyphName.NUIFPRollRightHandAction);
                userType.AddEnumValue("NUIFPRollLeftHand", global::WinUICommunity.GlyphName.NUIFPRollLeftHand);
                userType.AddEnumValue("NUIFPRollLeftAction", global::WinUICommunity.GlyphName.NUIFPRollLeftAction);
                userType.AddEnumValue("NUIFPPressHand", global::WinUICommunity.GlyphName.NUIFPPressHand);
                userType.AddEnumValue("NUIFPPressAction", global::WinUICommunity.GlyphName.NUIFPPressAction);
                userType.AddEnumValue("NUIFPPressRepeatHand", global::WinUICommunity.GlyphName.NUIFPPressRepeatHand);
                userType.AddEnumValue("NUIFPPressRepeatAction", global::WinUICommunity.GlyphName.NUIFPPressRepeatAction);
                userType.AddEnumValue("StatusErrorFull", global::WinUICommunity.GlyphName.StatusErrorFull);
                userType.AddEnumValue("TaskViewExpanded", global::WinUICommunity.GlyphName.TaskViewExpanded);
                userType.AddEnumValue("Certificate", global::WinUICommunity.GlyphName.Certificate);
                userType.AddEnumValue("BackSpaceQWERTYLg", global::WinUICommunity.GlyphName.BackSpaceQWERTYLg);
                userType.AddEnumValue("ReturnKeyLg", global::WinUICommunity.GlyphName.ReturnKeyLg);
                userType.AddEnumValue("FastForward", global::WinUICommunity.GlyphName.FastForward);
                userType.AddEnumValue("Rewind", global::WinUICommunity.GlyphName.Rewind);
                userType.AddEnumValue("Photo2", global::WinUICommunity.GlyphName.Photo2);
                userType.AddEnumValue("MobBattery0", global::WinUICommunity.GlyphName.MobBattery0);
                userType.AddEnumValue("MobBattery1", global::WinUICommunity.GlyphName.MobBattery1);
                userType.AddEnumValue("MobBattery2", global::WinUICommunity.GlyphName.MobBattery2);
                userType.AddEnumValue("MobBattery3", global::WinUICommunity.GlyphName.MobBattery3);
                userType.AddEnumValue("MobBattery4", global::WinUICommunity.GlyphName.MobBattery4);
                userType.AddEnumValue("MobBattery5", global::WinUICommunity.GlyphName.MobBattery5);
                userType.AddEnumValue("MobBattery6", global::WinUICommunity.GlyphName.MobBattery6);
                userType.AddEnumValue("MobBattery7", global::WinUICommunity.GlyphName.MobBattery7);
                userType.AddEnumValue("MobBattery8", global::WinUICommunity.GlyphName.MobBattery8);
                userType.AddEnumValue("MobBattery9", global::WinUICommunity.GlyphName.MobBattery9);
                userType.AddEnumValue("MobBattery10", global::WinUICommunity.GlyphName.MobBattery10);
                userType.AddEnumValue("MobBatteryCharging0", global::WinUICommunity.GlyphName.MobBatteryCharging0);
                userType.AddEnumValue("MobBatteryCharging1", global::WinUICommunity.GlyphName.MobBatteryCharging1);
                userType.AddEnumValue("MobBatteryCharging2", global::WinUICommunity.GlyphName.MobBatteryCharging2);
                userType.AddEnumValue("MobBatteryCharging3", global::WinUICommunity.GlyphName.MobBatteryCharging3);
                userType.AddEnumValue("MobBatteryCharging4", global::WinUICommunity.GlyphName.MobBatteryCharging4);
                userType.AddEnumValue("MobBatteryCharging5", global::WinUICommunity.GlyphName.MobBatteryCharging5);
                userType.AddEnumValue("MobBatteryCharging6", global::WinUICommunity.GlyphName.MobBatteryCharging6);
                userType.AddEnumValue("MobBatteryCharging7", global::WinUICommunity.GlyphName.MobBatteryCharging7);
                userType.AddEnumValue("MobBatteryCharging8", global::WinUICommunity.GlyphName.MobBatteryCharging8);
                userType.AddEnumValue("MobBatteryCharging9", global::WinUICommunity.GlyphName.MobBatteryCharging9);
                userType.AddEnumValue("MobBatteryCharging10", global::WinUICommunity.GlyphName.MobBatteryCharging10);
                userType.AddEnumValue("MobBatterySaver0", global::WinUICommunity.GlyphName.MobBatterySaver0);
                userType.AddEnumValue("MobBatterySaver1", global::WinUICommunity.GlyphName.MobBatterySaver1);
                userType.AddEnumValue("MobBatterySaver2", global::WinUICommunity.GlyphName.MobBatterySaver2);
                userType.AddEnumValue("MobBatterySaver3", global::WinUICommunity.GlyphName.MobBatterySaver3);
                userType.AddEnumValue("MobBatterySaver4", global::WinUICommunity.GlyphName.MobBatterySaver4);
                userType.AddEnumValue("MobBatterySaver5", global::WinUICommunity.GlyphName.MobBatterySaver5);
                userType.AddEnumValue("MobBatterySaver6", global::WinUICommunity.GlyphName.MobBatterySaver6);
                userType.AddEnumValue("MobBatterySaver7", global::WinUICommunity.GlyphName.MobBatterySaver7);
                userType.AddEnumValue("MobBatterySaver8", global::WinUICommunity.GlyphName.MobBatterySaver8);
                userType.AddEnumValue("MobBatterySaver9", global::WinUICommunity.GlyphName.MobBatterySaver9);
                userType.AddEnumValue("MobBatterySaver10", global::WinUICommunity.GlyphName.MobBatterySaver10);
                userType.AddEnumValue("DictionaryCloud", global::WinUICommunity.GlyphName.DictionaryCloud);
                userType.AddEnumValue("ResetDrive", global::WinUICommunity.GlyphName.ResetDrive);
                userType.AddEnumValue("VolumeBars", global::WinUICommunity.GlyphName.VolumeBars);
                userType.AddEnumValue("Project", global::WinUICommunity.GlyphName.Project);
                userType.AddEnumValue("AdjustHologram", global::WinUICommunity.GlyphName.AdjustHologram);
                userType.AddEnumValue("CloudDownload", global::WinUICommunity.GlyphName.CloudDownload);
                userType.AddEnumValue("MobWifiCallBars", global::WinUICommunity.GlyphName.MobWifiCallBars);
                userType.AddEnumValue("MobWifiCall0", global::WinUICommunity.GlyphName.MobWifiCall0);
                userType.AddEnumValue("MobWifiCall1", global::WinUICommunity.GlyphName.MobWifiCall1);
                userType.AddEnumValue("MobWifiCall2", global::WinUICommunity.GlyphName.MobWifiCall2);
                userType.AddEnumValue("MobWifiCall3", global::WinUICommunity.GlyphName.MobWifiCall3);
                userType.AddEnumValue("MobWifiCall4", global::WinUICommunity.GlyphName.MobWifiCall4);
                userType.AddEnumValue("Family", global::WinUICommunity.GlyphName.Family);
                userType.AddEnumValue("LockFeedback", global::WinUICommunity.GlyphName.LockFeedback);
                userType.AddEnumValue("DeviceDiscovery", global::WinUICommunity.GlyphName.DeviceDiscovery);
                userType.AddEnumValue("WindDirection", global::WinUICommunity.GlyphName.WindDirection);
                userType.AddEnumValue("RightArrowKeyTime0", global::WinUICommunity.GlyphName.RightArrowKeyTime0);
                userType.AddEnumValue("Bug", global::WinUICommunity.GlyphName.Bug);
                userType.AddEnumValue("TabletMode", global::WinUICommunity.GlyphName.TabletMode);
                userType.AddEnumValue("StatusCircleLeft", global::WinUICommunity.GlyphName.StatusCircleLeft);
                userType.AddEnumValue("StatusTriangleLeft", global::WinUICommunity.GlyphName.StatusTriangleLeft);
                userType.AddEnumValue("StatusErrorLeft", global::WinUICommunity.GlyphName.StatusErrorLeft);
                userType.AddEnumValue("StatusWarningLeft", global::WinUICommunity.GlyphName.StatusWarningLeft);
                userType.AddEnumValue("MobBatteryUnknown", global::WinUICommunity.GlyphName.MobBatteryUnknown);
                userType.AddEnumValue("NetworkTower", global::WinUICommunity.GlyphName.NetworkTower);
                userType.AddEnumValue("CityNext", global::WinUICommunity.GlyphName.CityNext);
                userType.AddEnumValue("CityNext2", global::WinUICommunity.GlyphName.CityNext2);
                userType.AddEnumValue("Courthouse", global::WinUICommunity.GlyphName.Courthouse);
                userType.AddEnumValue("Groceries", global::WinUICommunity.GlyphName.Groceries);
                userType.AddEnumValue("Sustainable", global::WinUICommunity.GlyphName.Sustainable);
                userType.AddEnumValue("BuildingEnergy", global::WinUICommunity.GlyphName.BuildingEnergy);
                userType.AddEnumValue("ToggleFilled", global::WinUICommunity.GlyphName.ToggleFilled);
                userType.AddEnumValue("ToggleBorder", global::WinUICommunity.GlyphName.ToggleBorder);
                userType.AddEnumValue("SliderThumb", global::WinUICommunity.GlyphName.SliderThumb);
                userType.AddEnumValue("ToggleThumb", global::WinUICommunity.GlyphName.ToggleThumb);
                userType.AddEnumValue("MiracastLogoSmall", global::WinUICommunity.GlyphName.MiracastLogoSmall);
                userType.AddEnumValue("MiracastLogoLarge", global::WinUICommunity.GlyphName.MiracastLogoLarge);
                userType.AddEnumValue("PLAP", global::WinUICommunity.GlyphName.PLAP);
                userType.AddEnumValue("Badge", global::WinUICommunity.GlyphName.Badge);
                userType.AddEnumValue("SignalRoaming", global::WinUICommunity.GlyphName.SignalRoaming);
                userType.AddEnumValue("MobileLocked", global::WinUICommunity.GlyphName.MobileLocked);
                userType.AddEnumValue("InsiderHubApp", global::WinUICommunity.GlyphName.InsiderHubApp);
                userType.AddEnumValue("PersonalFolder", global::WinUICommunity.GlyphName.PersonalFolder);
                userType.AddEnumValue("HomeGroup", global::WinUICommunity.GlyphName.HomeGroup);
                userType.AddEnumValue("MyNetwork", global::WinUICommunity.GlyphName.MyNetwork);
                userType.AddEnumValue("KeyboardFull", global::WinUICommunity.GlyphName.KeyboardFull);
                userType.AddEnumValue("Cafe", global::WinUICommunity.GlyphName.Cafe);
                userType.AddEnumValue("MobSignal1", global::WinUICommunity.GlyphName.MobSignal1);
                userType.AddEnumValue("MobSignal2", global::WinUICommunity.GlyphName.MobSignal2);
                userType.AddEnumValue("MobSignal3", global::WinUICommunity.GlyphName.MobSignal3);
                userType.AddEnumValue("MobSignal4", global::WinUICommunity.GlyphName.MobSignal4);
                userType.AddEnumValue("MobSignal5", global::WinUICommunity.GlyphName.MobSignal5);
                userType.AddEnumValue("MobWifi1", global::WinUICommunity.GlyphName.MobWifi1);
                userType.AddEnumValue("MobWifi2", global::WinUICommunity.GlyphName.MobWifi2);
                userType.AddEnumValue("MobWifi3", global::WinUICommunity.GlyphName.MobWifi3);
                userType.AddEnumValue("MobWifi4", global::WinUICommunity.GlyphName.MobWifi4);
                userType.AddEnumValue("MobAirplane", global::WinUICommunity.GlyphName.MobAirplane);
                userType.AddEnumValue("MobBluetooth", global::WinUICommunity.GlyphName.MobBluetooth);
                userType.AddEnumValue("MobActionCenter", global::WinUICommunity.GlyphName.MobActionCenter);
                userType.AddEnumValue("MobLocation", global::WinUICommunity.GlyphName.MobLocation);
                userType.AddEnumValue("MobWifiHotspot", global::WinUICommunity.GlyphName.MobWifiHotspot);
                userType.AddEnumValue("LanguageJpn", global::WinUICommunity.GlyphName.LanguageJpn);
                userType.AddEnumValue("MobQuietHours", global::WinUICommunity.GlyphName.MobQuietHours);
                userType.AddEnumValue("MobDrivingMode", global::WinUICommunity.GlyphName.MobDrivingMode);
                userType.AddEnumValue("SpeedOff", global::WinUICommunity.GlyphName.SpeedOff);
                userType.AddEnumValue("SpeedMedium", global::WinUICommunity.GlyphName.SpeedMedium);
                userType.AddEnumValue("SpeedHigh", global::WinUICommunity.GlyphName.SpeedHigh);
                userType.AddEnumValue("ThisPC", global::WinUICommunity.GlyphName.ThisPC);
                userType.AddEnumValue("MusicNote", global::WinUICommunity.GlyphName.MusicNote);
                userType.AddEnumValue("FileExplorer", global::WinUICommunity.GlyphName.FileExplorer);
                userType.AddEnumValue("FileExplorerApp", global::WinUICommunity.GlyphName.FileExplorerApp);
                userType.AddEnumValue("LeftArrowKeyTime0", global::WinUICommunity.GlyphName.LeftArrowKeyTime0);
                userType.AddEnumValue("MicOff", global::WinUICommunity.GlyphName.MicOff);
                userType.AddEnumValue("MicSleep", global::WinUICommunity.GlyphName.MicSleep);
                userType.AddEnumValue("MicError", global::WinUICommunity.GlyphName.MicError);
                userType.AddEnumValue("PlaybackRate1x", global::WinUICommunity.GlyphName.PlaybackRate1x);
                userType.AddEnumValue("PlaybackRateOther", global::WinUICommunity.GlyphName.PlaybackRateOther);
                userType.AddEnumValue("CashDrawer", global::WinUICommunity.GlyphName.CashDrawer);
                userType.AddEnumValue("BarcodeScanner", global::WinUICommunity.GlyphName.BarcodeScanner);
                userType.AddEnumValue("ReceiptPrinter", global::WinUICommunity.GlyphName.ReceiptPrinter);
                userType.AddEnumValue("MagStripeReader", global::WinUICommunity.GlyphName.MagStripeReader);
                userType.AddEnumValue("CompletedSolid", global::WinUICommunity.GlyphName.CompletedSolid);
                userType.AddEnumValue("CompanionApp", global::WinUICommunity.GlyphName.CompanionApp);
                userType.AddEnumValue("Favicon2", global::WinUICommunity.GlyphName.Favicon2);
                userType.AddEnumValue("SwipeRevealArt", global::WinUICommunity.GlyphName.SwipeRevealArt);
                userType.AddEnumValue("MicOn", global::WinUICommunity.GlyphName.MicOn);
                userType.AddEnumValue("MicClipping", global::WinUICommunity.GlyphName.MicClipping);
                userType.AddEnumValue("TabletSelected", global::WinUICommunity.GlyphName.TabletSelected);
                userType.AddEnumValue("MobileSelected", global::WinUICommunity.GlyphName.MobileSelected);
                userType.AddEnumValue("LaptopSelected", global::WinUICommunity.GlyphName.LaptopSelected);
                userType.AddEnumValue("TVMonitorSelected", global::WinUICommunity.GlyphName.TVMonitorSelected);
                userType.AddEnumValue("DeveloperTools", global::WinUICommunity.GlyphName.DeveloperTools);
                userType.AddEnumValue("MobCallForwarding", global::WinUICommunity.GlyphName.MobCallForwarding);
                userType.AddEnumValue("MobCallForwardingMirrored", global::WinUICommunity.GlyphName.MobCallForwardingMirrored);
                userType.AddEnumValue("BodyCam", global::WinUICommunity.GlyphName.BodyCam);
                userType.AddEnumValue("PoliceCar", global::WinUICommunity.GlyphName.PoliceCar);
                userType.AddEnumValue("Draw", global::WinUICommunity.GlyphName.Draw);
                userType.AddEnumValue("DrawSolid", global::WinUICommunity.GlyphName.DrawSolid);
                userType.AddEnumValue("LowerBrightness", global::WinUICommunity.GlyphName.LowerBrightness);
                userType.AddEnumValue("ScrollUpDown", global::WinUICommunity.GlyphName.ScrollUpDown);
                userType.AddEnumValue("DateTime", global::WinUICommunity.GlyphName.DateTime);
                userType.AddEnumValue("HoloLens", global::WinUICommunity.GlyphName.HoloLens);
                userType.AddEnumValue("Tiles", global::WinUICommunity.GlyphName.Tiles);
                userType.AddEnumValue("PartyLeader", global::WinUICommunity.GlyphName.PartyLeader);
                userType.AddEnumValue("AppIconDefault", global::WinUICommunity.GlyphName.AppIconDefault);
                userType.AddEnumValue("Calories", global::WinUICommunity.GlyphName.Calories);
                userType.AddEnumValue("POI", global::WinUICommunity.GlyphName.POI);
                userType.AddEnumValue("BandBattery0", global::WinUICommunity.GlyphName.BandBattery0);
                userType.AddEnumValue("BandBattery1", global::WinUICommunity.GlyphName.BandBattery1);
                userType.AddEnumValue("BandBattery2", global::WinUICommunity.GlyphName.BandBattery2);
                userType.AddEnumValue("BandBattery3", global::WinUICommunity.GlyphName.BandBattery3);
                userType.AddEnumValue("BandBattery4", global::WinUICommunity.GlyphName.BandBattery4);
                userType.AddEnumValue("BandBattery5", global::WinUICommunity.GlyphName.BandBattery5);
                userType.AddEnumValue("BandBattery6", global::WinUICommunity.GlyphName.BandBattery6);
                userType.AddEnumValue("AddSurfaceHub", global::WinUICommunity.GlyphName.AddSurfaceHub);
                userType.AddEnumValue("DevUpdate", global::WinUICommunity.GlyphName.DevUpdate);
                userType.AddEnumValue("Unit", global::WinUICommunity.GlyphName.Unit);
                userType.AddEnumValue("AddTo", global::WinUICommunity.GlyphName.AddTo);
                userType.AddEnumValue("RemoveFrom", global::WinUICommunity.GlyphName.RemoveFrom);
                userType.AddEnumValue("RadioBtnOff", global::WinUICommunity.GlyphName.RadioBtnOff);
                userType.AddEnumValue("RadioBtnOn", global::WinUICommunity.GlyphName.RadioBtnOn);
                userType.AddEnumValue("RadioBullet2", global::WinUICommunity.GlyphName.RadioBullet2);
                userType.AddEnumValue("ExploreContent", global::WinUICommunity.GlyphName.ExploreContent);
                userType.AddEnumValue("Blocked2", global::WinUICommunity.GlyphName.Blocked2);
                userType.AddEnumValue("ScrollMode", global::WinUICommunity.GlyphName.ScrollMode);
                userType.AddEnumValue("ZoomMode", global::WinUICommunity.GlyphName.ZoomMode);
                userType.AddEnumValue("PanMode", global::WinUICommunity.GlyphName.PanMode);
                userType.AddEnumValue("WiredUSB", global::WinUICommunity.GlyphName.WiredUSB);
                userType.AddEnumValue("WirelessUSB", global::WinUICommunity.GlyphName.WirelessUSB);
                userType.AddEnumValue("USBSafeConnect", global::WinUICommunity.GlyphName.USBSafeConnect);
                userType.AddEnumValue("ActionCenterNotificationMirrored", global::WinUICommunity.GlyphName.ActionCenterNotificationMirrored);
                userType.AddEnumValue("ActionCenterMirrored", global::WinUICommunity.GlyphName.ActionCenterMirrored);
                userType.AddEnumValue("SubscriptionAdd", global::WinUICommunity.GlyphName.SubscriptionAdd);
                userType.AddEnumValue("ResetDevice", global::WinUICommunity.GlyphName.ResetDevice);
                userType.AddEnumValue("SubscriptionAddMirrored", global::WinUICommunity.GlyphName.SubscriptionAddMirrored);
                userType.AddEnumValue("QRCode", global::WinUICommunity.GlyphName.QRCode);
                userType.AddEnumValue("Feedback", global::WinUICommunity.GlyphName.Feedback);
                userType.AddEnumValue("Hide", global::WinUICommunity.GlyphName.Hide);
                userType.AddEnumValue("Subtitles", global::WinUICommunity.GlyphName.Subtitles);
                userType.AddEnumValue("SubtitlesAudio", global::WinUICommunity.GlyphName.SubtitlesAudio);
                userType.AddEnumValue("OpenFolderHorizontal", global::WinUICommunity.GlyphName.OpenFolderHorizontal);
                userType.AddEnumValue("CalendarMirrored", global::WinUICommunity.GlyphName.CalendarMirrored);
                userType.AddEnumValue("MobeSIM", global::WinUICommunity.GlyphName.MobeSIM);
                userType.AddEnumValue("MobeSIMNoProfile", global::WinUICommunity.GlyphName.MobeSIMNoProfile);
                userType.AddEnumValue("MobeSIMLocked", global::WinUICommunity.GlyphName.MobeSIMLocked);
                userType.AddEnumValue("MobeSIMBusy", global::WinUICommunity.GlyphName.MobeSIMBusy);
                userType.AddEnumValue("SignalError", global::WinUICommunity.GlyphName.SignalError);
                userType.AddEnumValue("StreamingEnterprise", global::WinUICommunity.GlyphName.StreamingEnterprise);
                userType.AddEnumValue("Headphone0", global::WinUICommunity.GlyphName.Headphone0);
                userType.AddEnumValue("Headphone1", global::WinUICommunity.GlyphName.Headphone1);
                userType.AddEnumValue("Headphone2", global::WinUICommunity.GlyphName.Headphone2);
                userType.AddEnumValue("Headphone3", global::WinUICommunity.GlyphName.Headphone3);
                userType.AddEnumValue("Apps", global::WinUICommunity.GlyphName.Apps);
                userType.AddEnumValue("KeyboardBrightness", global::WinUICommunity.GlyphName.KeyboardBrightness);
                userType.AddEnumValue("KeyboardLowerBrightness", global::WinUICommunity.GlyphName.KeyboardLowerBrightness);
                userType.AddEnumValue("SkipBack10", global::WinUICommunity.GlyphName.SkipBack10);
                userType.AddEnumValue("SkipForward30", global::WinUICommunity.GlyphName.SkipForward30);
                userType.AddEnumValue("TreeFolderFolder", global::WinUICommunity.GlyphName.TreeFolderFolder);
                userType.AddEnumValue("TreeFolderFolderFill", global::WinUICommunity.GlyphName.TreeFolderFolderFill);
                userType.AddEnumValue("TreeFolderFolderOpen", global::WinUICommunity.GlyphName.TreeFolderFolderOpen);
                userType.AddEnumValue("TreeFolderFolderOpenFill", global::WinUICommunity.GlyphName.TreeFolderFolderOpenFill);
                userType.AddEnumValue("MultimediaDMP", global::WinUICommunity.GlyphName.MultimediaDMP);
                userType.AddEnumValue("KeyboardOneHanded", global::WinUICommunity.GlyphName.KeyboardOneHanded);
                userType.AddEnumValue("Narrator", global::WinUICommunity.GlyphName.Narrator);
                userType.AddEnumValue("EmojiTabPeople", global::WinUICommunity.GlyphName.EmojiTabPeople);
                userType.AddEnumValue("EmojiTabSmilesAnimals", global::WinUICommunity.GlyphName.EmojiTabSmilesAnimals);
                userType.AddEnumValue("EmojiTabCelebrationObjects", global::WinUICommunity.GlyphName.EmojiTabCelebrationObjects);
                userType.AddEnumValue("EmojiTabFoodPlants", global::WinUICommunity.GlyphName.EmojiTabFoodPlants);
                userType.AddEnumValue("EmojiTabTransitPlaces", global::WinUICommunity.GlyphName.EmojiTabTransitPlaces);
                userType.AddEnumValue("EmojiTabSymbols", global::WinUICommunity.GlyphName.EmojiTabSymbols);
                userType.AddEnumValue("EmojiTabTextSmiles", global::WinUICommunity.GlyphName.EmojiTabTextSmiles);
                userType.AddEnumValue("EmojiTabFavorites", global::WinUICommunity.GlyphName.EmojiTabFavorites);
                userType.AddEnumValue("EmojiSwatch", global::WinUICommunity.GlyphName.EmojiSwatch);
                userType.AddEnumValue("ConnectApp", global::WinUICommunity.GlyphName.ConnectApp);
                userType.AddEnumValue("CompanionDeviceFramework", global::WinUICommunity.GlyphName.CompanionDeviceFramework);
                userType.AddEnumValue("Ruler", global::WinUICommunity.GlyphName.Ruler);
                userType.AddEnumValue("FingerInking", global::WinUICommunity.GlyphName.FingerInking);
                userType.AddEnumValue("StrokeErase", global::WinUICommunity.GlyphName.StrokeErase);
                userType.AddEnumValue("PointErase", global::WinUICommunity.GlyphName.PointErase);
                userType.AddEnumValue("ClearAllInk", global::WinUICommunity.GlyphName.ClearAllInk);
                userType.AddEnumValue("Pencil", global::WinUICommunity.GlyphName.Pencil);
                userType.AddEnumValue("Marker", global::WinUICommunity.GlyphName.Marker);
                userType.AddEnumValue("InkingCaret", global::WinUICommunity.GlyphName.InkingCaret);
                userType.AddEnumValue("InkingColorOutline", global::WinUICommunity.GlyphName.InkingColorOutline);
                userType.AddEnumValue("InkingColorFill", global::WinUICommunity.GlyphName.InkingColorFill);
                userType.AddEnumValue("HardDrive", global::WinUICommunity.GlyphName.HardDrive);
                userType.AddEnumValue("NetworkAdapter", global::WinUICommunity.GlyphName.NetworkAdapter);
                userType.AddEnumValue("Touchscreen", global::WinUICommunity.GlyphName.Touchscreen);
                userType.AddEnumValue("NetworkPrinter", global::WinUICommunity.GlyphName.NetworkPrinter);
                userType.AddEnumValue("CloudPrinter", global::WinUICommunity.GlyphName.CloudPrinter);
                userType.AddEnumValue("KeyboardShortcut", global::WinUICommunity.GlyphName.KeyboardShortcut);
                userType.AddEnumValue("BrushSize", global::WinUICommunity.GlyphName.BrushSize);
                userType.AddEnumValue("NarratorForward", global::WinUICommunity.GlyphName.NarratorForward);
                userType.AddEnumValue("NarratorForwardMirrored", global::WinUICommunity.GlyphName.NarratorForwardMirrored);
                userType.AddEnumValue("SyncBadge12", global::WinUICommunity.GlyphName.SyncBadge12);
                userType.AddEnumValue("RingerBadge12", global::WinUICommunity.GlyphName.RingerBadge12);
                userType.AddEnumValue("AsteriskBadge12", global::WinUICommunity.GlyphName.AsteriskBadge12);
                userType.AddEnumValue("ErrorBadge12", global::WinUICommunity.GlyphName.ErrorBadge12);
                userType.AddEnumValue("CircleRingBadge12", global::WinUICommunity.GlyphName.CircleRingBadge12);
                userType.AddEnumValue("CircleFillBadge12", global::WinUICommunity.GlyphName.CircleFillBadge12);
                userType.AddEnumValue("ImportantBadge12", global::WinUICommunity.GlyphName.ImportantBadge12);
                userType.AddEnumValue("MailBadge12", global::WinUICommunity.GlyphName.MailBadge12);
                userType.AddEnumValue("PauseBadge12", global::WinUICommunity.GlyphName.PauseBadge12);
                userType.AddEnumValue("PlayBadge12", global::WinUICommunity.GlyphName.PlayBadge12);
                userType.AddEnumValue("PenWorkspace", global::WinUICommunity.GlyphName.PenWorkspace);
                userType.AddEnumValue("CaretLeft8", global::WinUICommunity.GlyphName.CaretLeft8);
                userType.AddEnumValue("CaretRight8", global::WinUICommunity.GlyphName.CaretRight8);
                userType.AddEnumValue("CaretUp8", global::WinUICommunity.GlyphName.CaretUp8);
                userType.AddEnumValue("CaretDown8", global::WinUICommunity.GlyphName.CaretDown8);
                userType.AddEnumValue("CaretLeftSolid8", global::WinUICommunity.GlyphName.CaretLeftSolid8);
                userType.AddEnumValue("CaretRightSolid8", global::WinUICommunity.GlyphName.CaretRightSolid8);
                userType.AddEnumValue("CaretUpSolid8", global::WinUICommunity.GlyphName.CaretUpSolid8);
                userType.AddEnumValue("CaretDownSolid8", global::WinUICommunity.GlyphName.CaretDownSolid8);
                userType.AddEnumValue("Strikethrough", global::WinUICommunity.GlyphName.Strikethrough);
                userType.AddEnumValue("Export", global::WinUICommunity.GlyphName.Export);
                userType.AddEnumValue("ExportMirrored", global::WinUICommunity.GlyphName.ExportMirrored);
                userType.AddEnumValue("ButtonMenu", global::WinUICommunity.GlyphName.ButtonMenu);
                userType.AddEnumValue("CloudSearch", global::WinUICommunity.GlyphName.CloudSearch);
                userType.AddEnumValue("PinyinIMELogo", global::WinUICommunity.GlyphName.PinyinIMELogo);
                userType.AddEnumValue("CalligraphyPen", global::WinUICommunity.GlyphName.CalligraphyPen);
                userType.AddEnumValue("ReplyMirrored", global::WinUICommunity.GlyphName.ReplyMirrored);
                userType.AddEnumValue("LockscreenDesktop", global::WinUICommunity.GlyphName.LockscreenDesktop);
                userType.AddEnumValue("TaskViewSettings", global::WinUICommunity.GlyphName.TaskViewSettings);
                userType.AddEnumValue("MiniExpand2Mirrored", global::WinUICommunity.GlyphName.MiniExpand2Mirrored);
                userType.AddEnumValue("MiniContract2Mirrored", global::WinUICommunity.GlyphName.MiniContract2Mirrored);
                userType.AddEnumValue("Play36", global::WinUICommunity.GlyphName.Play36);
                userType.AddEnumValue("PenPalette", global::WinUICommunity.GlyphName.PenPalette);
                userType.AddEnumValue("GuestUser", global::WinUICommunity.GlyphName.GuestUser);
                userType.AddEnumValue("SettingsBattery", global::WinUICommunity.GlyphName.SettingsBattery);
                userType.AddEnumValue("TaskbarPhone", global::WinUICommunity.GlyphName.TaskbarPhone);
                userType.AddEnumValue("LockScreenGlance", global::WinUICommunity.GlyphName.LockScreenGlance);
                userType.AddEnumValue("GenericScan", global::WinUICommunity.GlyphName.GenericScan);
                userType.AddEnumValue("ImageExport", global::WinUICommunity.GlyphName.ImageExport);
                userType.AddEnumValue("WifiEthernet", global::WinUICommunity.GlyphName.WifiEthernet);
                userType.AddEnumValue("ActionCenterQuiet", global::WinUICommunity.GlyphName.ActionCenterQuiet);
                userType.AddEnumValue("ActionCenterQuietNotification", global::WinUICommunity.GlyphName.ActionCenterQuietNotification);
                userType.AddEnumValue("TrackersMirrored", global::WinUICommunity.GlyphName.TrackersMirrored);
                userType.AddEnumValue("DateTimeMirrored", global::WinUICommunity.GlyphName.DateTimeMirrored);
                userType.AddEnumValue("Wheel", global::WinUICommunity.GlyphName.Wheel);
                userType.AddEnumValue("VirtualMachineGroup", global::WinUICommunity.GlyphName.VirtualMachineGroup);
                userType.AddEnumValue("ButtonView2", global::WinUICommunity.GlyphName.ButtonView2);
                userType.AddEnumValue("PenWorkspaceMirrored", global::WinUICommunity.GlyphName.PenWorkspaceMirrored);
                userType.AddEnumValue("PenPaletteMirrored", global::WinUICommunity.GlyphName.PenPaletteMirrored);
                userType.AddEnumValue("StrokeEraseMirrored", global::WinUICommunity.GlyphName.StrokeEraseMirrored);
                userType.AddEnumValue("PointEraseMirrored", global::WinUICommunity.GlyphName.PointEraseMirrored);
                userType.AddEnumValue("ClearAllInkMirrored", global::WinUICommunity.GlyphName.ClearAllInkMirrored);
                userType.AddEnumValue("BackgroundToggle", global::WinUICommunity.GlyphName.BackgroundToggle);
                userType.AddEnumValue("Marquee", global::WinUICommunity.GlyphName.Marquee);
                userType.AddEnumValue("ChromeCloseContrast", global::WinUICommunity.GlyphName.ChromeCloseContrast);
                userType.AddEnumValue("ChromeMinimizeContrast", global::WinUICommunity.GlyphName.ChromeMinimizeContrast);
                userType.AddEnumValue("ChromeMaximizeContrast", global::WinUICommunity.GlyphName.ChromeMaximizeContrast);
                userType.AddEnumValue("ChromeRestoreContrast", global::WinUICommunity.GlyphName.ChromeRestoreContrast);
                userType.AddEnumValue("TrafficLight", global::WinUICommunity.GlyphName.TrafficLight);
                userType.AddEnumValue("Replay", global::WinUICommunity.GlyphName.Replay);
                userType.AddEnumValue("Eyedropper", global::WinUICommunity.GlyphName.Eyedropper);
                userType.AddEnumValue("LineDisplay", global::WinUICommunity.GlyphName.LineDisplay);
                userType.AddEnumValue("PINPad", global::WinUICommunity.GlyphName.PINPad);
                userType.AddEnumValue("SignatureCapture", global::WinUICommunity.GlyphName.SignatureCapture);
                userType.AddEnumValue("ChipCardCreditCardReader", global::WinUICommunity.GlyphName.ChipCardCreditCardReader);
                userType.AddEnumValue("MarketDown", global::WinUICommunity.GlyphName.MarketDown);
                userType.AddEnumValue("PlayerSettings", global::WinUICommunity.GlyphName.PlayerSettings);
                userType.AddEnumValue("LandscapeOrientation", global::WinUICommunity.GlyphName.LandscapeOrientation);
                userType.AddEnumValue("Flow", global::WinUICommunity.GlyphName.Flow);
                userType.AddEnumValue("Touchpad", global::WinUICommunity.GlyphName.Touchpad);
                userType.AddEnumValue("Speech", global::WinUICommunity.GlyphName.Speech);
                userType.AddEnumValue("KnowledgeArticle", global::WinUICommunity.GlyphName.KnowledgeArticle);
                userType.AddEnumValue("Relationship", global::WinUICommunity.GlyphName.Relationship);
                userType.AddEnumValue("ZipFolder", global::WinUICommunity.GlyphName.ZipFolder);
                userType.AddEnumValue("DefaultAPN", global::WinUICommunity.GlyphName.DefaultAPN);
                userType.AddEnumValue("UserAPN", global::WinUICommunity.GlyphName.UserAPN);
                userType.AddEnumValue("DoublePinyin", global::WinUICommunity.GlyphName.DoublePinyin);
                userType.AddEnumValue("BlueLight", global::WinUICommunity.GlyphName.BlueLight);
                userType.AddEnumValue("CaretSolidLeft", global::WinUICommunity.GlyphName.CaretSolidLeft);
                userType.AddEnumValue("CaretSolidDown", global::WinUICommunity.GlyphName.CaretSolidDown);
                userType.AddEnumValue("CaretSolidRight", global::WinUICommunity.GlyphName.CaretSolidRight);
                userType.AddEnumValue("CaretSolidUp", global::WinUICommunity.GlyphName.CaretSolidUp);
                userType.AddEnumValue("ButtonA", global::WinUICommunity.GlyphName.ButtonA);
                userType.AddEnumValue("ButtonB", global::WinUICommunity.GlyphName.ButtonB);
                userType.AddEnumValue("ButtonY", global::WinUICommunity.GlyphName.ButtonY);
                userType.AddEnumValue("ButtonX", global::WinUICommunity.GlyphName.ButtonX);
                userType.AddEnumValue("ArrowUp8", global::WinUICommunity.GlyphName.ArrowUp8);
                userType.AddEnumValue("ArrowDown8", global::WinUICommunity.GlyphName.ArrowDown8);
                userType.AddEnumValue("ArrowRight8", global::WinUICommunity.GlyphName.ArrowRight8);
                userType.AddEnumValue("ArrowLeft8", global::WinUICommunity.GlyphName.ArrowLeft8);
                userType.AddEnumValue("QuarentinedItems", global::WinUICommunity.GlyphName.QuarentinedItems);
                userType.AddEnumValue("QuarentinedItemsMirrored", global::WinUICommunity.GlyphName.QuarentinedItemsMirrored);
                userType.AddEnumValue("Protractor", global::WinUICommunity.GlyphName.Protractor);
                userType.AddEnumValue("ChecklistMirrored", global::WinUICommunity.GlyphName.ChecklistMirrored);
                userType.AddEnumValue("StatusCircle7", global::WinUICommunity.GlyphName.StatusCircle7);
                userType.AddEnumValue("StatusCheckmark7", global::WinUICommunity.GlyphName.StatusCheckmark7);
                userType.AddEnumValue("StatusErrorCircle7", global::WinUICommunity.GlyphName.StatusErrorCircle7);
                userType.AddEnumValue("Connected", global::WinUICommunity.GlyphName.Connected);
                userType.AddEnumValue("PencilFill", global::WinUICommunity.GlyphName.PencilFill);
                userType.AddEnumValue("CalligraphyFill", global::WinUICommunity.GlyphName.CalligraphyFill);
                userType.AddEnumValue("QuarterStarLeft", global::WinUICommunity.GlyphName.QuarterStarLeft);
                userType.AddEnumValue("QuarterStarRight", global::WinUICommunity.GlyphName.QuarterStarRight);
                userType.AddEnumValue("ThreeQuarterStarLeft", global::WinUICommunity.GlyphName.ThreeQuarterStarLeft);
                userType.AddEnumValue("ThreeQuarterStarRight", global::WinUICommunity.GlyphName.ThreeQuarterStarRight);
                userType.AddEnumValue("QuietHoursBadge12", global::WinUICommunity.GlyphName.QuietHoursBadge12);
                userType.AddEnumValue("BackMirrored", global::WinUICommunity.GlyphName.BackMirrored);
                userType.AddEnumValue("ForwardMirrored", global::WinUICommunity.GlyphName.ForwardMirrored);
                userType.AddEnumValue("ChromeBackContrast", global::WinUICommunity.GlyphName.ChromeBackContrast);
                userType.AddEnumValue("ChromeBackContrastMirrored", global::WinUICommunity.GlyphName.ChromeBackContrastMirrored);
                userType.AddEnumValue("ChromeBackToWindowContrast", global::WinUICommunity.GlyphName.ChromeBackToWindowContrast);
                userType.AddEnumValue("ChromeFullScreenContrast", global::WinUICommunity.GlyphName.ChromeFullScreenContrast);
                userType.AddEnumValue("GridView", global::WinUICommunity.GlyphName.GridView);
                userType.AddEnumValue("ClipboardList", global::WinUICommunity.GlyphName.ClipboardList);
                userType.AddEnumValue("ClipboardListMirrored", global::WinUICommunity.GlyphName.ClipboardListMirrored);
                userType.AddEnumValue("OutlineQuarterStarLeft", global::WinUICommunity.GlyphName.OutlineQuarterStarLeft);
                userType.AddEnumValue("OutlineQuarterStarRight", global::WinUICommunity.GlyphName.OutlineQuarterStarRight);
                userType.AddEnumValue("OutlineHalfStarLeft", global::WinUICommunity.GlyphName.OutlineHalfStarLeft);
                userType.AddEnumValue("OutlineHalfStarRight", global::WinUICommunity.GlyphName.OutlineHalfStarRight);
                userType.AddEnumValue("OutlineThreeQuarterStarLeft", global::WinUICommunity.GlyphName.OutlineThreeQuarterStarLeft);
                userType.AddEnumValue("OutlineThreeQuarterStarRight", global::WinUICommunity.GlyphName.OutlineThreeQuarterStarRight);
                userType.AddEnumValue("SpatialVolume0", global::WinUICommunity.GlyphName.SpatialVolume0);
                userType.AddEnumValue("SpatialVolume1", global::WinUICommunity.GlyphName.SpatialVolume1);
                userType.AddEnumValue("SpatialVolume2", global::WinUICommunity.GlyphName.SpatialVolume2);
                userType.AddEnumValue("SpatialVolume3", global::WinUICommunity.GlyphName.SpatialVolume3);
                userType.AddEnumValue("ApplicationGuard", global::WinUICommunity.GlyphName.ApplicationGuard);
                userType.AddEnumValue("OutlineStarLeftHalf", global::WinUICommunity.GlyphName.OutlineStarLeftHalf);
                userType.AddEnumValue("OutlineStarRightHalf", global::WinUICommunity.GlyphName.OutlineStarRightHalf);
                userType.AddEnumValue("ChromeAnnotateContrast", global::WinUICommunity.GlyphName.ChromeAnnotateContrast);
                userType.AddEnumValue("DefenderBadge12", global::WinUICommunity.GlyphName.DefenderBadge12);
                userType.AddEnumValue("DetachablePC", global::WinUICommunity.GlyphName.DetachablePC);
                userType.AddEnumValue("LeftStick", global::WinUICommunity.GlyphName.LeftStick);
                userType.AddEnumValue("RightStick", global::WinUICommunity.GlyphName.RightStick);
                userType.AddEnumValue("TriggerLeft", global::WinUICommunity.GlyphName.TriggerLeft);
                userType.AddEnumValue("TriggerRight", global::WinUICommunity.GlyphName.TriggerRight);
                userType.AddEnumValue("BumperLeft", global::WinUICommunity.GlyphName.BumperLeft);
                userType.AddEnumValue("BumperRight", global::WinUICommunity.GlyphName.BumperRight);
                userType.AddEnumValue("Dpad", global::WinUICommunity.GlyphName.Dpad);
                userType.AddEnumValue("EnglishPunctuation", global::WinUICommunity.GlyphName.EnglishPunctuation);
                userType.AddEnumValue("ChinesePunctuation", global::WinUICommunity.GlyphName.ChinesePunctuation);
                userType.AddEnumValue("HMD", global::WinUICommunity.GlyphName.HMD);
                userType.AddEnumValue("CtrlSpatialRight", global::WinUICommunity.GlyphName.CtrlSpatialRight);
                userType.AddEnumValue("PaginationDotOutline10", global::WinUICommunity.GlyphName.PaginationDotOutline10);
                userType.AddEnumValue("PaginationDotSolid10", global::WinUICommunity.GlyphName.PaginationDotSolid10);
                userType.AddEnumValue("StrokeErase2", global::WinUICommunity.GlyphName.StrokeErase2);
                userType.AddEnumValue("SmallErase", global::WinUICommunity.GlyphName.SmallErase);
                userType.AddEnumValue("LargeErase", global::WinUICommunity.GlyphName.LargeErase);
                userType.AddEnumValue("FolderHorizontal", global::WinUICommunity.GlyphName.FolderHorizontal);
                userType.AddEnumValue("MicrophoneListening", global::WinUICommunity.GlyphName.MicrophoneListening);
                userType.AddEnumValue("StatusExclamationCircle7", global::WinUICommunity.GlyphName.StatusExclamationCircle7);
                userType.AddEnumValue("Video360", global::WinUICommunity.GlyphName.Video360);
                userType.AddEnumValue("GiftboxOpen", global::WinUICommunity.GlyphName.GiftboxOpen);
                userType.AddEnumValue("StatusCircleOuter", global::WinUICommunity.GlyphName.StatusCircleOuter);
                userType.AddEnumValue("StatusCircleInner", global::WinUICommunity.GlyphName.StatusCircleInner);
                userType.AddEnumValue("StatusCircleRing", global::WinUICommunity.GlyphName.StatusCircleRing);
                userType.AddEnumValue("StatusTriangleOuter", global::WinUICommunity.GlyphName.StatusTriangleOuter);
                userType.AddEnumValue("StatusTriangleInner", global::WinUICommunity.GlyphName.StatusTriangleInner);
                userType.AddEnumValue("StatusTriangleExclamation", global::WinUICommunity.GlyphName.StatusTriangleExclamation);
                userType.AddEnumValue("StatusCircleExclamation", global::WinUICommunity.GlyphName.StatusCircleExclamation);
                userType.AddEnumValue("StatusCircleErrorX", global::WinUICommunity.GlyphName.StatusCircleErrorX);
                userType.AddEnumValue("StatusCircleCheckmark", global::WinUICommunity.GlyphName.StatusCircleCheckmark);
                userType.AddEnumValue("StatusCircleInfo", global::WinUICommunity.GlyphName.StatusCircleInfo);
                userType.AddEnumValue("StatusCircleBlock", global::WinUICommunity.GlyphName.StatusCircleBlock);
                userType.AddEnumValue("StatusCircleBlock2", global::WinUICommunity.GlyphName.StatusCircleBlock2);
                userType.AddEnumValue("StatusCircleQuestionMark", global::WinUICommunity.GlyphName.StatusCircleQuestionMark);
                userType.AddEnumValue("StatusCircleSync", global::WinUICommunity.GlyphName.StatusCircleSync);
                userType.AddEnumValue("Dial1", global::WinUICommunity.GlyphName.Dial1);
                userType.AddEnumValue("Dial2", global::WinUICommunity.GlyphName.Dial2);
                userType.AddEnumValue("Dial3", global::WinUICommunity.GlyphName.Dial3);
                userType.AddEnumValue("Dial4", global::WinUICommunity.GlyphName.Dial4);
                userType.AddEnumValue("Dial5", global::WinUICommunity.GlyphName.Dial5);
                userType.AddEnumValue("Dial6", global::WinUICommunity.GlyphName.Dial6);
                userType.AddEnumValue("Dial7", global::WinUICommunity.GlyphName.Dial7);
                userType.AddEnumValue("Dial8", global::WinUICommunity.GlyphName.Dial8);
                userType.AddEnumValue("Dial9", global::WinUICommunity.GlyphName.Dial9);
                userType.AddEnumValue("Dial10", global::WinUICommunity.GlyphName.Dial10);
                userType.AddEnumValue("Dial11", global::WinUICommunity.GlyphName.Dial11);
                userType.AddEnumValue("Dial12", global::WinUICommunity.GlyphName.Dial12);
                userType.AddEnumValue("Dial13", global::WinUICommunity.GlyphName.Dial13);
                userType.AddEnumValue("Dial14", global::WinUICommunity.GlyphName.Dial14);
                userType.AddEnumValue("Dial15", global::WinUICommunity.GlyphName.Dial15);
                userType.AddEnumValue("Dial16", global::WinUICommunity.GlyphName.Dial16);
                userType.AddEnumValue("DialShape1", global::WinUICommunity.GlyphName.DialShape1);
                userType.AddEnumValue("DialShape2", global::WinUICommunity.GlyphName.DialShape2);
                userType.AddEnumValue("DialShape3", global::WinUICommunity.GlyphName.DialShape3);
                userType.AddEnumValue("DialShape4", global::WinUICommunity.GlyphName.DialShape4);
                userType.AddEnumValue("ClosedCaptionsInternational", global::WinUICommunity.GlyphName.ClosedCaptionsInternational);
                userType.AddEnumValue("TollSolid", global::WinUICommunity.GlyphName.TollSolid);
                userType.AddEnumValue("TrafficCongestionSolid", global::WinUICommunity.GlyphName.TrafficCongestionSolid);
                userType.AddEnumValue("ExploreContentSingle", global::WinUICommunity.GlyphName.ExploreContentSingle);
                userType.AddEnumValue("CollapseContent", global::WinUICommunity.GlyphName.CollapseContent);
                userType.AddEnumValue("CollapseContentSingle", global::WinUICommunity.GlyphName.CollapseContentSingle);
                userType.AddEnumValue("InfoSolid", global::WinUICommunity.GlyphName.InfoSolid);
                userType.AddEnumValue("GroupList", global::WinUICommunity.GlyphName.GroupList);
                userType.AddEnumValue("CaretBottomRightSolidCenter8", global::WinUICommunity.GlyphName.CaretBottomRightSolidCenter8);
                userType.AddEnumValue("ProgressRingDots", global::WinUICommunity.GlyphName.ProgressRingDots);
                userType.AddEnumValue("Checkbox14", global::WinUICommunity.GlyphName.Checkbox14);
                userType.AddEnumValue("CheckboxComposite14", global::WinUICommunity.GlyphName.CheckboxComposite14);
                userType.AddEnumValue("CheckboxIndeterminateCombo14", global::WinUICommunity.GlyphName.CheckboxIndeterminateCombo14);
                userType.AddEnumValue("CheckboxIndeterminateCombo", global::WinUICommunity.GlyphName.CheckboxIndeterminateCombo);
                userType.AddEnumValue("StatusPause7", global::WinUICommunity.GlyphName.StatusPause7);
                userType.AddEnumValue("CharacterAppearance", global::WinUICommunity.GlyphName.CharacterAppearance);
                userType.AddEnumValue("Lexicon", global::WinUICommunity.GlyphName.Lexicon);
                userType.AddEnumValue("ScreenTime", global::WinUICommunity.GlyphName.ScreenTime);
                userType.AddEnumValue("HeadlessDevice", global::WinUICommunity.GlyphName.HeadlessDevice);
                userType.AddEnumValue("NetworkSharing", global::WinUICommunity.GlyphName.NetworkSharing);
                userType.AddEnumValue("EyeGaze", global::WinUICommunity.GlyphName.EyeGaze);
                userType.AddEnumValue("ToggleLeft", global::WinUICommunity.GlyphName.ToggleLeft);
                userType.AddEnumValue("ToggleRight", global::WinUICommunity.GlyphName.ToggleRight);
                userType.AddEnumValue("WindowsInsider", global::WinUICommunity.GlyphName.WindowsInsider);
                userType.AddEnumValue("ChromeSwitch", global::WinUICommunity.GlyphName.ChromeSwitch);
                userType.AddEnumValue("ChromeSwitchContast", global::WinUICommunity.GlyphName.ChromeSwitchContast);
                userType.AddEnumValue("StatusCheckmark", global::WinUICommunity.GlyphName.StatusCheckmark);
                userType.AddEnumValue("StatusCheckmarkLeft", global::WinUICommunity.GlyphName.StatusCheckmarkLeft);
                userType.AddEnumValue("KeyboardLeftAligned", global::WinUICommunity.GlyphName.KeyboardLeftAligned);
                userType.AddEnumValue("KeyboardRightAligned", global::WinUICommunity.GlyphName.KeyboardRightAligned);
                userType.AddEnumValue("KeyboardSettings", global::WinUICommunity.GlyphName.KeyboardSettings);
                userType.AddEnumValue("NetworkPhysical", global::WinUICommunity.GlyphName.NetworkPhysical);
                userType.AddEnumValue("IOT", global::WinUICommunity.GlyphName.IOT);
                userType.AddEnumValue("UnknownMirrored", global::WinUICommunity.GlyphName.UnknownMirrored);
                userType.AddEnumValue("ViewDashboard", global::WinUICommunity.GlyphName.ViewDashboard);
                userType.AddEnumValue("ExploitProtectionSettings", global::WinUICommunity.GlyphName.ExploitProtectionSettings);
                userType.AddEnumValue("KeyboardNarrow", global::WinUICommunity.GlyphName.KeyboardNarrow);
                userType.AddEnumValue("Keyboard12Key", global::WinUICommunity.GlyphName.Keyboard12Key);
                userType.AddEnumValue("KeyboardDock", global::WinUICommunity.GlyphName.KeyboardDock);
                userType.AddEnumValue("KeyboardUndock", global::WinUICommunity.GlyphName.KeyboardUndock);
                userType.AddEnumValue("KeyboardLeftDock", global::WinUICommunity.GlyphName.KeyboardLeftDock);
                userType.AddEnumValue("KeyboardRightDock", global::WinUICommunity.GlyphName.KeyboardRightDock);
                userType.AddEnumValue("Ear", global::WinUICommunity.GlyphName.Ear);
                userType.AddEnumValue("PointerHand", global::WinUICommunity.GlyphName.PointerHand);
                userType.AddEnumValue("Bullseye", global::WinUICommunity.GlyphName.Bullseye);
                userType.AddEnumValue("DocumentApproval", global::WinUICommunity.GlyphName.DocumentApproval);
                userType.AddEnumValue("LocaleLanguage", global::WinUICommunity.GlyphName.LocaleLanguage);
                userType.AddEnumValue("PassiveAuthentication", global::WinUICommunity.GlyphName.PassiveAuthentication);
                userType.AddEnumValue("ColorSolid", global::WinUICommunity.GlyphName.ColorSolid);
                userType.AddEnumValue("NetworkOffline", global::WinUICommunity.GlyphName.NetworkOffline);
                userType.AddEnumValue("NetworkConnected", global::WinUICommunity.GlyphName.NetworkConnected);
                userType.AddEnumValue("NetworkConnectedCheckmark", global::WinUICommunity.GlyphName.NetworkConnectedCheckmark);
                userType.AddEnumValue("SignOut", global::WinUICommunity.GlyphName.SignOut);
                userType.AddEnumValue("StatusInfo", global::WinUICommunity.GlyphName.StatusInfo);
                userType.AddEnumValue("StatusInfoLeft", global::WinUICommunity.GlyphName.StatusInfoLeft);
                userType.AddEnumValue("NearbySharing", global::WinUICommunity.GlyphName.NearbySharing);
                userType.AddEnumValue("CtrlSpatialLeft", global::WinUICommunity.GlyphName.CtrlSpatialLeft);
                userType.AddEnumValue("InteractiveDashboard", global::WinUICommunity.GlyphName.InteractiveDashboard);
                userType.AddEnumValue("DeclineCall", global::WinUICommunity.GlyphName.DeclineCall);
                userType.AddEnumValue("ClippingTool", global::WinUICommunity.GlyphName.ClippingTool);
                userType.AddEnumValue("RectangularClipping", global::WinUICommunity.GlyphName.RectangularClipping);
                userType.AddEnumValue("FreeFormClipping", global::WinUICommunity.GlyphName.FreeFormClipping);
                userType.AddEnumValue("CopyTo", global::WinUICommunity.GlyphName.CopyTo);
                userType.AddEnumValue("IDBadge", global::WinUICommunity.GlyphName.IDBadge);
                userType.AddEnumValue("DynamicLock", global::WinUICommunity.GlyphName.DynamicLock);
                userType.AddEnumValue("PenTips", global::WinUICommunity.GlyphName.PenTips);
                userType.AddEnumValue("PenTipsMirrored", global::WinUICommunity.GlyphName.PenTipsMirrored);
                userType.AddEnumValue("HWPJoin", global::WinUICommunity.GlyphName.HWPJoin);
                userType.AddEnumValue("HWPInsert", global::WinUICommunity.GlyphName.HWPInsert);
                userType.AddEnumValue("HWPStrikeThrough", global::WinUICommunity.GlyphName.HWPStrikeThrough);
                userType.AddEnumValue("HWPScratchOut", global::WinUICommunity.GlyphName.HWPScratchOut);
                userType.AddEnumValue("HWPSplit", global::WinUICommunity.GlyphName.HWPSplit);
                userType.AddEnumValue("HWPNewLine", global::WinUICommunity.GlyphName.HWPNewLine);
                userType.AddEnumValue("HWPOverwrite", global::WinUICommunity.GlyphName.HWPOverwrite);
                userType.AddEnumValue("MobWifiWarning1", global::WinUICommunity.GlyphName.MobWifiWarning1);
                userType.AddEnumValue("MobWifiWarning2", global::WinUICommunity.GlyphName.MobWifiWarning2);
                userType.AddEnumValue("MobWifiWarning3", global::WinUICommunity.GlyphName.MobWifiWarning3);
                userType.AddEnumValue("MobWifiWarning4", global::WinUICommunity.GlyphName.MobWifiWarning4);
                userType.AddEnumValue("MicLocationCombo", global::WinUICommunity.GlyphName.MicLocationCombo);
                userType.AddEnumValue("Globe2", global::WinUICommunity.GlyphName.Globe2);
                userType.AddEnumValue("SpecialEffectSize", global::WinUICommunity.GlyphName.SpecialEffectSize);
                userType.AddEnumValue("GIF", global::WinUICommunity.GlyphName.GIF);
                userType.AddEnumValue("Sticker2", global::WinUICommunity.GlyphName.Sticker2);
                userType.AddEnumValue("SurfaceHubSelected", global::WinUICommunity.GlyphName.SurfaceHubSelected);
                userType.AddEnumValue("HoloLensSelected", global::WinUICommunity.GlyphName.HoloLensSelected);
                userType.AddEnumValue("Earbud", global::WinUICommunity.GlyphName.Earbud);
                userType.AddEnumValue("MixVolumes", global::WinUICommunity.GlyphName.MixVolumes);
                userType.AddEnumValue("Safe", global::WinUICommunity.GlyphName.Safe);
                userType.AddEnumValue("LaptopSecure", global::WinUICommunity.GlyphName.LaptopSecure);
                userType.AddEnumValue("PrintDefault", global::WinUICommunity.GlyphName.PrintDefault);
                userType.AddEnumValue("PageMirrored", global::WinUICommunity.GlyphName.PageMirrored);
                userType.AddEnumValue("LandscapeOrientationMirrored", global::WinUICommunity.GlyphName.LandscapeOrientationMirrored);
                userType.AddEnumValue("ColorOff", global::WinUICommunity.GlyphName.ColorOff);
                userType.AddEnumValue("PrintAllPages", global::WinUICommunity.GlyphName.PrintAllPages);
                userType.AddEnumValue("PrintCustomRange", global::WinUICommunity.GlyphName.PrintCustomRange);
                userType.AddEnumValue("PageMarginPortraitNarrow", global::WinUICommunity.GlyphName.PageMarginPortraitNarrow);
                userType.AddEnumValue("PageMarginPortraitNormal", global::WinUICommunity.GlyphName.PageMarginPortraitNormal);
                userType.AddEnumValue("PageMarginPortraitModerate", global::WinUICommunity.GlyphName.PageMarginPortraitModerate);
                userType.AddEnumValue("PageMarginPortraitWide", global::WinUICommunity.GlyphName.PageMarginPortraitWide);
                userType.AddEnumValue("PageMarginLandscapeNarrow", global::WinUICommunity.GlyphName.PageMarginLandscapeNarrow);
                userType.AddEnumValue("PageMarginLandscapeNormal", global::WinUICommunity.GlyphName.PageMarginLandscapeNormal);
                userType.AddEnumValue("PageMarginLandscapeModerate", global::WinUICommunity.GlyphName.PageMarginLandscapeModerate);
                userType.AddEnumValue("PageMarginLandscapeWide", global::WinUICommunity.GlyphName.PageMarginLandscapeWide);
                userType.AddEnumValue("CollateLandscape", global::WinUICommunity.GlyphName.CollateLandscape);
                userType.AddEnumValue("CollatePortrait", global::WinUICommunity.GlyphName.CollatePortrait);
                userType.AddEnumValue("CollatePortraitSeparated", global::WinUICommunity.GlyphName.CollatePortraitSeparated);
                userType.AddEnumValue("DuplexLandscapeOneSided", global::WinUICommunity.GlyphName.DuplexLandscapeOneSided);
                userType.AddEnumValue("DuplexLandscapeOneSidedMirrored", global::WinUICommunity.GlyphName.DuplexLandscapeOneSidedMirrored);
                userType.AddEnumValue("DuplexLandscapeTwoSidedLongEdge", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedLongEdge);
                userType.AddEnumValue("DuplexLandscapeTwoSidedLongEdgeMirrored", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedLongEdgeMirrored);
                userType.AddEnumValue("DuplexLandscapeTwoSidedShortEdge", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedShortEdge);
                userType.AddEnumValue("DuplexLandscapeTwoSidedShortEdgeMirrored", global::WinUICommunity.GlyphName.DuplexLandscapeTwoSidedShortEdgeMirrored);
                userType.AddEnumValue("DuplexPortraitOneSided", global::WinUICommunity.GlyphName.DuplexPortraitOneSided);
                userType.AddEnumValue("DuplexPortraitOneSidedMirrored", global::WinUICommunity.GlyphName.DuplexPortraitOneSidedMirrored);
                userType.AddEnumValue("DuplexPortraitTwoSidedLongEdge", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedLongEdge);
                userType.AddEnumValue("DuplexPortraitTwoSidedLongEdgeMirrored", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedLongEdgeMirrored);
                userType.AddEnumValue("DuplexPortraitTwoSidedShortEdge", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedShortEdge);
                userType.AddEnumValue("DuplexPortraitTwoSidedShortEdgeMirrored", global::WinUICommunity.GlyphName.DuplexPortraitTwoSidedShortEdgeMirrored);
                userType.AddEnumValue("PPSOneLandscape", global::WinUICommunity.GlyphName.PPSOneLandscape);
                userType.AddEnumValue("PPSTwoLandscape", global::WinUICommunity.GlyphName.PPSTwoLandscape);
                userType.AddEnumValue("PPSTwoPortrait", global::WinUICommunity.GlyphName.PPSTwoPortrait);
                userType.AddEnumValue("PPSFourLandscape", global::WinUICommunity.GlyphName.PPSFourLandscape);
                userType.AddEnumValue("PPSFourPortrait", global::WinUICommunity.GlyphName.PPSFourPortrait);
                userType.AddEnumValue("HolePunchOff", global::WinUICommunity.GlyphName.HolePunchOff);
                userType.AddEnumValue("HolePunchPortraitLeft", global::WinUICommunity.GlyphName.HolePunchPortraitLeft);
                userType.AddEnumValue("HolePunchPortraitRight", global::WinUICommunity.GlyphName.HolePunchPortraitRight);
                userType.AddEnumValue("HolePunchPortraitTop", global::WinUICommunity.GlyphName.HolePunchPortraitTop);
                userType.AddEnumValue("HolePunchPortraitBottom", global::WinUICommunity.GlyphName.HolePunchPortraitBottom);
                userType.AddEnumValue("HolePunchLandscapeLeft", global::WinUICommunity.GlyphName.HolePunchLandscapeLeft);
                userType.AddEnumValue("HolePunchLandscapeRight", global::WinUICommunity.GlyphName.HolePunchLandscapeRight);
                userType.AddEnumValue("HolePunchLandscapeTop", global::WinUICommunity.GlyphName.HolePunchLandscapeTop);
                userType.AddEnumValue("HolePunchLandscapeBottom", global::WinUICommunity.GlyphName.HolePunchLandscapeBottom);
                userType.AddEnumValue("StaplingOff", global::WinUICommunity.GlyphName.StaplingOff);
                userType.AddEnumValue("StaplingPortraitTopLeft", global::WinUICommunity.GlyphName.StaplingPortraitTopLeft);
                userType.AddEnumValue("StaplingPortraitTopRight", global::WinUICommunity.GlyphName.StaplingPortraitTopRight);
                userType.AddEnumValue("StaplingPortraitBottomRight", global::WinUICommunity.GlyphName.StaplingPortraitBottomRight);
                userType.AddEnumValue("StaplingPortraitTwoLeft", global::WinUICommunity.GlyphName.StaplingPortraitTwoLeft);
                userType.AddEnumValue("StaplingPortraitTwoRight", global::WinUICommunity.GlyphName.StaplingPortraitTwoRight);
                userType.AddEnumValue("StaplingPortraitTwoTop", global::WinUICommunity.GlyphName.StaplingPortraitTwoTop);
                userType.AddEnumValue("StaplingPortraitTwoBottom", global::WinUICommunity.GlyphName.StaplingPortraitTwoBottom);
                userType.AddEnumValue("StaplingPortraitBookBinding", global::WinUICommunity.GlyphName.StaplingPortraitBookBinding);
                userType.AddEnumValue("StaplingLandscapeTopLeft", global::WinUICommunity.GlyphName.StaplingLandscapeTopLeft);
                userType.AddEnumValue("StaplingLandscapeTopRight", global::WinUICommunity.GlyphName.StaplingLandscapeTopRight);
                userType.AddEnumValue("StaplingLandscapeBottomLeft", global::WinUICommunity.GlyphName.StaplingLandscapeBottomLeft);
                userType.AddEnumValue("StaplingLandscapeBottomRight", global::WinUICommunity.GlyphName.StaplingLandscapeBottomRight);
                userType.AddEnumValue("StaplingLandscapeTwoLeft", global::WinUICommunity.GlyphName.StaplingLandscapeTwoLeft);
                userType.AddEnumValue("StaplingLandscapeTwoRight", global::WinUICommunity.GlyphName.StaplingLandscapeTwoRight);
                userType.AddEnumValue("StaplingLandscapeTwoTop", global::WinUICommunity.GlyphName.StaplingLandscapeTwoTop);
                userType.AddEnumValue("StaplingLandscapeTwoBottom", global::WinUICommunity.GlyphName.StaplingLandscapeTwoBottom);
                userType.AddEnumValue("StaplingLandscapeBookBinding", global::WinUICommunity.GlyphName.StaplingLandscapeBookBinding);
                userType.AddEnumValue("StatusDataTransferRoaming", global::WinUICommunity.GlyphName.StatusDataTransferRoaming);
                userType.AddEnumValue("MobSIMError", global::WinUICommunity.GlyphName.MobSIMError);
                userType.AddEnumValue("CollateLandscapeSeparated", global::WinUICommunity.GlyphName.CollateLandscapeSeparated);
                userType.AddEnumValue("PPSOnePortrait", global::WinUICommunity.GlyphName.PPSOnePortrait);
                userType.AddEnumValue("StaplingPortraitBottomLeft", global::WinUICommunity.GlyphName.StaplingPortraitBottomLeft);
                userType.AddEnumValue("PlaySolid", global::WinUICommunity.GlyphName.PlaySolid);
                userType.AddEnumValue("RepeatOff", global::WinUICommunity.GlyphName.RepeatOff);
                userType.AddEnumValue("Set", global::WinUICommunity.GlyphName.Set);
                userType.AddEnumValue("SetSolid", global::WinUICommunity.GlyphName.SetSolid);
                userType.AddEnumValue("FuzzyReading", global::WinUICommunity.GlyphName.FuzzyReading);
                userType.AddEnumValue("VerticalBattery0", global::WinUICommunity.GlyphName.VerticalBattery0);
                userType.AddEnumValue("VerticalBattery1", global::WinUICommunity.GlyphName.VerticalBattery1);
                userType.AddEnumValue("VerticalBattery2", global::WinUICommunity.GlyphName.VerticalBattery2);
                userType.AddEnumValue("VerticalBattery3", global::WinUICommunity.GlyphName.VerticalBattery3);
                userType.AddEnumValue("VerticalBattery4", global::WinUICommunity.GlyphName.VerticalBattery4);
                userType.AddEnumValue("VerticalBattery5", global::WinUICommunity.GlyphName.VerticalBattery5);
                userType.AddEnumValue("VerticalBattery6", global::WinUICommunity.GlyphName.VerticalBattery6);
                userType.AddEnumValue("VerticalBattery7", global::WinUICommunity.GlyphName.VerticalBattery7);
                userType.AddEnumValue("VerticalBattery8", global::WinUICommunity.GlyphName.VerticalBattery8);
                userType.AddEnumValue("VerticalBattery9", global::WinUICommunity.GlyphName.VerticalBattery9);
                userType.AddEnumValue("VerticalBattery10", global::WinUICommunity.GlyphName.VerticalBattery10);
                userType.AddEnumValue("VerticalBatteryCharging0", global::WinUICommunity.GlyphName.VerticalBatteryCharging0);
                userType.AddEnumValue("VerticalBatteryCharging1", global::WinUICommunity.GlyphName.VerticalBatteryCharging1);
                userType.AddEnumValue("VerticalBatteryCharging2", global::WinUICommunity.GlyphName.VerticalBatteryCharging2);
                userType.AddEnumValue("VerticalBatteryCharging3", global::WinUICommunity.GlyphName.VerticalBatteryCharging3);
                userType.AddEnumValue("VerticalBatteryCharging4", global::WinUICommunity.GlyphName.VerticalBatteryCharging4);
                userType.AddEnumValue("VerticalBatteryCharging5", global::WinUICommunity.GlyphName.VerticalBatteryCharging5);
                userType.AddEnumValue("VerticalBatteryCharging6", global::WinUICommunity.GlyphName.VerticalBatteryCharging6);
                userType.AddEnumValue("VerticalBatteryCharging7", global::WinUICommunity.GlyphName.VerticalBatteryCharging7);
                userType.AddEnumValue("VerticalBatteryCharging8", global::WinUICommunity.GlyphName.VerticalBatteryCharging8);
                userType.AddEnumValue("VerticalBatteryCharging9", global::WinUICommunity.GlyphName.VerticalBatteryCharging9);
                userType.AddEnumValue("VerticalBatteryCharging10", global::WinUICommunity.GlyphName.VerticalBatteryCharging10);
                userType.AddEnumValue("VerticalBatteryUnknown", global::WinUICommunity.GlyphName.VerticalBatteryUnknown);
                userType.AddEnumValue("SIMError", global::WinUICommunity.GlyphName.SIMError);
                userType.AddEnumValue("SIMMissing", global::WinUICommunity.GlyphName.SIMMissing);
                userType.AddEnumValue("SIMLock", global::WinUICommunity.GlyphName.SIMLock);
                userType.AddEnumValue("eSIM", global::WinUICommunity.GlyphName.eSIM);
                userType.AddEnumValue("eSIMNoProfile", global::WinUICommunity.GlyphName.eSIMNoProfile);
                userType.AddEnumValue("eSIMLocked", global::WinUICommunity.GlyphName.eSIMLocked);
                userType.AddEnumValue("eSIMBusy", global::WinUICommunity.GlyphName.eSIMBusy);
                userType.AddEnumValue("NoiseCancelation", global::WinUICommunity.GlyphName.NoiseCancelation);
                userType.AddEnumValue("NoiseCancelationOff", global::WinUICommunity.GlyphName.NoiseCancelationOff);
                userType.AddEnumValue("MusicSharing", global::WinUICommunity.GlyphName.MusicSharing);
                userType.AddEnumValue("MusicSharingOff", global::WinUICommunity.GlyphName.MusicSharingOff);
                userType.AddEnumValue("CircleShapeSolid", global::WinUICommunity.GlyphName.CircleShapeSolid);
                userType.AddEnumValue("WifiCallBars", global::WinUICommunity.GlyphName.WifiCallBars);
                userType.AddEnumValue("WifiCall0", global::WinUICommunity.GlyphName.WifiCall0);
                userType.AddEnumValue("WifiCall1", global::WinUICommunity.GlyphName.WifiCall1);
                userType.AddEnumValue("WifiCall2", global::WinUICommunity.GlyphName.WifiCall2);
                userType.AddEnumValue("WifiCall3", global::WinUICommunity.GlyphName.WifiCall3);
                userType.AddEnumValue("WifiCall4", global::WinUICommunity.GlyphName.WifiCall4);
                userType.AddEnumValue("CHTLanguageBar", global::WinUICommunity.GlyphName.CHTLanguageBar);
                userType.AddEnumValue("ComposeMode", global::WinUICommunity.GlyphName.ComposeMode);
                userType.AddEnumValue("ExpressiveInputEntry", global::WinUICommunity.GlyphName.ExpressiveInputEntry);
                userType.AddEnumValue("EmojiTabMoreSymbols", global::WinUICommunity.GlyphName.EmojiTabMoreSymbols);
                userType.AddEnumValue("WebSearch", global::WinUICommunity.GlyphName.WebSearch);
                userType.AddEnumValue("Kiosk", global::WinUICommunity.GlyphName.Kiosk);
                userType.AddEnumValue("RTTLogo", global::WinUICommunity.GlyphName.RTTLogo);
                userType.AddEnumValue("VoiceCall", global::WinUICommunity.GlyphName.VoiceCall);
                userType.AddEnumValue("GoToMessage", global::WinUICommunity.GlyphName.GoToMessage);
                userType.AddEnumValue("ReturnToCall", global::WinUICommunity.GlyphName.ReturnToCall);
                userType.AddEnumValue("StartPresenting", global::WinUICommunity.GlyphName.StartPresenting);
                userType.AddEnumValue("StopPresenting", global::WinUICommunity.GlyphName.StopPresenting);
                userType.AddEnumValue("ProductivityMode", global::WinUICommunity.GlyphName.ProductivityMode);
                userType.AddEnumValue("SetHistoryStatus", global::WinUICommunity.GlyphName.SetHistoryStatus);
                userType.AddEnumValue("SetHistoryStatus2", global::WinUICommunity.GlyphName.SetHistoryStatus2);
                userType.AddEnumValue("Keyboardsettings20", global::WinUICommunity.GlyphName.Keyboardsettings20);
                userType.AddEnumValue("OneHandedRight20", global::WinUICommunity.GlyphName.OneHandedRight20);
                userType.AddEnumValue("OneHandedLeft20", global::WinUICommunity.GlyphName.OneHandedLeft20);
                userType.AddEnumValue("Split20", global::WinUICommunity.GlyphName.Split20);
                userType.AddEnumValue("Full20", global::WinUICommunity.GlyphName.Full20);
                userType.AddEnumValue("Handwriting20", global::WinUICommunity.GlyphName.Handwriting20);
                userType.AddEnumValue("ChevronLeft20", global::WinUICommunity.GlyphName.ChevronLeft20);
                userType.AddEnumValue("ChevronLeft32", global::WinUICommunity.GlyphName.ChevronLeft32);
                userType.AddEnumValue("ChevronRight20", global::WinUICommunity.GlyphName.ChevronRight20);
                userType.AddEnumValue("ChevronRight32", global::WinUICommunity.GlyphName.ChevronRight32);
                userType.AddEnumValue("Event12", global::WinUICommunity.GlyphName.Event12);
                userType.AddEnumValue("MicOff2", global::WinUICommunity.GlyphName.MicOff2);
                userType.AddEnumValue("DeliveryOptimization", global::WinUICommunity.GlyphName.DeliveryOptimization);
                userType.AddEnumValue("CancelMedium", global::WinUICommunity.GlyphName.CancelMedium);
                userType.AddEnumValue("SearchMedium", global::WinUICommunity.GlyphName.SearchMedium);
                userType.AddEnumValue("AcceptMedium", global::WinUICommunity.GlyphName.AcceptMedium);
                userType.AddEnumValue("RevealPasswordMedium", global::WinUICommunity.GlyphName.RevealPasswordMedium);
                userType.AddEnumValue("DeleteWord", global::WinUICommunity.GlyphName.DeleteWord);
                userType.AddEnumValue("DeleteWordFill", global::WinUICommunity.GlyphName.DeleteWordFill);
                userType.AddEnumValue("DeleteLines", global::WinUICommunity.GlyphName.DeleteLines);
                userType.AddEnumValue("DeleteLinesFill", global::WinUICommunity.GlyphName.DeleteLinesFill);
                userType.AddEnumValue("InstertWords", global::WinUICommunity.GlyphName.InstertWords);
                userType.AddEnumValue("InstertWordsFill", global::WinUICommunity.GlyphName.InstertWordsFill);
                userType.AddEnumValue("JoinWords", global::WinUICommunity.GlyphName.JoinWords);
                userType.AddEnumValue("JoinWordsFill", global::WinUICommunity.GlyphName.JoinWordsFill);
                userType.AddEnumValue("OverwriteWords", global::WinUICommunity.GlyphName.OverwriteWords);
                userType.AddEnumValue("OverwriteWordsFill", global::WinUICommunity.GlyphName.OverwriteWordsFill);
                userType.AddEnumValue("AddNewLine", global::WinUICommunity.GlyphName.AddNewLine);
                userType.AddEnumValue("AddNewLineFill", global::WinUICommunity.GlyphName.AddNewLineFill);
                userType.AddEnumValue("OverwriteWordsKorean", global::WinUICommunity.GlyphName.OverwriteWordsKorean);
                userType.AddEnumValue("OverwriteWordsFillKorean", global::WinUICommunity.GlyphName.OverwriteWordsFillKorean);
                userType.AddEnumValue("EducationIcon", global::WinUICommunity.GlyphName.EducationIcon);
                userType.AddEnumValue("WindowSnipping", global::WinUICommunity.GlyphName.WindowSnipping);
                userType.AddEnumValue("VideoCapture", global::WinUICommunity.GlyphName.VideoCapture);
                userType.AddEnumValue("StatusSecured", global::WinUICommunity.GlyphName.StatusSecured);
                userType.AddEnumValue("NarratorApp", global::WinUICommunity.GlyphName.NarratorApp);
                userType.AddEnumValue("PowerButtonUpdate", global::WinUICommunity.GlyphName.PowerButtonUpdate);
                userType.AddEnumValue("RestartUpdate", global::WinUICommunity.GlyphName.RestartUpdate);
                userType.AddEnumValue("UpdateStatusDot", global::WinUICommunity.GlyphName.UpdateStatusDot);
                userType.AddEnumValue("Eject", global::WinUICommunity.GlyphName.Eject);
                userType.AddEnumValue("Spelling", global::WinUICommunity.GlyphName.Spelling);
                userType.AddEnumValue("SpellingKorean", global::WinUICommunity.GlyphName.SpellingKorean);
                userType.AddEnumValue("SpellingSerbian", global::WinUICommunity.GlyphName.SpellingSerbian);
                userType.AddEnumValue("SpellingChinese", global::WinUICommunity.GlyphName.SpellingChinese);
                userType.AddEnumValue("FolderSelect", global::WinUICommunity.GlyphName.FolderSelect);
                userType.AddEnumValue("SmartScreen", global::WinUICommunity.GlyphName.SmartScreen);
                userType.AddEnumValue("ExploitProtection", global::WinUICommunity.GlyphName.ExploitProtection);
                userType.AddEnumValue("AddBold", global::WinUICommunity.GlyphName.AddBold);
                userType.AddEnumValue("SubtractBold", global::WinUICommunity.GlyphName.SubtractBold);
                userType.AddEnumValue("BackSolidBold", global::WinUICommunity.GlyphName.BackSolidBold);
                userType.AddEnumValue("ForwardSolidBold", global::WinUICommunity.GlyphName.ForwardSolidBold);
                userType.AddEnumValue("PauseBold", global::WinUICommunity.GlyphName.PauseBold);
                userType.AddEnumValue("ClickSolid", global::WinUICommunity.GlyphName.ClickSolid);
                userType.AddEnumValue("SettingsSolid", global::WinUICommunity.GlyphName.SettingsSolid);
                userType.AddEnumValue("MicrophoneSolidBold", global::WinUICommunity.GlyphName.MicrophoneSolidBold);
                userType.AddEnumValue("SpeechSolidBold", global::WinUICommunity.GlyphName.SpeechSolidBold);
                userType.AddEnumValue("ClickedOutLoudSolidBold", global::WinUICommunity.GlyphName.ClickedOutLoudSolidBold);
                xamlType = userType;
                break;

            case 183:   //  ACOMv2.Views.MainPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_183_MainPage;
                userType.StaticInitializer = StaticInitializer_183_MainPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 184:   //  ACOMv2.ViewModels.MainViewModel
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_184_MainViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 185:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_185_ScrollView;
                userType.StaticInitializer = StaticInitializer_185_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollMode");
                userType.AddMemberName("ComputedVerticalScrollBarVisibility");
                userType.AddMemberName("ComputedVerticalScrollMode");
                userType.AddMemberName("ContentOrientation");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("ExpressionAnimationSources");
                userType.AddMemberName("ExtentHeight");
                userType.AddMemberName("ExtentWidth");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollChainMode");
                userType.AddMemberName("HorizontalScrollMode");
                userType.AddMemberName("HorizontalScrollRailMode");
                userType.AddMemberName("IgnoredInputKinds");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("MinZoomFactor");
                userType.AddMemberName("ScrollPresenter");
                userType.AddMemberName("ScrollableHeight");
                userType.AddMemberName("ScrollableWidth");
                userType.AddMemberName("State");
                userType.AddMemberName("VerticalAnchorRatio");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("VerticalScrollChainMode");
                userType.AddMemberName("VerticalScrollMode");
                userType.AddMemberName("VerticalScrollRailMode");
                userType.AddMemberName("ViewportHeight");
                userType.AddMemberName("ViewportWidth");
                userType.AddMemberName("ZoomChainMode");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ZoomMode");
                xamlType = userType;
                break;

            case 186:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_186_ScrollingScrollBarVisibility;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Auto);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Hidden);
                xamlType = userType;
                break;

            case 187:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 188:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_188_ScrollingScrollMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Disabled);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Auto);
                xamlType = userType;
                break;

            case 189:   //  Microsoft.UI.Xaml.Controls.ScrollingContentOrientation
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_189_ScrollingContentOrientation;
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Horizontal);
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.None);
                userType.AddEnumValue("Both", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Both);
                xamlType = userType;
                break;

            case 190:   //  Microsoft.UI.Composition.CompositionPropertySet
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Composition.CompositionObject"));
                userType.StaticInitializer = StaticInitializer_190_CompositionPropertySet;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 191:   //  Microsoft.UI.Composition.CompositionObject
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_191_CompositionObject;
                xamlType = userType;
                break;

            case 192:   //  Microsoft.UI.Xaml.Controls.ScrollingChainMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_192_ScrollingChainMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Auto);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Never);
                xamlType = userType;
                break;

            case 193:   //  Microsoft.UI.Xaml.Controls.ScrollingRailMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_193_ScrollingRailMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Disabled);
                xamlType = userType;
                break;

            case 194:   //  Microsoft.UI.Xaml.Controls.ScrollingInputKinds
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_194_ScrollingInputKinds;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.None);
                userType.AddEnumValue("Touch", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Touch);
                userType.AddEnumValue("Pen", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Pen);
                userType.AddEnumValue("MouseWheel", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.MouseWheel);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Keyboard);
                userType.AddEnumValue("Gamepad", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Gamepad);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.All);
                xamlType = userType;
                break;

            case 195:   //  Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.StaticInitializer = StaticInitializer_195_ScrollPresenter;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 196:   //  Microsoft.UI.Xaml.Controls.ScrollingInteractionState
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_196_ScrollingInteractionState;
                userType.AddEnumValue("Idle", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Idle);
                userType.AddEnumValue("Interaction", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Interaction);
                userType.AddEnumValue("Inertia", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Inertia);
                userType.AddEnumValue("Animation", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Animation);
                xamlType = userType;
                break;

            case 197:   //  Microsoft.UI.Xaml.Controls.ScrollingZoomMode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_197_ScrollingZoomMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Disabled);
                xamlType = userType;
                break;

            case 198:   //  WinUICommunity.PanelAttach
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_198_PanelAttach;
                userType.StaticInitializer = StaticInitializer_198_PanelAttach;
                userType.AddMemberName("ChildrenTransitions");
                xamlType = userType;
                break;

            case 199:   //  WinUICommunity.PanelTransitionCollection
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_199_PanelTransitionCollection;
                userType.AddEnumValue("None", global::WinUICommunity.PanelTransitionCollection.None);
                userType.AddEnumValue("Default", global::WinUICommunity.PanelTransitionCollection.Default);
                userType.AddEnumValue("AddDeleteThemeTransition", global::WinUICommunity.PanelTransitionCollection.AddDeleteThemeTransition);
                userType.AddEnumValue("ContentThemeTransition", global::WinUICommunity.PanelTransitionCollection.ContentThemeTransition);
                userType.AddEnumValue("EdgeUIThemeTransition", global::WinUICommunity.PanelTransitionCollection.EdgeUIThemeTransition);
                userType.AddEnumValue("EntranceThemeTransition", global::WinUICommunity.PanelTransitionCollection.EntranceThemeTransition);
                userType.AddEnumValue("NavigationThemeTransition", global::WinUICommunity.PanelTransitionCollection.NavigationThemeTransition);
                userType.AddEnumValue("PaneThemeTransition", global::WinUICommunity.PanelTransitionCollection.PaneThemeTransition);
                userType.AddEnumValue("PopupThemeTransition", global::WinUICommunity.PanelTransitionCollection.PopupThemeTransition);
                userType.AddEnumValue("ReorderThemeTransition", global::WinUICommunity.PanelTransitionCollection.ReorderThemeTransition);
                userType.AddEnumValue("RepositionThemeTransition", global::WinUICommunity.PanelTransitionCollection.RepositionThemeTransition);
                userType.AddEnumValue("SettingsCardTransition", global::WinUICommunity.PanelTransitionCollection.SettingsCardTransition);
                xamlType = userType;
                break;

            case 200:   //  WinUICommunity.SettingsNavigationAttach
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_200_SettingsNavigationAttach;
                userType.StaticInitializer = StaticInitializer_200_SettingsNavigationAttach;
                userType.AddMemberName("JsonNavigationViewService");
                userType.AddMemberName("SlideNavigationTransitionInfo");
                xamlType = userType;
                break;

            case 201:   //  Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 202:   //  WinUICommunity.SettingsCard
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase"));
                userType.Activator = Activate_202_SettingsCard;
                userType.StaticInitializer = StaticInitializer_202_SettingsCard;
                userType.AddMemberName("Description");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderIcon");
                userType.AddMemberName("IsClickEnabled");
                userType.AddMemberName("LaunchUri");
                userType.AddMemberName("ActionIcon");
                userType.AddMemberName("ActionIconToolTip");
                userType.AddMemberName("ContentAlignment");
                userType.AddMemberName("IsActionIconVisible");
                xamlType = userType;
                break;

            case 203:   //  Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 204:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 205:   //  WinUICommunity.ContentAlignment
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_205_ContentAlignment;
                userType.AddEnumValue("Right", global::WinUICommunity.ContentAlignment.Right);
                userType.AddEnumValue("Left", global::WinUICommunity.ContentAlignment.Left);
                userType.AddEnumValue("Vertical", global::WinUICommunity.ContentAlignment.Vertical);
                xamlType = userType;
                break;

            case 206:   //  WinUICommunity.NavigationHelperEx
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_206_NavigationHelperEx;
                userType.StaticInitializer = StaticInitializer_206_NavigationHelperEx;
                userType.AddMemberName("NavigateToSetting");
                userType.AddMemberName("NavigateTo");
                userType.AddMemberName("Parent");
                xamlType = userType;
                break;

            case 207:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_207_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_207_NavigationViewItem;
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("Icon");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 208:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_208_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 209:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_209_InfoBadge;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 210:   //  ACOMv2.Views.GeneralSettingPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_210_GeneralSettingPage;
                userType.StaticInitializer = StaticInitializer_210_GeneralSettingPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 211:   //  ACOMv2.ViewModels.GeneralSettingViewModel
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_211_GeneralSettingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 212:   //  ACOMv2.Views.ThemeSettingPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_212_ThemeSettingPage;
                userType.StaticInitializer = StaticInitializer_212_ThemeSettingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 213:   //  ACOMv2.Views.AppUpdateSettingPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_213_AppUpdateSettingPage;
                userType.StaticInitializer = StaticInitializer_213_AppUpdateSettingPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 214:   //  ACOMv2.ViewModels.AppUpdateSettingViewModel
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_214_AppUpdateSettingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 215:   //  ACOMv2.Views.AboutUsSettingPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_215_AboutUsSettingPage;
                userType.StaticInitializer = StaticInitializer_215_AboutUsSettingPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 216:   //  ACOMv2.ViewModels.AboutUsSettingViewModel
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_216_AboutUsSettingViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 217:   //  WinUICommunity.BitmapIconExtension
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Markup.MarkupExtension"));
                userType.Activator = Activate_217_BitmapIconExtension;
                userType.StaticInitializer = StaticInitializer_217_BitmapIconExtension;
                userType.AddMemberName("Source");
                userType.AddMemberName("ShowAsMonochrome");
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 218:   //  ACOMv2.Views.SettingsPage
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_218_SettingsPage;
                userType.StaticInitializer = StaticInitializer_218_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 219:   //  WinUICommunity.SettingsExpander
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_219_SettingsExpander;
                userType.StaticInitializer = StaticInitializer_219_SettingsExpander;
                userType.SetContentPropertyName("WinUICommunity.SettingsExpander.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("Description");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderIcon");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Items");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemContainerStyleSelector");
                userType.AddMemberName("ItemsHeader");
                userType.AddMemberName("ItemsFooter");
                xamlType = userType;
                break;

            case 220:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_220_ProgressRing;
                userType.StaticInitializer = StaticInitializer_220_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 221:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_221_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 222:   //  WinUICommunity.ThemeServiceAttach
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_222_ThemeServiceAttach;
                userType.AddMemberName("ThemeService");
                xamlType = userType;
                break;

            case 223:   //  WinUICommunity.IThemeService
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_223_IThemeService;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 224:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_224_Interaction;
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 225:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObjectCollection"));
                userType.StaticInitializer = StaticInitializer_225_BehaviorCollection;
                userType.CollectionAdd = VectorAdd_225_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 226:   //  Microsoft.UI.Xaml.DependencyObjectCollection
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 227:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger"));
                userType.Activator = Activate_227_EventTriggerBehavior;
                userType.StaticInitializer = StaticInitializer_227_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 228:   //  Microsoft.Xaml.Interactivity.Trigger
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.StaticInitializer = StaticInitializer_228_Trigger;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("Actions");
                xamlType = userType;
                break;

            case 229:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_229_Behavior;
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 230:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObjectCollection"));
                userType.StaticInitializer = StaticInitializer_230_ActionCollection;
                userType.CollectionAdd = VectorAdd_230_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 231:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_231_InvokeCommandAction;
                userType.StaticInitializer = StaticInitializer_231_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 232:   //  Microsoft.UI.Xaml.Data.IValueConverter
                xamlType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 233:   //  ACOMv2.Views.BreadcrumbBarUserControl
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_233_BreadcrumbBarUserControl;
                userType.StaticInitializer = StaticInitializer_233_BreadcrumbBarUserControl;
                userType.AddMemberName("Items");
                userType.AddMemberName("SingleItem");
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 234:   //  System.Collections.Generic.List`1<String>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_234_List;
                userType.CollectionAdd = VectorAdd_234_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 235:   //  ACOMv2.ViewModels.BreadCrumbBarViewModel
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.StaticInitializer = StaticInitializer_235_BreadCrumbBarViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 236:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.StaticInitializer = StaticInitializer_236_ObservableRecipient;
                xamlType = userType;
                break;

            case 237:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_237_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_237_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 238:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_238_IList;
                userType.CollectionAdd = VectorAdd_238_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 239:   //  Syncfusion.UI.Xaml.Core.DoubleToObjectConverter
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_239_DoubleToObjectConverter;
                userType.StaticInitializer = StaticInitializer_239_DoubleToObjectConverter;
                userType.AddMemberName("TrueValue");
                userType.AddMemberName("FalseValue");
                userType.AddMemberName("NullValue");
                userType.AddMemberName("GreaterThan");
                userType.AddMemberName("LessThan");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 240:   //  Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter
                userType = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter"));
                userType.Activator = Activate_240_DoubleToVisibilityConverter;
                userType.StaticInitializer = StaticInitializer_240_DoubleToVisibilityConverter;
                userType.SetIsBindable();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.CameraPreviewRns.CommunityToolkit_WinUI_Controls_CameraPreview_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.ColorPickerRns.CommunityToolkit_WinUI_Controls_ColorPicker_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.HeaderedControlsRns.CommunityToolkit_WinUI_Controls_HeaderedControls_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.ImageCropperRns.CommunityToolkit_WinUI_Controls_ImageCropper_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.LayoutTransformControlRns.CommunityToolkit_WinUI_Controls_LayoutTransformControl_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.RadialGaugeRns.CommunityToolkit_WinUI_Controls_RadialGauge_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.RangeSelectorRns.CommunityToolkit_WinUI_Controls_RangeSelector_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.RichSuggestBoxRns.CommunityToolkit_WinUI_Controls_RichSuggestBox_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.SegmentedRns.CommunityToolkit_WinUI_Controls_Segmented_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.SettingsControlsRns.CommunityToolkit_WinUI_Controls_SettingsControls_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.SizersRns.CommunityToolkit_WinUI_Controls_Sizers_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.TabbedCommandBarRns.CommunityToolkit_WinUI_Controls_TabbedCommandBar_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.TokenizingTextBoxRns.CommunityToolkit_WinUI_Controls_TokenizingTextBox_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.DeveloperToolsRns.CommunityToolkit_WinUI_DeveloperTools_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Chart.WinUI.Syncfusion_Chart_WinUI_Net90_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Core.WinUI.Syncfusion_Core_WinUI_Net90_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::TextControlBoxNS.TextControlBox_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.Components.Components_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.Core.Core_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.LandingPages.LandingPages_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinUICommunity.Win2D.Win2D_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_Thickness_Left(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Left;
        }
        private void set_1_Thickness_Left(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Left = (global::System.Double)Value;
        }
        private object get_2_Thickness_Top(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Top;
        }
        private void set_2_Thickness_Top(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Top = (global::System.Double)Value;
        }
        private object get_3_Thickness_Right(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Right;
        }
        private void set_3_Thickness_Right(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Right = (global::System.Double)Value;
        }
        private object get_4_Thickness_Bottom(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Bottom;
        }
        private void set_4_Thickness_Bottom(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Bottom = (global::System.Double)Value;
        }
        private object get_5_AlignmentGrid_HorizontalStep(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid)instance;
            return that.HorizontalStep;
        }
        private void set_5_AlignmentGrid_HorizontalStep(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid)instance;
            that.HorizontalStep = (global::System.Double)Value;
        }
        private object get_6_AlignmentGrid_VerticalStep(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid)instance;
            return that.VerticalStep;
        }
        private void set_6_AlignmentGrid_VerticalStep(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid)instance;
            that.VerticalStep = (global::System.Double)Value;
        }
        private object get_7_AlignmentGrid_LineBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid)instance;
            return that.LineBrush;
        }
        private void set_7_AlignmentGrid_LineBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid)instance;
            that.LineBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_8_CanvasView_DefaultBorderBrush(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.CanvasView)instance;
            return that.DefaultBorderBrush;
        }
        private void set_8_CanvasView_DefaultBorderBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.CanvasView)instance;
            that.DefaultBorderBrush = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_9_CanvasView_DefaultBorderThickness(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.CanvasView)instance;
            return that.DefaultBorderThickness;
        }
        private void set_9_CanvasView_DefaultBorderThickness(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.CanvasView)instance;
            that.DefaultBorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_10_CanvasView_DefaultPadding(object instance)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.CanvasView)instance;
            return that.DefaultPadding;
        }
        private void set_10_CanvasView_DefaultPadding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.Labs.WinUI.CanvasView)instance;
            that.DefaultPadding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_11_SizerBase_Orientation(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.Orientation;
        }
        private void set_11_SizerBase_Orientation(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_12_ContentSizer_TargetControl(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.ContentSizer)instance;
            return that.TargetControl;
        }
        private void set_12_ContentSizer_TargetControl(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.ContentSizer)instance;
            that.TargetControl = (global::Microsoft.UI.Xaml.FrameworkElement)Value;
        }
        private object get_13_ContentSizer_IsDragInverted(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.ContentSizer)instance;
            return that.IsDragInverted;
        }
        private void set_13_ContentSizer_IsDragInverted(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.ContentSizer)instance;
            that.IsDragInverted = (global::System.Boolean)Value;
        }
        private object get_14_SizerBase_Cursor(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.Cursor;
        }
        private void set_14_SizerBase_Cursor(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.Cursor = (global::Microsoft.UI.Input.InputSystemCursorShape)Value;
        }
        private object get_15_SizerBase_DragIncrement(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.DragIncrement;
        }
        private void set_15_SizerBase_DragIncrement(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.DragIncrement = (global::System.Double)Value;
        }
        private object get_16_SizerBase_KeyboardIncrement(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.KeyboardIncrement;
        }
        private void set_16_SizerBase_KeyboardIncrement(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.KeyboardIncrement = (global::System.Double)Value;
        }
        private object get_17_SizerBase_IsThumbVisible(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.IsThumbVisible;
        }
        private void set_17_SizerBase_IsThumbVisible(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.IsThumbVisible = (global::System.Boolean)Value;
        }
        private object get_18_RadioButtons_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.Items;
        }
        private object get_19_RadioButtons_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.Header;
        }
        private void set_19_RadioButtons_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_20_RadioButtons_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.HeaderTemplate;
        }
        private void set_20_RadioButtons_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_21_RadioButtons_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.ItemTemplate;
        }
        private void set_21_RadioButtons_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_22_RadioButtons_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.ItemsSource;
        }
        private void set_22_RadioButtons_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_23_RadioButtons_MaxColumns(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.MaxColumns;
        }
        private void set_23_RadioButtons_MaxColumns(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.MaxColumns = (global::System.Int32)Value;
        }
        private object get_24_RadioButtons_SelectedIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.SelectedIndex;
        }
        private void set_24_RadioButtons_SelectedIndex(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_25_RadioButtons_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.SelectedItem;
        }
        private void set_25_RadioButtons_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_26_RangeSelector_Maximum(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            return that.Maximum;
        }
        private void set_26_RangeSelector_Maximum(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_27_RangeSelector_Minimum(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            return that.Minimum;
        }
        private void set_27_RangeSelector_Minimum(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_28_RangeSelector_RangeEnd(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            return that.RangeEnd;
        }
        private void set_28_RangeSelector_RangeEnd(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            that.RangeEnd = (global::System.Double)Value;
        }
        private object get_29_RangeSelector_RangeStart(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            return that.RangeStart;
        }
        private void set_29_RangeSelector_RangeStart(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            that.RangeStart = (global::System.Double)Value;
        }
        private object get_30_RangeSelector_StepFrequency(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            return that.StepFrequency;
        }
        private void set_30_RangeSelector_StepFrequency(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RangeSelector)instance;
            that.StepFrequency = (global::System.Double)Value;
        }
        private object get_31_WaveProgressBar_Value(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.Value;
        }
        private void set_31_WaveProgressBar_Value(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_32_WaveProgressBar_Minimum(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.Minimum;
        }
        private void set_32_WaveProgressBar_Minimum(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_33_WaveProgressBar_Maximum(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.Maximum;
        }
        private void set_33_WaveProgressBar_Maximum(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_34_WaveProgressBar_Text(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.Text;
        }
        private void set_34_WaveProgressBar_Text(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_35_WaveProgressBar_ShowText(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.ShowText;
        }
        private void set_35_WaveProgressBar_ShowText(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.ShowText = (global::System.Boolean)Value;
        }
        private object get_36_WaveProgressBar_WaveFill(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.WaveFill;
        }
        private void set_36_WaveProgressBar_WaveFill(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.WaveFill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_37_WaveProgressBar_WaveThickness(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.WaveThickness;
        }
        private void set_37_WaveProgressBar_WaveThickness(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.WaveThickness = (global::System.Double)Value;
        }
        private object get_38_WaveProgressBar_WaveStroke(object instance)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            return that.WaveStroke;
        }
        private void set_38_WaveProgressBar_WaveStroke(object instance, object Value)
        {
            var that = (global::WinUICommunity.WaveProgressBar)instance;
            that.WaveStroke = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_39_ProgressRing_IsActive(object instance)
        {
            var that = (global::WinUICommunity.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_39_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::WinUICommunity.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_40_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::WinUICommunity.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private void set_40_ProgressRing_TemplateSettings(object instance, object Value)
        {
            var that = (global::WinUICommunity.ProgressRing)instance;
            that.TemplateSettings = (global::WinUICommunity.ProgressRing.TemplateSettingValues)Value;
        }
        private object get_41_RadialGauge_IsInteractive(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.IsInteractive;
        }
        private void set_41_RadialGauge_IsInteractive(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.IsInteractive = (global::System.Boolean)Value;
        }
        private object get_42_RadialGauge_MaxAngle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.MaxAngle;
        }
        private void set_42_RadialGauge_MaxAngle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.MaxAngle = (global::System.Int32)Value;
        }
        private object get_43_RadialGauge_MinAngle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.MinAngle;
        }
        private void set_43_RadialGauge_MinAngle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.MinAngle = (global::System.Int32)Value;
        }
        private object get_44_RadialGauge_NeedleLength(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.NeedleLength;
        }
        private void set_44_RadialGauge_NeedleLength(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.NeedleLength = (global::System.Double)Value;
        }
        private object get_45_RadialGauge_NeedleWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.NeedleWidth;
        }
        private void set_45_RadialGauge_NeedleWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.NeedleWidth = (global::System.Double)Value;
        }
        private object get_46_RadialGauge_ScalePadding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScalePadding;
        }
        private void set_46_RadialGauge_ScalePadding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScalePadding = (global::System.Double)Value;
        }
        private object get_47_RadialGauge_ScaleTickWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScaleTickWidth;
        }
        private void set_47_RadialGauge_ScaleTickWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScaleTickWidth = (global::System.Double)Value;
        }
        private object get_48_RadialGauge_ScaleWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScaleWidth;
        }
        private void set_48_RadialGauge_ScaleWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScaleWidth = (global::System.Double)Value;
        }
        private object get_49_RadialGauge_StepSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.StepSize;
        }
        private void set_49_RadialGauge_StepSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.StepSize = (global::System.Double)Value;
        }
        private object get_50_RadialGauge_TickLength(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TickLength;
        }
        private void set_50_RadialGauge_TickLength(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TickLength = (global::System.Double)Value;
        }
        private object get_51_RadialGauge_TickPadding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TickPadding;
        }
        private void set_51_RadialGauge_TickPadding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TickPadding = (global::System.Double)Value;
        }
        private object get_52_RadialGauge_TickSpacing(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TickSpacing;
        }
        private void set_52_RadialGauge_TickSpacing(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TickSpacing = (global::System.Int32)Value;
        }
        private object get_53_RadialGauge_TickWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TickWidth;
        }
        private void set_53_RadialGauge_TickWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TickWidth = (global::System.Double)Value;
        }
        private object get_54_RadialGauge_ValueStringFormat(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ValueStringFormat;
        }
        private void set_54_RadialGauge_ValueStringFormat(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ValueStringFormat = (global::System.String)Value;
        }
        private object get_55_RadialGauge_Unit(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.Unit;
        }
        private void set_55_RadialGauge_Unit(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.Unit = (global::System.String)Value;
        }
        private object get_56_RadialGauge_NeedleBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.NeedleBrush;
        }
        private void set_56_RadialGauge_NeedleBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.NeedleBrush = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_57_RadialGauge_NeedleBorderBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.NeedleBorderBrush;
        }
        private void set_57_RadialGauge_NeedleBorderBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.NeedleBorderBrush = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_58_RadialGauge_TrailBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TrailBrush;
        }
        private void set_58_RadialGauge_TrailBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TrailBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_59_RadialGauge_ScaleBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScaleBrush;
        }
        private void set_59_RadialGauge_ScaleBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScaleBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_60_RadialGauge_ScaleTickBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScaleTickBrush;
        }
        private void set_60_RadialGauge_ScaleTickBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScaleTickBrush = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_61_RadialGauge_ScaleTickCornerRadius(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScaleTickCornerRadius;
        }
        private void set_61_RadialGauge_ScaleTickCornerRadius(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScaleTickCornerRadius = (global::System.Double)Value;
        }
        private object get_62_RadialGauge_TickBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TickBrush;
        }
        private void set_62_RadialGauge_TickBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TickBrush = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_63_RadialGauge_NeedleBorderThickness(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.NeedleBorderThickness;
        }
        private void set_63_RadialGauge_NeedleBorderThickness(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.NeedleBorderThickness = (global::System.Double)Value;
        }
        private object get_64_RadialGauge_ScaleTickLength(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.ScaleTickLength;
        }
        private void set_64_RadialGauge_ScaleTickLength(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.ScaleTickLength = (global::System.Double)Value;
        }
        private object get_65_RadialGauge_TickCornerRadius(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            return that.TickCornerRadius;
        }
        private void set_65_RadialGauge_TickCornerRadius(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.RadialGauge)instance;
            that.TickCornerRadius = (global::System.Double)Value;
        }
        private object get_66_CommandBarFlyout_PrimaryCommands(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.CommandBarFlyout)instance;
            return that.PrimaryCommands;
        }
        private object get_67_CommandBarFlyout_SecondaryCommands(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.CommandBarFlyout)instance;
            return that.SecondaryCommands;
        }
        private object get_68_CommandBarFlyout_AlwaysExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.CommandBarFlyout)instance;
            return that.AlwaysExpanded;
        }
        private void set_68_CommandBarFlyout_AlwaysExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.CommandBarFlyout)instance;
            that.AlwaysExpanded = (global::System.Boolean)Value;
        }
        private object get_69_Expander_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.IsExpanded;
        }
        private void set_69_Expander_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_70_Expander_ExpandDirection(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.ExpandDirection;
        }
        private void set_70_Expander_ExpandDirection(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.ExpandDirection = (global::Microsoft.UI.Xaml.Controls.ExpandDirection)Value;
        }
        private object get_71_Expander_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.Header;
        }
        private void set_71_Expander_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_72_Expander_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplate;
        }
        private void set_72_Expander_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_73_Expander_HeaderTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplateSelector;
        }
        private void set_73_Expander_HeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_74_Expander_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.TemplateSettings;
        }
        private object get_75_RedirectVisualView_Child(object instance)
        {
            var that = (global::WinUICommunity.RedirectVisualView)instance;
            return that.Child;
        }
        private void set_75_RedirectVisualView_Child(object instance, object Value)
        {
            var that = (global::WinUICommunity.RedirectVisualView)instance;
            that.Child = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_76_AutoScrollView_IsPlaying(object instance)
        {
            var that = (global::WinUICommunity.AutoScrollView)instance;
            return that.IsPlaying;
        }
        private void set_76_AutoScrollView_IsPlaying(object instance, object Value)
        {
            var that = (global::WinUICommunity.AutoScrollView)instance;
            that.IsPlaying = (global::System.Boolean)Value;
        }
        private object get_77_AutoScrollView_Spacing(object instance)
        {
            var that = (global::WinUICommunity.AutoScrollView)instance;
            return that.Spacing;
        }
        private void set_77_AutoScrollView_Spacing(object instance, object Value)
        {
            var that = (global::WinUICommunity.AutoScrollView)instance;
            that.Spacing = (global::System.Double)Value;
        }
        private object get_78_AutoScrollView_ScrollingPixelsPreSecond(object instance)
        {
            var that = (global::WinUICommunity.AutoScrollView)instance;
            return that.ScrollingPixelsPreSecond;
        }
        private void set_78_AutoScrollView_ScrollingPixelsPreSecond(object instance, object Value)
        {
            var that = (global::WinUICommunity.AutoScrollView)instance;
            that.ScrollingPixelsPreSecond = (global::System.Double)Value;
        }
        private object get_79_Divider_Content(object instance)
        {
            var that = (global::WinUICommunity.Divider)instance;
            return that.Content;
        }
        private void set_79_Divider_Content(object instance, object Value)
        {
            var that = (global::WinUICommunity.Divider)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_80_Divider_Orientation(object instance)
        {
            var that = (global::WinUICommunity.Divider)instance;
            return that.Orientation;
        }
        private void set_80_Divider_Orientation(object instance, object Value)
        {
            var that = (global::WinUICommunity.Divider)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_81_Divider_LineStroke(object instance)
        {
            var that = (global::WinUICommunity.Divider)instance;
            return that.LineStroke;
        }
        private void set_81_Divider_LineStroke(object instance, object Value)
        {
            var that = (global::WinUICommunity.Divider)instance;
            that.LineStroke = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_82_Divider_ContentPadding(object instance)
        {
            var that = (global::WinUICommunity.Divider)instance;
            return that.ContentPadding;
        }
        private void set_82_Divider_ContentPadding(object instance, object Value)
        {
            var that = (global::WinUICommunity.Divider)instance;
            that.ContentPadding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_83_Divider_LineStrokeThickness(object instance)
        {
            var that = (global::WinUICommunity.Divider)instance;
            return that.LineStrokeThickness;
        }
        private void set_83_Divider_LineStrokeThickness(object instance, object Value)
        {
            var that = (global::WinUICommunity.Divider)instance;
            that.LineStrokeThickness = (global::System.Double)Value;
        }
        private object get_84_Divider_LineStrokeDashArray(object instance)
        {
            var that = (global::WinUICommunity.Divider)instance;
            return that.LineStrokeDashArray;
        }
        private void set_84_Divider_LineStrokeDashArray(object instance, object Value)
        {
            var that = (global::WinUICommunity.Divider)instance;
            that.LineStrokeDashArray = (global::Microsoft.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_85_RadioMenuFlyoutItem_GroupName(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)instance;
            return that.GroupName;
        }
        private void set_85_RadioMenuFlyoutItem_GroupName(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)instance;
            that.GroupName = (global::System.String)Value;
        }
        private object get_86_RadioMenuFlyoutItem_IsChecked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)instance;
            return that.IsChecked;
        }
        private void set_86_RadioMenuFlyoutItem_IsChecked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)instance;
            that.IsChecked = (global::System.Boolean)Value;
        }
        private object get_87_RadioMenuFlyoutItem_AreCheckStatesEnabled(object instance)
        {
            return global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.GetAreCheckStatesEnabled((global::Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem)instance);
        }
        private void set_87_RadioMenuFlyoutItem_AreCheckStatesEnabled(object instance, object Value)
        {
            global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.SetAreCheckStatesEnabled((global::Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem)instance, (global::System.Boolean)Value);
        }
        private object get_88_ColorPicker_ColorSpectrumShape(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.ColorSpectrumShape;
        }
        private void set_88_ColorPicker_ColorSpectrumShape(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.ColorSpectrumShape = (global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape)Value;
        }
        private object get_89_ColorPicker_IsMoreButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsMoreButtonVisible;
        }
        private void set_89_ColorPicker_IsMoreButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsMoreButtonVisible = (global::System.Boolean)Value;
        }
        private object get_90_ColorPicker_IsColorSliderVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorSliderVisible;
        }
        private void set_90_ColorPicker_IsColorSliderVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorSliderVisible = (global::System.Boolean)Value;
        }
        private object get_91_ColorPicker_IsColorChannelTextInputVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorChannelTextInputVisible;
        }
        private void set_91_ColorPicker_IsColorChannelTextInputVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorChannelTextInputVisible = (global::System.Boolean)Value;
        }
        private object get_92_ColorPicker_IsHexInputVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsHexInputVisible;
        }
        private void set_92_ColorPicker_IsHexInputVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsHexInputVisible = (global::System.Boolean)Value;
        }
        private object get_93_ColorPicker_IsAlphaEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsAlphaEnabled;
        }
        private void set_93_ColorPicker_IsAlphaEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsAlphaEnabled = (global::System.Boolean)Value;
        }
        private object get_94_ColorPicker_IsAlphaSliderVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsAlphaSliderVisible;
        }
        private void set_94_ColorPicker_IsAlphaSliderVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsAlphaSliderVisible = (global::System.Boolean)Value;
        }
        private object get_95_ColorPicker_IsAlphaTextInputVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsAlphaTextInputVisible;
        }
        private void set_95_ColorPicker_IsAlphaTextInputVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsAlphaTextInputVisible = (global::System.Boolean)Value;
        }
        private object get_96_ColorPicker_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.Orientation;
        }
        private void set_96_ColorPicker_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_97_ColorPicker_Color(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.Color;
        }
        private void set_97_ColorPicker_Color(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_98_ColorPicker_ColorSpectrumComponents(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.ColorSpectrumComponents;
        }
        private void set_98_ColorPicker_ColorSpectrumComponents(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.ColorSpectrumComponents = (global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents)Value;
        }
        private object get_99_ColorPicker_IsColorPreviewVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorPreviewVisible;
        }
        private void set_99_ColorPicker_IsColorPreviewVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorPreviewVisible = (global::System.Boolean)Value;
        }
        private object get_100_ColorPicker_IsColorSpectrumVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.IsColorSpectrumVisible;
        }
        private void set_100_ColorPicker_IsColorSpectrumVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.IsColorSpectrumVisible = (global::System.Boolean)Value;
        }
        private object get_101_ColorPicker_MaxHue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MaxHue;
        }
        private void set_101_ColorPicker_MaxHue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MaxHue = (global::System.Int32)Value;
        }
        private object get_102_ColorPicker_MaxSaturation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MaxSaturation;
        }
        private void set_102_ColorPicker_MaxSaturation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MaxSaturation = (global::System.Int32)Value;
        }
        private object get_103_ColorPicker_MaxValue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MaxValue;
        }
        private void set_103_ColorPicker_MaxValue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MaxValue = (global::System.Int32)Value;
        }
        private object get_104_ColorPicker_MinHue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MinHue;
        }
        private void set_104_ColorPicker_MinHue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MinHue = (global::System.Int32)Value;
        }
        private object get_105_ColorPicker_MinSaturation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MinSaturation;
        }
        private void set_105_ColorPicker_MinSaturation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MinSaturation = (global::System.Int32)Value;
        }
        private object get_106_ColorPicker_MinValue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.MinValue;
        }
        private void set_106_ColorPicker_MinValue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.MinValue = (global::System.Int32)Value;
        }
        private object get_107_ColorPicker_PreviousColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            return that.PreviousColor;
        }
        private void set_107_ColorPicker_PreviousColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ColorPicker)instance;
            that.PreviousColor = (global::System.Nullable<global::Windows.UI.Color>)Value;
        }
        private object get_108_ItemsPageBase_HeaderImage(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderImage;
        }
        private void set_108_ItemsPageBase_HeaderImage(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderImage = (global::System.String)Value;
        }
        private object get_109_ItemsPageBase_HeaderOverlayImage(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderOverlayImage;
        }
        private void set_109_ItemsPageBase_HeaderOverlayImage(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderOverlayImage = (global::System.String)Value;
        }
        private object get_110_ItemsPageBase_HeaderSubtitleText(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderSubtitleText;
        }
        private void set_110_ItemsPageBase_HeaderSubtitleText(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderSubtitleText = (global::System.String)Value;
        }
        private object get_111_ItemsPageBase_HeaderText(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderText;
        }
        private void set_111_ItemsPageBase_HeaderText(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_112_ItemsPageBase_JsonNavigationViewService(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.JsonNavigationViewService;
        }
        private void set_112_ItemsPageBase_JsonNavigationViewService(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.JsonNavigationViewService = (global::WinUICommunity.IJsonNavigationViewService)Value;
        }
        private object get_113_AllLandingPage_UseFullScreenHeaderImage(object instance)
        {
            var that = (global::WinUICommunity.AllLandingPage)instance;
            return that.UseFullScreenHeaderImage;
        }
        private void set_113_AllLandingPage_UseFullScreenHeaderImage(object instance, object Value)
        {
            var that = (global::WinUICommunity.AllLandingPage)instance;
            that.UseFullScreenHeaderImage = (global::System.Boolean)Value;
        }
        private object get_114_ItemsPageBase_CanExecuteInternalCommand(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.CanExecuteInternalCommand;
        }
        private void set_114_ItemsPageBase_CanExecuteInternalCommand(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.CanExecuteInternalCommand = (global::System.Boolean)Value;
        }
        private object get_115_ItemsPageBase_Items(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.Items;
        }
        private void set_115_ItemsPageBase_Items(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.Items = (global::System.Collections.Generic.IEnumerable<global::WinUICommunity.DataItem>)Value;
        }
        private object get_116_ItemsPageBase_PlaceholderSource(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.PlaceholderSource;
        }
        private void set_116_ItemsPageBase_PlaceholderSource(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.PlaceholderSource = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_117_ItemsPageBase_IsCacheEnabled(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.IsCacheEnabled;
        }
        private void set_117_ItemsPageBase_IsCacheEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.IsCacheEnabled = (global::System.Boolean)Value;
        }
        private object get_118_ItemsPageBase_EnableLazyLoading(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.EnableLazyLoading;
        }
        private void set_118_ItemsPageBase_EnableLazyLoading(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.EnableLazyLoading = (global::System.Boolean)Value;
        }
        private object get_119_ItemsPageBase_LazyLoadingThreshold(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.LazyLoadingThreshold;
        }
        private void set_119_ItemsPageBase_LazyLoadingThreshold(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.LazyLoadingThreshold = (global::System.Double)Value;
        }
        private object get_120_ItemsPageBase_SpaceBetweenHeaderAndGridView(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.SpaceBetweenHeaderAndGridView;
        }
        private void set_120_ItemsPageBase_SpaceBetweenHeaderAndGridView(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.SpaceBetweenHeaderAndGridView = (global::Microsoft.UI.Xaml.GridLength)Value;
        }
        private object get_121_ItemsPageBase_Stretch(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.Stretch;
        }
        private void set_121_ItemsPageBase_Stretch(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.Stretch = (global::Microsoft.UI.Xaml.Media.Stretch)Value;
        }
        private object get_122_ItemsPageBase_NormalizedCenterPoint(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.NormalizedCenterPoint;
        }
        private void set_122_ItemsPageBase_NormalizedCenterPoint(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.NormalizedCenterPoint = (global::System.String)Value;
        }
        private object get_123_ItemsPageBase_OverlayOpacity(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.OverlayOpacity;
        }
        private void set_123_ItemsPageBase_OverlayOpacity(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.OverlayOpacity = (global::System.Double)Value;
        }
        private object get_124_ItemsPageBase_HeaderVerticalAlignment(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderVerticalAlignment;
        }
        private void set_124_ItemsPageBase_HeaderVerticalAlignment(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderVerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_125_ItemsPageBase_HeaderCornerRadius(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderCornerRadius;
        }
        private void set_125_ItemsPageBase_HeaderCornerRadius(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderCornerRadius = (global::Microsoft.UI.Xaml.CornerRadius)Value;
        }
        private object get_126_ItemsPageBase_HeaderContentMargin(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderContentMargin;
        }
        private void set_126_ItemsPageBase_HeaderContentMargin(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderContentMargin = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_127_ItemsPageBase_HeaderSubtitleFontSize(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderSubtitleFontSize;
        }
        private void set_127_ItemsPageBase_HeaderSubtitleFontSize(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderSubtitleFontSize = (global::System.Double)Value;
        }
        private object get_128_ItemsPageBase_GridViewPadding(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.GridViewPadding;
        }
        private void set_128_ItemsPageBase_GridViewPadding(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.GridViewPadding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_129_ItemsPageBase_GridViewVerticalAlignment(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.GridViewVerticalAlignment;
        }
        private void set_129_ItemsPageBase_GridViewVerticalAlignment(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.GridViewVerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_130_ItemsPageBase_HeaderFontSize(object instance)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            return that.HeaderFontSize;
        }
        private void set_130_ItemsPageBase_HeaderFontSize(object instance, object Value)
        {
            var that = (global::WinUICommunity.ItemsPageBase)instance;
            that.HeaderFontSize = (global::System.Double)Value;
        }
        private object get_131_GridSplitter_ResizeDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            return that.ResizeDirection;
        }
        private void set_131_GridSplitter_ResizeDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            that.ResizeDirection = (global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection)Value;
        }
        private object get_132_GridSplitter_ResizeBehavior(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            return that.ResizeBehavior;
        }
        private void set_132_GridSplitter_ResizeBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            that.ResizeBehavior = (global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior)Value;
        }
        private object get_133_GridSplitter_ParentLevel(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            return that.ParentLevel;
        }
        private void set_133_GridSplitter_ParentLevel(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            that.ParentLevel = (global::System.Int32)Value;
        }
        private object get_134_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_135_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_135_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_136_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_136_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_137_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_137_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_138_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_138_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_139_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_139_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_140_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_140_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_141_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_142_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_142_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_143_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_144_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_144_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_145_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_145_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_146_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_146_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_147_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_147_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_148_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_148_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_149_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_149_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_150_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_150_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_151_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_151_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_152_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_152_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_153_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_153_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_154_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_154_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_155_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_155_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_156_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_156_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_157_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_157_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_158_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_158_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_159_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_159_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_160_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_160_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_161_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_161_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_162_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_162_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_163_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_163_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_164_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_164_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_165_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_165_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_166_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_166_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_167_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_167_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_168_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_169_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_169_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_170_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_171_TextControlBox_ShowLineHighlighter(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.ShowLineHighlighter;
        }
        private void set_171_TextControlBox_ShowLineHighlighter(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.ShowLineHighlighter = (global::System.Boolean)Value;
        }
        private object get_172_TextControlBox_SyntaxHighlighting(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.SyntaxHighlighting;
        }
        private void set_172_TextControlBox_SyntaxHighlighting(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.SyntaxHighlighting = (global::System.Boolean)Value;
        }
        private object get_173_TextControlBox_IsReadonly(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.IsReadonly;
        }
        private void set_173_TextControlBox_IsReadonly(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.IsReadonly = (global::System.Boolean)Value;
        }
        private object get_174_TextControlBox_Text(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.Text;
        }
        private void set_174_TextControlBox_Text(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_175_TextControlBox_CodeLanguage(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.CodeLanguage;
        }
        private void set_175_TextControlBox_CodeLanguage(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.CodeLanguage = (global::TextControlBoxNS.CodeLanguage)Value;
        }
        private object get_176_TextControlBox_LineEnding(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.LineEnding;
        }
        private void set_176_TextControlBox_LineEnding(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.LineEnding = (global::TextControlBoxNS.LineEnding)Value;
        }
        private object get_177_TextControlBox_SpaceBetweenLineNumberAndText(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.SpaceBetweenLineNumberAndText;
        }
        private void set_177_TextControlBox_SpaceBetweenLineNumberAndText(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.SpaceBetweenLineNumberAndText = (global::System.Single)Value;
        }
        private object get_178_TextControlBox_CursorPosition(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.CursorPosition;
        }
        private void set_178_TextControlBox_CursorPosition(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.CursorPosition = (global::TextControlBoxNS.CursorPosition)Value;
        }
        private object get_179_TextControlBox_FontFamily(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.FontFamily;
        }
        private void set_179_TextControlBox_FontFamily(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_180_TextControlBox_FontSize(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.FontSize;
        }
        private void set_180_TextControlBox_FontSize(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.FontSize = (global::System.Int32)Value;
        }
        private object get_181_TextControlBox_RenderedFontSize(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.RenderedFontSize;
        }
        private object get_182_TextControlBox_RequestedTheme(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.RequestedTheme;
        }
        private void set_182_TextControlBox_RequestedTheme(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.RequestedTheme = (global::Microsoft.UI.Xaml.ElementTheme)Value;
        }
        private object get_183_TextControlBox_Design(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.Design;
        }
        private void set_183_TextControlBox_Design(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.Design = (global::TextControlBoxNS.TextControlBoxDesign)Value;
        }
        private object get_184_TextControlBox_ShowLineNumbers(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.ShowLineNumbers;
        }
        private void set_184_TextControlBox_ShowLineNumbers(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.ShowLineNumbers = (global::System.Boolean)Value;
        }
        private object get_185_TextControlBox_ZoomFactor(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.ZoomFactor;
        }
        private void set_185_TextControlBox_ZoomFactor(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.ZoomFactor = (global::System.Int32)Value;
        }
        private object get_186_TextControlBox_CursorSize(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.CursorSize;
        }
        private void set_186_TextControlBox_CursorSize(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.CursorSize = (global::TextControlBoxNS.CursorSize)Value;
        }
        private object get_187_TextControlBox_ContextFlyout(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.ContextFlyout;
        }
        private void set_187_TextControlBox_ContextFlyout(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.ContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_188_TextControlBox_ContextFlyoutDisabled(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.ContextFlyoutDisabled;
        }
        private void set_188_TextControlBox_ContextFlyoutDisabled(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.ContextFlyoutDisabled = (global::System.Boolean)Value;
        }
        private object get_189_TextControlBox_SelectionStart(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.SelectionStart;
        }
        private void set_189_TextControlBox_SelectionStart(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.SelectionStart = (global::System.Int32)Value;
        }
        private object get_190_TextControlBox_SelectionLength(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.SelectionLength;
        }
        private void set_190_TextControlBox_SelectionLength(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.SelectionLength = (global::System.Int32)Value;
        }
        private object get_191_TextControlBox_SelectedText(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.SelectedText;
        }
        private void set_191_TextControlBox_SelectedText(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.SelectedText = (global::System.String)Value;
        }
        private object get_192_TextControlBox_NumberOfLines(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.NumberOfLines;
        }
        private object get_193_TextControlBox_CurrentLineIndex(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.CurrentLineIndex;
        }
        private object get_194_TextControlBox_ScrollBarPosition(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.ScrollBarPosition;
        }
        private void set_194_TextControlBox_ScrollBarPosition(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.ScrollBarPosition = (global::TextControlBoxNS.ScrollBarPosition)Value;
        }
        private object get_195_TextControlBox_CharacterCount(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.CharacterCount;
        }
        private object get_196_TextControlBox_VerticalScrollSensitivity(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.VerticalScrollSensitivity;
        }
        private void set_196_TextControlBox_VerticalScrollSensitivity(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.VerticalScrollSensitivity = (global::System.Double)Value;
        }
        private object get_197_TextControlBox_HorizontalScrollSensitivity(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.HorizontalScrollSensitivity;
        }
        private void set_197_TextControlBox_HorizontalScrollSensitivity(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.HorizontalScrollSensitivity = (global::System.Double)Value;
        }
        private object get_198_TextControlBox_VerticalScroll(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.VerticalScroll;
        }
        private void set_198_TextControlBox_VerticalScroll(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.VerticalScroll = (global::System.Double)Value;
        }
        private object get_199_TextControlBox_HorizontalScroll(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.HorizontalScroll;
        }
        private void set_199_TextControlBox_HorizontalScroll(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.HorizontalScroll = (global::System.Double)Value;
        }
        private object get_200_TextControlBox_CornerRadius(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.CornerRadius;
        }
        private void set_200_TextControlBox_CornerRadius(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.CornerRadius = (global::Microsoft.UI.Xaml.CornerRadius)Value;
        }
        private object get_201_TextControlBox_UseSpacesInsteadTabs(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.UseSpacesInsteadTabs;
        }
        private void set_201_TextControlBox_UseSpacesInsteadTabs(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.UseSpacesInsteadTabs = (global::System.Boolean)Value;
        }
        private object get_202_TextControlBox_NumberOfSpacesForTab(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.NumberOfSpacesForTab;
        }
        private void set_202_TextControlBox_NumberOfSpacesForTab(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.NumberOfSpacesForTab = (global::System.Int32)Value;
        }
        private object get_203_TextControlBox_SearchIsOpen(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.SearchIsOpen;
        }
        private object get_204_TextControlBox_Lines(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.Lines;
        }
        private object get_205_TextControlBox_DoAutoPairing(object instance)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            return that.DoAutoPairing;
        }
        private void set_205_TextControlBox_DoAutoPairing(object instance, object Value)
        {
            var that = (global::TextControlBoxNS.TextControlBox)instance;
            that.DoAutoPairing = (global::System.Boolean)Value;
        }
        private object get_206_TabView_TabItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItems;
        }
        private object get_207_TabView_AddTabButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AddTabButtonCommand;
        }
        private void set_207_TabView_AddTabButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AddTabButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_208_TabView_AddTabButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AddTabButtonCommandParameter;
        }
        private void set_208_TabView_AddTabButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AddTabButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_209_TabView_AllowDropTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AllowDropTabs;
        }
        private void set_209_TabView_AllowDropTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AllowDropTabs = (global::System.Boolean)Value;
        }
        private object get_210_TabView_CanDragTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanDragTabs;
        }
        private void set_210_TabView_CanDragTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanDragTabs = (global::System.Boolean)Value;
        }
        private object get_211_TabView_CanReorderTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanReorderTabs;
        }
        private void set_211_TabView_CanReorderTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanReorderTabs = (global::System.Boolean)Value;
        }
        private object get_212_TabView_CanTearOutTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanTearOutTabs;
        }
        private void set_212_TabView_CanTearOutTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanTearOutTabs = (global::System.Boolean)Value;
        }
        private object get_213_TabView_CloseButtonOverlayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CloseButtonOverlayMode;
        }
        private void set_213_TabView_CloseButtonOverlayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CloseButtonOverlayMode = (global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode)Value;
        }
        private object get_214_TabView_IsAddTabButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.IsAddTabButtonVisible;
        }
        private void set_214_TabView_IsAddTabButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.IsAddTabButtonVisible = (global::System.Boolean)Value;
        }
        private object get_215_TabView_SelectedIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.SelectedIndex;
        }
        private void set_215_TabView_SelectedIndex(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_216_TabView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.SelectedItem;
        }
        private void set_216_TabView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_217_TabView_TabItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemTemplate;
        }
        private void set_217_TabView_TabItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_218_TabView_TabItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemTemplateSelector;
        }
        private void set_218_TabView_TabItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_219_TabView_TabItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemsSource;
        }
        private void set_219_TabView_TabItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemsSource = (global::System.Object)Value;
        }
        private object get_220_TabView_TabStripFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripFooter;
        }
        private void set_220_TabView_TabStripFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripFooter = (global::System.Object)Value;
        }
        private object get_221_TabView_TabStripFooterTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripFooterTemplate;
        }
        private void set_221_TabView_TabStripFooterTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripFooterTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_222_TabView_TabStripHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripHeader;
        }
        private void set_222_TabView_TabStripHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripHeader = (global::System.Object)Value;
        }
        private object get_223_TabView_TabStripHeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripHeaderTemplate;
        }
        private void set_223_TabView_TabStripHeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripHeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_224_TabView_TabWidthMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabWidthMode;
        }
        private void set_224_TabView_TabWidthMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabWidthMode = (global::Microsoft.UI.Xaml.Controls.TabViewWidthMode)Value;
        }
        private object get_225_FontIconExtension_Glyph(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.FontIconExtension)instance;
            return that.Glyph;
        }
        private void set_225_FontIconExtension_Glyph(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.FontIconExtension)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_226_FontIconExtension_FontFamily(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.FontIconExtension)instance;
            return that.FontFamily;
        }
        private void set_226_FontIconExtension_FontFamily(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.FontIconExtension)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_227_TextIconExtension_FontSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            return that.FontSize;
        }
        private void set_227_TextIconExtension_FontSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_228_TextIconExtension_FontWeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            return that.FontWeight;
        }
        private void set_228_TextIconExtension_FontWeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_229_TextIconExtension_FontStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            return that.FontStyle;
        }
        private void set_229_TextIconExtension_FontStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_230_TextIconExtension_Foreground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            return that.Foreground;
        }
        private void set_230_TextIconExtension_Foreground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_231_TextIconExtension_IsTextScaleFactorEnabled(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            return that.IsTextScaleFactorEnabled;
        }
        private void set_231_TextIconExtension_IsTextScaleFactorEnabled(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            that.IsTextScaleFactorEnabled = (global::System.Boolean)Value;
        }
        private object get_232_TextIconExtension_MirroredWhenRightToLeft(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            return that.MirroredWhenRightToLeft;
        }
        private void set_232_TextIconExtension_MirroredWhenRightToLeft(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.TextIconExtension)instance;
            that.MirroredWhenRightToLeft = (global::System.Boolean)Value;
        }
        private object get_233_TabbedCommandBarItem_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            return that.Header;
        }
        private void set_233_TabbedCommandBarItem_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_234_TabbedCommandBarItem_IsContextual(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            return that.IsContextual;
        }
        private void set_234_TabbedCommandBarItem_IsContextual(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            that.IsContextual = (global::System.Boolean)Value;
        }
        private object get_235_TabbedCommandBarItem_OverflowButtonAlignment(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            return that.OverflowButtonAlignment;
        }
        private void set_235_TabbedCommandBarItem_OverflowButtonAlignment(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            that.OverflowButtonAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_236_TabbedCommandBarItem_CommandAlignment(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            return that.CommandAlignment;
        }
        private void set_236_TabbedCommandBarItem_CommandAlignment(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.TabbedCommandBarItem)instance;
            that.CommandAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_237_SplitButton_Flyout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SplitButton)instance;
            return that.Flyout;
        }
        private void set_237_SplitButton_Flyout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SplitButton)instance;
            that.Flyout = (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)Value;
        }
        private object get_238_SplitButton_Command(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SplitButton)instance;
            return that.Command;
        }
        private void set_238_SplitButton_Command(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SplitButton)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_239_SplitButton_CommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SplitButton)instance;
            return that.CommandParameter;
        }
        private void set_239_SplitButton_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SplitButton)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_240_SfCartesianChart_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.Series;
        }
        private void set_240_SfCartesianChart_Series(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.Series = (global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection)Value;
        }
        private object get_241_CartesianSeries_DataLabelSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.DataLabelSettings;
        }
        private void set_241_CartesianSeries_DataLabelSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.DataLabelSettings = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)Value;
        }
        private object get_242_CartesianSeries_XAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.XAxisName;
        }
        private void set_242_CartesianSeries_XAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.XAxisName = (global::System.String)Value;
        }
        private object get_243_CartesianSeries_YAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.YAxisName;
        }
        private void set_243_CartesianSeries_YAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.YAxisName = (global::System.String)Value;
        }
        private object get_244_CartesianSeries_ShowTrackballLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.ShowTrackballLabel;
        }
        private void set_244_CartesianSeries_ShowTrackballLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.ShowTrackballLabel = (global::System.Boolean)Value;
        }
        private object get_245_ChartSeries_SelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.SelectionBehavior;
        }
        private void set_245_ChartSeries_SelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.SelectionBehavior = (global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior)Value;
        }
        private object get_246_ChartSeries_PaletteBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.PaletteBrushes;
        }
        private void set_246_ChartSeries_PaletteBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.PaletteBrushes = (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>)Value;
        }
        private object get_247_ChartSeries_TooltipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.TooltipTemplate;
        }
        private void set_247_ChartSeries_TooltipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.TooltipTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_248_ChartSeries_EnableTooltip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.EnableTooltip;
        }
        private void set_248_ChartSeries_EnableTooltip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.EnableTooltip = (global::System.Boolean)Value;
        }
        private object get_249_ChartSeries_ListenPropertyChange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ListenPropertyChange;
        }
        private void set_249_ChartSeries_ListenPropertyChange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ListenPropertyChange = (global::System.Boolean)Value;
        }
        private object get_250_ChartSeries_IsSeriesVisible(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.IsSeriesVisible;
        }
        private void set_250_ChartSeries_IsSeriesVisible(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.IsSeriesVisible = (global::System.Boolean)Value;
        }
        private object get_251_ChartSeries_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ItemsSource;
        }
        private void set_251_ChartSeries_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_252_ChartSeries_TrackballLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.TrackballLabelTemplate;
        }
        private void set_252_ChartSeries_TrackballLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.TrackballLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_253_ChartSeries_Fill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Fill;
        }
        private void set_253_ChartSeries_Fill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Fill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_254_ChartSeries_Label(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Label;
        }
        private void set_254_ChartSeries_Label(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_255_ChartSeries_LegendIcon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.LegendIcon;
        }
        private void set_255_ChartSeries_LegendIcon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.LegendIcon = (global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon)Value;
        }
        private object get_256_ChartSeries_LegendIconTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.LegendIconTemplate;
        }
        private void set_256_ChartSeries_LegendIconTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.LegendIconTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_257_ChartSeries_IsVisibleOnLegend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.IsVisibleOnLegend;
        }
        private void set_257_ChartSeries_IsVisibleOnLegend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.IsVisibleOnLegend = (global::System.Boolean)Value;
        }
        private object get_258_ChartSeries_XBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.XBindingPath;
        }
        private void set_258_ChartSeries_XBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.XBindingPath = (global::System.String)Value;
        }
        private object get_259_ChartSeries_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.EnableAnimation;
        }
        private void set_259_ChartSeries_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_260_ChartSeries_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.AnimationDuration;
        }
        private void set_260_ChartSeries_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.AnimationDuration = (global::System.TimeSpan)Value;
        }
        private object get_261_ChartSeries_Chart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Chart;
        }
        private object get_262_ChartSeries_ShowDataLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ShowDataLabels;
        }
        private void set_262_ChartSeries_ShowDataLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ShowDataLabels = (global::System.Boolean)Value;
        }
        private object get_263_ChartSeries_ActualXAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ActualXAxis;
        }
        private object get_264_ChartSeries_ActualYAxis(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ActualYAxis;
        }
        private object get_265_SfCartesianChart_XAxes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.XAxes;
        }
        private object get_266_ChartAxis_VisibleMinimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.VisibleMinimum;
        }
        private object get_267_ChartAxis_VisibleMaximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.VisibleMaximum;
        }
        private object get_268_ChartAxis_PlotOffsetStart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffsetStart;
        }
        private void set_268_ChartAxis_PlotOffsetStart(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffsetStart = (global::System.Double)Value;
        }
        private object get_269_ChartAxis_PlotOffsetEnd(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffsetEnd;
        }
        private void set_269_ChartAxis_PlotOffsetEnd(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffsetEnd = (global::System.Double)Value;
        }
        private object get_270_ChartAxis_AxisLineOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineOffset;
        }
        private void set_270_ChartAxis_AxisLineOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineOffset = (global::System.Double)Value;
        }
        private object get_271_ChartAxis_LabelRotation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelRotation;
        }
        private void set_271_ChartAxis_LabelRotation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelRotation = (global::System.Double)Value;
        }
        private object get_272_ChartAxis_AxisLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineStyle;
        }
        private void set_272_ChartAxis_AxisLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_273_ChartAxis_LabelStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelStyle;
        }
        private void set_273_ChartAxis_LabelStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_274_ChartAxis_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.Header;
        }
        private void set_274_ChartAxis_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_275_ChartAxis_HeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderStyle;
        }
        private void set_275_ChartAxis_HeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_276_ChartAxis_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderTemplate;
        }
        private void set_276_ChartAxis_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_277_ChartAxis_IsInversed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.IsInversed;
        }
        private void set_277_ChartAxis_IsInversed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.IsInversed = (global::System.Boolean)Value;
        }
        private object get_278_ChartAxis_EdgeLabelsDrawingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EdgeLabelsDrawingMode;
        }
        private void set_278_ChartAxis_EdgeLabelsDrawingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EdgeLabelsDrawingMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode)Value;
        }
        private object get_279_ChartAxis_MajorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorGridLineStyle;
        }
        private void set_279_ChartAxis_MajorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorGridLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_280_ChartAxis_MajorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorTickStyle;
        }
        private void set_280_ChartAxis_MajorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_281_ChartAxis_ZoomPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ZoomPosition;
        }
        private void set_281_ChartAxis_ZoomPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ZoomPosition = (global::System.Double)Value;
        }
        private object get_282_ChartAxis_ZoomFactor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ZoomFactor;
        }
        private void set_282_ChartAxis_ZoomFactor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ZoomFactor = (global::System.Double)Value;
        }
        private object get_283_ChartAxis_ShowMajorGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowMajorGridLines;
        }
        private void set_283_ChartAxis_ShowMajorGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowMajorGridLines = (global::System.Boolean)Value;
        }
        private object get_284_ChartAxis_EnableAutoIntervalOnZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EnableAutoIntervalOnZooming;
        }
        private void set_284_ChartAxis_EnableAutoIntervalOnZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EnableAutoIntervalOnZooming = (global::System.Boolean)Value;
        }
        private object get_285_ChartAxis_LabelsIntersectAction(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelsIntersectAction;
        }
        private void set_285_ChartAxis_LabelsIntersectAction(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelsIntersectAction = (global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction)Value;
        }
        private object get_286_ChartAxis_LabelExtent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelExtent;
        }
        private void set_286_ChartAxis_LabelExtent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelExtent = (global::System.Double)Value;
        }
        private object get_287_ChartAxis_OpposedPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.OpposedPosition;
        }
        private void set_287_ChartAxis_OpposedPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.OpposedPosition = (global::System.Boolean)Value;
        }
        private object get_288_ChartAxis_TickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TickLineSize;
        }
        private void set_288_ChartAxis_TickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TickLineSize = (global::System.Double)Value;
        }
        private object get_289_ChartAxis_ShowTrackballLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowTrackballLabel;
        }
        private void set_289_ChartAxis_ShowTrackballLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowTrackballLabel = (global::System.Boolean)Value;
        }
        private object get_290_ChartAxis_TrackballLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TrackballLabelTemplate;
        }
        private void set_290_ChartAxis_TrackballLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TrackballLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_291_ChartAxis_CrosshairLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.CrosshairLabelTemplate;
        }
        private void set_291_ChartAxis_CrosshairLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.CrosshairLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_292_ChartAxis_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelTemplate;
        }
        private void set_292_ChartAxis_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_293_ChartAxis_AutoScrollingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AutoScrollingMode;
        }
        private void set_293_ChartAxis_AutoScrollingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AutoScrollingMode = (global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode)Value;
        }
        private object get_294_ChartAxis_AutoScrollingDelta(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AutoScrollingDelta;
        }
        private void set_294_ChartAxis_AutoScrollingDelta(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AutoScrollingDelta = (global::System.Double)Value;
        }
        private object get_295_SfCartesianChart_YAxes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.YAxes;
        }
        private object get_296_RangeAxisBase_EdgeLabelsVisibilityMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.EdgeLabelsVisibilityMode;
        }
        private void set_296_RangeAxisBase_EdgeLabelsVisibilityMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.EdgeLabelsVisibilityMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode)Value;
        }
        private object get_297_RangeAxisBase_MinorTicksPerInterval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTicksPerInterval;
        }
        private void set_297_RangeAxisBase_MinorTicksPerInterval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTicksPerInterval = (global::System.Int32)Value;
        }
        private object get_298_RangeAxisBase_MinorTickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTickLineSize;
        }
        private void set_298_RangeAxisBase_MinorTickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTickLineSize = (global::System.Double)Value;
        }
        private object get_299_RangeAxisBase_MinorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorGridLineStyle;
        }
        private void set_299_RangeAxisBase_MinorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorGridLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_300_RangeAxisBase_MinorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTickStyle;
        }
        private void set_300_RangeAxisBase_MinorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_301_RangeAxisBase_ShowMinorGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.ShowMinorGridLines;
        }
        private void set_301_RangeAxisBase_ShowMinorGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.ShowMinorGridLines = (global::System.Boolean)Value;
        }
        private object get_302_SfCartesianChart_SelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.SelectionBehavior;
        }
        private void set_302_SfCartesianChart_SelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.SelectionBehavior = (global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior)Value;
        }
        private object get_303_SfCartesianChart_ZoomPanBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.ZoomPanBehavior;
        }
        private void set_303_SfCartesianChart_ZoomPanBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.ZoomPanBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior)Value;
        }
        private object get_304_SfCartesianChart_TrackballBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.TrackballBehavior;
        }
        private void set_304_SfCartesianChart_TrackballBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.TrackballBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior)Value;
        }
        private object get_305_SfCartesianChart_CrosshairBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.CrosshairBehavior;
        }
        private void set_305_SfCartesianChart_CrosshairBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.CrosshairBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior)Value;
        }
        private object get_306_SfCartesianChart_PaletteBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PaletteBrushes;
        }
        private void set_306_SfCartesianChart_PaletteBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PaletteBrushes = (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>)Value;
        }
        private object get_307_SfCartesianChart_PlotAreaBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBorderBrush;
        }
        private void set_307_SfCartesianChart_PlotAreaBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_308_SfCartesianChart_PlotAreaBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBorderThickness;
        }
        private void set_308_SfCartesianChart_PlotAreaBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_309_SfCartesianChart_PlotAreaBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBackground;
        }
        private void set_309_SfCartesianChart_PlotAreaBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_310_SfCartesianChart_IsTransposed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.IsTransposed;
        }
        private void set_310_SfCartesianChart_IsTransposed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.IsTransposed = (global::System.Boolean)Value;
        }
        private object get_311_SfCartesianChart_EnableSideBySideSeriesPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.EnableSideBySideSeriesPlacement;
        }
        private void set_311_SfCartesianChart_EnableSideBySideSeriesPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.EnableSideBySideSeriesPlacement = (global::System.Boolean)Value;
        }
        private object get_312_ChartBase_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Legend;
        }
        private void set_312_ChartBase_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Legend = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)Value;
        }
        private object get_313_ChartBase_TooltipBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.TooltipBehavior;
        }
        private void set_313_ChartBase_TooltipBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.TooltipBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior)Value;
        }
        private object get_314_ChartBase_InteractiveBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.InteractiveBehavior;
        }
        private void set_314_ChartBase_InteractiveBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.InteractiveBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior)Value;
        }
        private object get_315_ChartBase_SeriesClipRect(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.SeriesClipRect;
        }
        private object get_316_ChartBase_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Header;
        }
        private void set_316_ChartBase_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_317_ChartBase_HorizontalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.HorizontalHeaderAlignment;
        }
        private void set_317_ChartBase_HorizontalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.HorizontalHeaderAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_318_ChartBase_VerticalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.VerticalHeaderAlignment;
        }
        private void set_318_ChartBase_VerticalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.VerticalHeaderAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_319_CategoryAxis_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            return that.Interval;
        }
        private void set_319_CategoryAxis_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_320_CategoryAxis_LabelPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            return that.LabelPlacement;
        }
        private void set_320_CategoryAxis_LabelPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            that.LabelPlacement = (global::Syncfusion.UI.Xaml.Charts.LabelPlacement)Value;
        }
        private object get_321_NumericalAxis_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Interval;
        }
        private void set_321_NumericalAxis_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_322_NumericalAxis_Minimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Minimum;
        }
        private void set_322_NumericalAxis_Minimum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_323_NumericalAxis_Maximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Maximum;
        }
        private void set_323_NumericalAxis_Maximum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_324_NumericalAxis_RangePadding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.RangePadding;
        }
        private void set_324_NumericalAxis_RangePadding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.RangePadding = (global::Syncfusion.UI.Xaml.Charts.NumericalPadding)Value;
        }
        private object get_325_NumericalAxis_ActualMinimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.ActualMinimum;
        }
        private object get_326_NumericalAxis_ActualMaximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.ActualMaximum;
        }
        private object get_327_XyDataSeries_YBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            return that.YBindingPath;
        }
        private void set_327_XyDataSeries_YBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            that.YBindingPath = (global::System.String)Value;
        }
        private object get_328_ColumnSeries_SegmentSpacing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnSeries)instance;
            return that.SegmentSpacing;
        }
        private void set_328_ColumnSeries_SegmentSpacing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnSeries)instance;
            that.SegmentSpacing = (global::System.Double)Value;
        }
        private object get_329_ColumnSeries_CustomTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnSeries)instance;
            return that.CustomTemplate;
        }
        private void set_329_ColumnSeries_CustomTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnSeries)instance;
            that.CustomTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_330_ColumnSeries_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnSeries)instance;
            return that.Stroke;
        }
        private void set_330_ColumnSeries_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ColumnSeries)instance;
            that.Stroke = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_331_XyDataSeries_StrokeWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            return that.StrokeWidth;
        }
        private void set_331_XyDataSeries_StrokeWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            that.StrokeWidth = (global::System.Double)Value;
        }
        private object get_332_HomeLandingPage_AppInfo(object instance)
        {
            var that = (global::ACOMv2.Views.HomeLandingPage)instance;
            return that.AppInfo;
        }
        private void set_332_HomeLandingPage_AppInfo(object instance, object Value)
        {
            var that = (global::ACOMv2.Views.HomeLandingPage)instance;
            that.AppInfo = (global::System.String)Value;
        }
        private object get_333_HomeLandingPage_ViewModel(object instance)
        {
            var that = (global::ACOMv2.Views.HomeLandingPage)instance;
            return that.ViewModel;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_334_TitleBar_Title(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Title;
        }
        private void set_334_TitleBar_Title(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Title = (global::System.String)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_335_TitleBar_IconSource(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IconSource;
        }
        private void set_335_TitleBar_IconSource(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_336_TitleBar_IsBackButtonVisible(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IsBackButtonVisible;
        }
        private void set_336_TitleBar_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IsBackButtonVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_337_TitleBar_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_337_TitleBar_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_338_TitleBar_Subtitle(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Subtitle;
        }
        private void set_338_TitleBar_Subtitle(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Subtitle = (global::System.String)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_339_TitleBar_Content(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Content;
        }
        private void set_339_TitleBar_Content(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Content = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_340_TitleBar_Footer(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Footer;
        }
        private void set_340_TitleBar_Footer(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Footer = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_341_TitleBar_Header(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.Header;
        }
        private void set_341_TitleBar_Header(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.Header = (global::System.Object)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_342_TitleBar_IsBackEnabled(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.IsBackEnabled;
        }
        private void set_342_TitleBar_IsBackEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
#pragma warning restore 0618
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_343_TitleBar_TemplateSettings(object instance)
        {
            var that = (global::WinUICommunity.TitleBar)instance;
            return that.TemplateSettings;
        }
#pragma warning restore 0618
        private object get_344_BreadcrumbNavigator_BreadCrumbs(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.BreadCrumbs;
        }
        private void set_344_BreadcrumbNavigator_BreadCrumbs(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.BreadCrumbs = (global::System.Collections.ObjectModel.ObservableCollection<global::WinUICommunity.NavigationBreadcrumb>)Value;
        }
        private object get_345_NavigationBreadcrumb_Label(object instance)
        {
            var that = (global::WinUICommunity.NavigationBreadcrumb)instance;
            return that.Label;
        }
        private object get_346_NavigationBreadcrumb_Page(object instance)
        {
            var that = (global::WinUICommunity.NavigationBreadcrumb)instance;
            return that.Page;
        }
        private object get_347_NavigationBreadcrumb_Parameter(object instance)
        {
            var that = (global::WinUICommunity.NavigationBreadcrumb)instance;
            return that.Parameter;
        }
        private object get_348_BreadcrumbNavigator_UseBuiltInEventForFrame(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.UseBuiltInEventForFrame;
        }
        private void set_348_BreadcrumbNavigator_UseBuiltInEventForFrame(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.UseBuiltInEventForFrame = (global::System.Boolean)Value;
        }
        private object get_349_BreadcrumbNavigator_Frame(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.Frame;
        }
        private void set_349_BreadcrumbNavigator_Frame(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.Frame = (global::Microsoft.UI.Xaml.Controls.Frame)Value;
        }
        private object get_350_BreadcrumbNavigator_PageDictionary(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.PageDictionary;
        }
        private void set_350_BreadcrumbNavigator_PageDictionary(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.PageDictionary = (global::System.Collections.Generic.Dictionary<global::System.Type, global::WinUICommunity.BreadcrumbPageConfig>)Value;
        }
        private object get_351_BreadcrumbPageConfig_PageTitle(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            return that.PageTitle;
        }
        private void set_351_BreadcrumbPageConfig_PageTitle(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            that.PageTitle = (global::System.String)Value;
        }
        private object get_352_BreadcrumbPageConfig_IsHeaderVisible(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            return that.IsHeaderVisible;
        }
        private void set_352_BreadcrumbPageConfig_IsHeaderVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            that.IsHeaderVisible = (global::System.Boolean)Value;
        }
        private object get_353_BreadcrumbPageConfig_ClearNavigation(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            return that.ClearNavigation;
        }
        private void set_353_BreadcrumbPageConfig_ClearNavigation(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbPageConfig)instance;
            that.ClearNavigation = (global::System.Boolean)Value;
        }
        private object get_354_Type_Assembly(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Assembly;
        }
        private object get_355_Type_AssemblyQualifiedName(object instance)
        {
            var that = (global::System.Type)instance;
            return that.AssemblyQualifiedName;
        }
        private object get_356_Type_Attributes(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Attributes;
        }
        private object get_357_Type_BaseType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.BaseType;
        }
        private object get_358_Type_ContainsGenericParameters(object instance)
        {
            var that = (global::System.Type)instance;
            return that.ContainsGenericParameters;
        }
        private object get_359_Type_DeclaringMethod(object instance)
        {
            var that = (global::System.Type)instance;
            return that.DeclaringMethod;
        }
        private object get_360_Type_DeclaringType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.DeclaringType;
        }
        private object get_361_Type_FullName(object instance)
        {
            var that = (global::System.Type)instance;
            return that.FullName;
        }
        private object get_362_Type_GenericParameterAttributes(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GenericParameterAttributes;
        }
        private object get_363_Type_GenericParameterPosition(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GenericParameterPosition;
        }
        private object get_364_Type_GenericTypeArguments(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GenericTypeArguments;
        }
        private object get_365_Type_GUID(object instance)
        {
            var that = (global::System.Type)instance;
            return that.GUID;
        }
        private object get_366_Type_HasElementType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.HasElementType;
        }
        private object get_367_Type_IsAbstract(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAbstract;
        }
        private object get_368_Type_IsAnsiClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAnsiClass;
        }
        private object get_369_Type_IsArray(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsArray;
        }
        private object get_370_Type_IsAutoClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAutoClass;
        }
        private object get_371_Type_IsAutoLayout(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsAutoLayout;
        }
        private object get_372_Type_IsByRef(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsByRef;
        }
        private object get_373_Type_IsByRefLike(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsByRefLike;
        }
        private object get_374_Type_IsClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsClass;
        }
        private object get_375_Type_IsCOMObject(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsCOMObject;
        }
        private object get_376_Type_IsConstructedGenericType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsConstructedGenericType;
        }
        private object get_377_Type_IsContextful(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsContextful;
        }
        private object get_378_Type_IsEnum(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsEnum;
        }
        private object get_379_Type_IsExplicitLayout(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsExplicitLayout;
        }
        private object get_380_Type_IsFunctionPointer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsFunctionPointer;
        }
        private object get_381_Type_IsGenericMethodParameter(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericMethodParameter;
        }
        private object get_382_Type_IsGenericParameter(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericParameter;
        }
        private object get_383_Type_IsGenericType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericType;
        }
        private object get_384_Type_IsGenericTypeDefinition(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericTypeDefinition;
        }
        private object get_385_Type_IsGenericTypeParameter(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsGenericTypeParameter;
        }
        private object get_386_Type_IsImport(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsImport;
        }
        private object get_387_Type_IsInterface(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsInterface;
        }
        private object get_388_Type_IsLayoutSequential(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsLayoutSequential;
        }
        private object get_389_Type_IsMarshalByRef(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsMarshalByRef;
        }
        private object get_390_Type_IsNested(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNested;
        }
        private object get_391_Type_IsNestedAssembly(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedAssembly;
        }
        private object get_392_Type_IsNestedFamANDAssem(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedFamANDAssem;
        }
        private object get_393_Type_IsNestedFamily(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedFamily;
        }
        private object get_394_Type_IsNestedFamORAssem(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedFamORAssem;
        }
        private object get_395_Type_IsNestedPrivate(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedPrivate;
        }
        private object get_396_Type_IsNestedPublic(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNestedPublic;
        }
        private object get_397_Type_IsNotPublic(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsNotPublic;
        }
        private object get_398_Type_IsPointer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsPointer;
        }
        private object get_399_Type_IsPrimitive(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsPrimitive;
        }
        private object get_400_Type_IsPublic(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsPublic;
        }
        private object get_401_Type_IsSealed(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSealed;
        }
        private object get_402_Type_IsSecurityCritical(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSecurityCritical;
        }
        private object get_403_Type_IsSecuritySafeCritical(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSecuritySafeCritical;
        }
        private object get_404_Type_IsSecurityTransparent(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSecurityTransparent;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_405_Type_IsSerializable(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSerializable;
        }
#pragma warning restore 0618
        private object get_406_Type_IsSignatureType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSignatureType;
        }
        private object get_407_Type_IsSpecialName(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSpecialName;
        }
        private object get_408_Type_IsSZArray(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsSZArray;
        }
        private object get_409_Type_IsTypeDefinition(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsTypeDefinition;
        }
        private object get_410_Type_IsUnicodeClass(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsUnicodeClass;
        }
        private object get_411_Type_IsUnmanagedFunctionPointer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsUnmanagedFunctionPointer;
        }
        private object get_412_Type_IsValueType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsValueType;
        }
        private object get_413_Type_IsVariableBoundArray(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsVariableBoundArray;
        }
        private object get_414_Type_IsVisible(object instance)
        {
            var that = (global::System.Type)instance;
            return that.IsVisible;
        }
        private object get_415_Type_MemberType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.MemberType;
        }
        private object get_416_Type_Module(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Module;
        }
        private object get_417_Type_Namespace(object instance)
        {
            var that = (global::System.Type)instance;
            return that.Namespace;
        }
        private object get_418_Type_ReflectedType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.ReflectedType;
        }
        private object get_419_Type_StructLayoutAttribute(object instance)
        {
            var that = (global::System.Type)instance;
            return that.StructLayoutAttribute;
        }
        private object get_420_Type_TypeHandle(object instance)
        {
            var that = (global::System.Type)instance;
            return that.TypeHandle;
        }
        private object get_421_Type_TypeInitializer(object instance)
        {
            var that = (global::System.Type)instance;
            return that.TypeInitializer;
        }
        private object get_422_Type_UnderlyingSystemType(object instance)
        {
            var that = (global::System.Type)instance;
            return that.UnderlyingSystemType;
        }
        private object get_423_MemberInfo_CustomAttributes(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.CustomAttributes;
        }
        private object get_424_MemberInfo_IsCollectible(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.IsCollectible;
        }
        private object get_425_MemberInfo_MetadataToken(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.MetadataToken;
        }
        private object get_426_MemberInfo_Name(object instance)
        {
            var that = (global::System.Reflection.MemberInfo)instance;
            return that.Name;
        }
        private object get_427_BreadcrumbNavigator_NavigationView(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.NavigationView;
        }
        private void set_427_BreadcrumbNavigator_NavigationView(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.NavigationView = (global::Microsoft.UI.Xaml.Controls.NavigationView)Value;
        }
        private object get_428_BreadcrumbNavigator_HeaderVisibilityOptions(object instance)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            return that.HeaderVisibilityOptions;
        }
        private void set_428_BreadcrumbNavigator_HeaderVisibilityOptions(object instance, object Value)
        {
            var that = (global::WinUICommunity.BreadcrumbNavigator)instance;
            that.HeaderVisibilityOptions = (global::WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions)Value;
        }
        private object get_429_BreadcrumbBar_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            return that.ItemTemplate;
        }
        private void set_429_BreadcrumbBar_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_430_BreadcrumbBar_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            return that.ItemsSource;
        }
        private void set_430_BreadcrumbBar_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.BreadcrumbBar)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_431_BreadcrumbNavigator_IsHeaderVisible(object instance)
        {
            return global::WinUICommunity.BreadcrumbNavigator.GetIsHeaderVisible((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_431_BreadcrumbNavigator_IsHeaderVisible(object instance, object Value)
        {
            global::WinUICommunity.BreadcrumbNavigator.SetIsHeaderVisible((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }
        private object get_432_BreadcrumbNavigator_PageTitle(object instance)
        {
            return global::WinUICommunity.BreadcrumbNavigator.GetPageTitle((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_432_BreadcrumbNavigator_PageTitle(object instance, object Value)
        {
            global::WinUICommunity.BreadcrumbNavigator.SetPageTitle((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_433_BreadcrumbNavigator_ClearNavigation(object instance)
        {
            return global::WinUICommunity.BreadcrumbNavigator.GetClearNavigation((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_433_BreadcrumbNavigator_ClearNavigation(object instance, object Value)
        {
            global::WinUICommunity.BreadcrumbNavigator.SetClearNavigation((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }
        private object get_434_PropertySizer_Binding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            return that.Binding;
        }
        private void set_434_PropertySizer_Binding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            that.Binding = (global::System.Double)Value;
        }
        private object get_435_PropertySizer_Minimum(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            return that.Minimum;
        }
        private void set_435_PropertySizer_Minimum(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_436_PropertySizer_IsDragInverted(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            return that.IsDragInverted;
        }
        private void set_436_PropertySizer_IsDragInverted(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            that.IsDragInverted = (global::System.Boolean)Value;
        }
        private object get_437_PropertySizer_Maximum(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            return that.Maximum;
        }
        private void set_437_PropertySizer_Maximum(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.PropertySizer)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_438_BitmapIconSourceExtension_Source(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            return that.Source;
        }
        private void set_438_BitmapIconSourceExtension_Source(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_439_BitmapIconSourceExtension_ShowAsMonochrome(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            return that.ShowAsMonochrome;
        }
        private void set_439_BitmapIconSourceExtension_ShowAsMonochrome(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconSourceExtension)instance;
            that.ShowAsMonochrome = (global::System.Boolean)Value;
        }
        private object get_440_FontIconExtension_Glyph(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.Glyph;
        }
        private void set_440_FontIconExtension_Glyph(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_441_FontIconExtension_GlyphCode(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.GlyphCode;
        }
        private void set_441_FontIconExtension_GlyphCode(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.GlyphCode = (global::WinUICommunity.GlyphCode)Value;
        }
        private object get_442_FontIconExtension_GlyphName(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.GlyphName;
        }
        private void set_442_FontIconExtension_GlyphName(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.GlyphName = (global::WinUICommunity.GlyphName)Value;
        }
        private object get_443_FontIconExtension_FontFamily(object instance)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            return that.FontFamily;
        }
        private void set_443_FontIconExtension_FontFamily(object instance, object Value)
        {
            var that = (global::WinUICommunity.FontIconExtension)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_444_TextIconExtension_FontSize(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.FontSize;
        }
        private void set_444_TextIconExtension_FontSize(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_445_TextIconExtension_FontWeight(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.FontWeight;
        }
        private void set_445_TextIconExtension_FontWeight(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_446_TextIconExtension_FontStyle(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.FontStyle;
        }
        private void set_446_TextIconExtension_FontStyle(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_447_TextIconExtension_Foreground(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.Foreground;
        }
        private void set_447_TextIconExtension_Foreground(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_448_TextIconExtension_IsTextScaleFactorEnabled(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.IsTextScaleFactorEnabled;
        }
        private void set_448_TextIconExtension_IsTextScaleFactorEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.IsTextScaleFactorEnabled = (global::System.Boolean)Value;
        }
        private object get_449_TextIconExtension_MirroredWhenRightToLeft(object instance)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            return that.MirroredWhenRightToLeft;
        }
        private void set_449_TextIconExtension_MirroredWhenRightToLeft(object instance, object Value)
        {
            var that = (global::WinUICommunity.TextIconExtension)instance;
            that.MirroredWhenRightToLeft = (global::System.Boolean)Value;
        }
        private object get_450_MainPage_ViewModel(object instance)
        {
            var that = (global::ACOMv2.Views.MainPage)instance;
            return that.ViewModel;
        }
        private object get_451_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_451_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_452_ScrollView_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_452_ScrollView_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_453_ScrollView_ComputedHorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollBarVisibility;
        }
        private object get_454_ScrollView_ComputedHorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollMode;
        }
        private object get_455_ScrollView_ComputedVerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollBarVisibility;
        }
        private object get_456_ScrollView_ComputedVerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollMode;
        }
        private object get_457_ScrollView_ContentOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ContentOrientation;
        }
        private void set_457_ScrollView_ContentOrientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ContentOrientation = (global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)Value;
        }
        private object get_458_ScrollView_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.CurrentAnchor;
        }
        private object get_459_ScrollView_ExpressionAnimationSources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExpressionAnimationSources;
        }
        private object get_460_ScrollView_ExtentHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentHeight;
        }
        private object get_461_ScrollView_ExtentWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentWidth;
        }
        private object get_462_ScrollView_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_462_ScrollView_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_463_ScrollView_HorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalOffset;
        }
        private object get_464_ScrollView_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_464_ScrollView_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_465_ScrollView_HorizontalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollChainMode;
        }
        private void set_465_ScrollView_HorizontalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_466_ScrollView_HorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollMode;
        }
        private void set_466_ScrollView_HorizontalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_467_ScrollView_HorizontalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollRailMode;
        }
        private void set_467_ScrollView_HorizontalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_468_ScrollView_IgnoredInputKinds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.IgnoredInputKinds;
        }
        private void set_468_ScrollView_IgnoredInputKinds(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.IgnoredInputKinds = (global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds)Value;
        }
        private object get_469_ScrollView_MaxZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MaxZoomFactor;
        }
        private void set_469_ScrollView_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_470_ScrollView_MinZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MinZoomFactor;
        }
        private void set_470_ScrollView_MinZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MinZoomFactor = (global::System.Double)Value;
        }
        private object get_471_ScrollView_ScrollPresenter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollPresenter;
        }
        private object get_472_ScrollPresenter_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            return that.Content;
        }
        private void set_472_ScrollPresenter_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_473_ScrollView_ScrollableHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableHeight;
        }
        private object get_474_ScrollView_ScrollableWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableWidth;
        }
        private object get_475_ScrollView_State(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.State;
        }
        private object get_476_ScrollView_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_476_ScrollView_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_477_ScrollView_VerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalOffset;
        }
        private object get_478_ScrollView_VerticalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollChainMode;
        }
        private void set_478_ScrollView_VerticalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_479_ScrollView_VerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollMode;
        }
        private void set_479_ScrollView_VerticalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_480_ScrollView_VerticalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollRailMode;
        }
        private void set_480_ScrollView_VerticalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_481_ScrollView_ViewportHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportHeight;
        }
        private object get_482_ScrollView_ViewportWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportWidth;
        }
        private object get_483_ScrollView_ZoomChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomChainMode;
        }
        private void set_483_ScrollView_ZoomChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_484_ScrollView_ZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomFactor;
        }
        private object get_485_ScrollView_ZoomMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomMode;
        }
        private void set_485_ScrollView_ZoomMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomMode = (global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode)Value;
        }
        private object get_486_PanelAttach_ChildrenTransitions(object instance)
        {
            return global::WinUICommunity.PanelAttach.GetChildrenTransitions((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_486_PanelAttach_ChildrenTransitions(object instance, object Value)
        {
            global::WinUICommunity.PanelAttach.SetChildrenTransitions((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::WinUICommunity.PanelTransitionCollection)Value);
        }
        private object get_487_SettingsNavigationAttach_JsonNavigationViewService(object instance)
        {
            return global::WinUICommunity.SettingsNavigationAttach.GetJsonNavigationViewService((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_487_SettingsNavigationAttach_JsonNavigationViewService(object instance, object Value)
        {
            global::WinUICommunity.SettingsNavigationAttach.SetJsonNavigationViewService((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::WinUICommunity.IJsonNavigationViewService)Value);
        }
        private object get_488_SettingsNavigationAttach_SlideNavigationTransitionInfo(object instance)
        {
            return global::WinUICommunity.SettingsNavigationAttach.GetSlideNavigationTransitionInfo((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_488_SettingsNavigationAttach_SlideNavigationTransitionInfo(object instance, object Value)
        {
            global::WinUICommunity.SettingsNavigationAttach.SetSlideNavigationTransitionInfo((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo)Value);
        }
        private object get_489_SettingsCard_Description(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.Description;
        }
        private void set_489_SettingsCard_Description(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_490_SettingsCard_Header(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.Header;
        }
        private void set_490_SettingsCard_Header(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_491_SettingsCard_HeaderIcon(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.HeaderIcon;
        }
        private void set_491_SettingsCard_HeaderIcon(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.HeaderIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_492_SettingsCard_IsClickEnabled(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.IsClickEnabled;
        }
        private void set_492_SettingsCard_IsClickEnabled(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.IsClickEnabled = (global::System.Boolean)Value;
        }
        private object get_493_SettingsCard_LaunchUri(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.LaunchUri;
        }
        private void set_493_SettingsCard_LaunchUri(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.LaunchUri = (global::System.String)Value;
        }
        private object get_494_SettingsCard_ActionIcon(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.ActionIcon;
        }
        private void set_494_SettingsCard_ActionIcon(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.ActionIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_495_SettingsCard_ActionIconToolTip(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.ActionIconToolTip;
        }
        private void set_495_SettingsCard_ActionIconToolTip(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.ActionIconToolTip = (global::System.String)Value;
        }
        private object get_496_SettingsCard_ContentAlignment(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.ContentAlignment;
        }
        private void set_496_SettingsCard_ContentAlignment(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.ContentAlignment = (global::WinUICommunity.ContentAlignment)Value;
        }
        private object get_497_SettingsCard_IsActionIconVisible(object instance)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            return that.IsActionIconVisible;
        }
        private void set_497_SettingsCard_IsActionIconVisible(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsCard)instance;
            that.IsActionIconVisible = (global::System.Boolean)Value;
        }
        private object get_498_NavigationHelperEx_NavigateToSetting(object instance)
        {
            return global::WinUICommunity.NavigationHelperEx.GetNavigateToSetting((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_498_NavigationHelperEx_NavigateToSetting(object instance, object Value)
        {
            global::WinUICommunity.NavigationHelperEx.SetNavigateToSetting((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.Type)Value);
        }
        private object get_499_NavigationHelperEx_NavigateTo(object instance)
        {
            return global::WinUICommunity.NavigationHelperEx.GetNavigateTo((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance);
        }
        private void set_499_NavigationHelperEx_NavigateTo(object instance, object Value)
        {
            global::WinUICommunity.NavigationHelperEx.SetNavigateTo((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance, (global::System.String)Value);
        }
        private object get_500_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_501_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_501_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_502_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_502_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_503_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_503_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_504_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_504_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_505_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_505_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_506_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_507_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_507_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_508_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_508_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_509_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_509_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_510_NavigationHelperEx_Parent(object instance)
        {
            return global::WinUICommunity.NavigationHelperEx.GetParent((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance);
        }
        private void set_510_NavigationHelperEx_Parent(object instance, object Value)
        {
            global::WinUICommunity.NavigationHelperEx.SetParent((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance, (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)Value);
        }
        private object get_511_GeneralSettingPage_ViewModel(object instance)
        {
            var that = (global::ACOMv2.Views.GeneralSettingPage)instance;
            return that.ViewModel;
        }
        private object get_512_AppUpdateSettingPage_ViewModel(object instance)
        {
            var that = (global::ACOMv2.Views.AppUpdateSettingPage)instance;
            return that.ViewModel;
        }
        private object get_513_AboutUsSettingPage_ViewModel(object instance)
        {
            var that = (global::ACOMv2.Views.AboutUsSettingPage)instance;
            return that.ViewModel;
        }
        private object get_514_BitmapIconExtension_Source(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            return that.Source;
        }
        private void set_514_BitmapIconExtension_Source(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_515_BitmapIconExtension_ShowAsMonochrome(object instance)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            return that.ShowAsMonochrome;
        }
        private void set_515_BitmapIconExtension_ShowAsMonochrome(object instance, object Value)
        {
            var that = (global::WinUICommunity.BitmapIconExtension)instance;
            that.ShowAsMonochrome = (global::System.Boolean)Value;
        }
        private object get_516_SettingsExpander_Content(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Content;
        }
        private void set_516_SettingsExpander_Content(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_517_SettingsExpander_Description(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Description;
        }
        private void set_517_SettingsExpander_Description(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_518_SettingsExpander_Header(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Header;
        }
        private void set_518_SettingsExpander_Header(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_519_SettingsExpander_HeaderIcon(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.HeaderIcon;
        }
        private void set_519_SettingsExpander_HeaderIcon(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.HeaderIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_520_SettingsExpander_IsExpanded(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.IsExpanded;
        }
        private void set_520_SettingsExpander_IsExpanded(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_521_SettingsExpander_Items(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.Items;
        }
        private void set_521_SettingsExpander_Items(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.Items = (global::System.Collections.Generic.IList<global::System.Object>)Value;
        }
        private object get_522_SettingsExpander_ItemsSource(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemsSource;
        }
        private void set_522_SettingsExpander_ItemsSource(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_523_SettingsExpander_ItemTemplate(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemTemplate;
        }
        private void set_523_SettingsExpander_ItemTemplate(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_524_SettingsExpander_ItemContainerStyleSelector(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemContainerStyleSelector;
        }
        private void set_524_SettingsExpander_ItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_525_SettingsExpander_ItemsHeader(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemsHeader;
        }
        private void set_525_SettingsExpander_ItemsHeader(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemsHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_526_SettingsExpander_ItemsFooter(object instance)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            return that.ItemsFooter;
        }
        private void set_526_SettingsExpander_ItemsFooter(object instance, object Value)
        {
            var that = (global::WinUICommunity.SettingsExpander)instance;
            that.ItemsFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_527_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_527_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_528_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_528_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_529_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_529_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_530_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_530_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_531_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_532_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_532_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_533_ThemeServiceAttach_ThemeService(object instance)
        {
            return global::WinUICommunity.ThemeServiceAttach.GetThemeService((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_533_ThemeServiceAttach_ThemeService(object instance, object Value)
        {
            global::WinUICommunity.ThemeServiceAttach.SetThemeService((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::WinUICommunity.IThemeService)Value);
        }
        private object get_534_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_534_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_535_Trigger_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Trigger)instance;
            return that.Actions;
        }
        private object get_536_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_536_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_537_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_537_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_538_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_539_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_539_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_540_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_540_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_541_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_541_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Microsoft.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_542_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_542_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_543_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_543_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_544_BreadcrumbBarUserControl_Items(object instance)
        {
            var that = (global::ACOMv2.Views.BreadcrumbBarUserControl)instance;
            return that.Items;
        }
        private void set_544_BreadcrumbBarUserControl_Items(object instance, object Value)
        {
            var that = (global::ACOMv2.Views.BreadcrumbBarUserControl)instance;
            that.Items = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_545_BreadcrumbBarUserControl_SingleItem(object instance)
        {
            var that = (global::ACOMv2.Views.BreadcrumbBarUserControl)instance;
            return that.SingleItem;
        }
        private void set_545_BreadcrumbBarUserControl_SingleItem(object instance, object Value)
        {
            var that = (global::ACOMv2.Views.BreadcrumbBarUserControl)instance;
            that.SingleItem = (global::System.String)Value;
        }
        private object get_546_BreadcrumbBarUserControl_ViewModel(object instance)
        {
            var that = (global::ACOMv2.Views.BreadcrumbBarUserControl)instance;
            return that.ViewModel;
        }
        private object get_547_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_548_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_548_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_549_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_550_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_551_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_551_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_552_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_552_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_553_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }
        private object get_554_DoubleToObjectConverter_TrueValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.TrueValue;
        }
        private void set_554_DoubleToObjectConverter_TrueValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.TrueValue = (global::System.Object)Value;
        }
        private object get_555_DoubleToObjectConverter_FalseValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.FalseValue;
        }
        private void set_555_DoubleToObjectConverter_FalseValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.FalseValue = (global::System.Object)Value;
        }
        private object get_556_DoubleToObjectConverter_NullValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.NullValue;
        }
        private void set_556_DoubleToObjectConverter_NullValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.NullValue = (global::System.Object)Value;
        }
        private object get_557_DoubleToObjectConverter_GreaterThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.GreaterThan;
        }
        private void set_557_DoubleToObjectConverter_GreaterThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.GreaterThan = (global::System.Double)Value;
        }
        private object get_558_DoubleToObjectConverter_LessThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.LessThan;
        }
        private void set_558_DoubleToObjectConverter_LessThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.LessThan = (global::System.Double)Value;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember xamlMember = null;
            global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Thickness.Left":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_1_Thickness_Left;
                xamlMember.Setter = set_1_Thickness_Left;
                break;
            case "Microsoft.UI.Xaml.Thickness.Top":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_2_Thickness_Top;
                xamlMember.Setter = set_2_Thickness_Top;
                break;
            case "Microsoft.UI.Xaml.Thickness.Right":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Right", "Double");
                xamlMember.Getter = get_3_Thickness_Right;
                xamlMember.Setter = set_3_Thickness_Right;
                break;
            case "Microsoft.UI.Xaml.Thickness.Bottom":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Bottom", "Double");
                xamlMember.Getter = get_4_Thickness_Bottom;
                xamlMember.Setter = set_4_Thickness_Bottom;
                break;
            case "CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid.HorizontalStep":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalStep", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_AlignmentGrid_HorizontalStep;
                xamlMember.Setter = set_5_AlignmentGrid_HorizontalStep;
                break;
            case "CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid.VerticalStep":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalStep", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_AlignmentGrid_VerticalStep;
                xamlMember.Setter = set_6_AlignmentGrid_VerticalStep;
                break;
            case "CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid.LineBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.DeveloperTools.AlignmentGrid");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LineBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_AlignmentGrid_LineBrush;
                xamlMember.Setter = set_7_AlignmentGrid_LineBrush;
                break;
            case "CommunityToolkit.Labs.WinUI.CanvasView.DefaultBorderBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.CanvasView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DefaultBorderBrush", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_8_CanvasView_DefaultBorderBrush;
                xamlMember.Setter = set_8_CanvasView_DefaultBorderBrush;
                break;
            case "CommunityToolkit.Labs.WinUI.CanvasView.DefaultBorderThickness":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.CanvasView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DefaultBorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.Getter = get_9_CanvasView_DefaultBorderThickness;
                xamlMember.Setter = set_9_CanvasView_DefaultBorderThickness;
                break;
            case "CommunityToolkit.Labs.WinUI.CanvasView.DefaultPadding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.Labs.WinUI.CanvasView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DefaultPadding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.Getter = get_10_CanvasView_DefaultPadding;
                xamlMember.Setter = set_10_CanvasView_DefaultPadding;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.Orientation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SizerBase_Orientation;
                xamlMember.Setter = set_11_SizerBase_Orientation;
                break;
            case "CommunityToolkit.WinUI.Controls.ContentSizer.TargetControl":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.ContentSizer");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TargetControl", "Microsoft.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_ContentSizer_TargetControl;
                xamlMember.Setter = set_12_ContentSizer_TargetControl;
                break;
            case "CommunityToolkit.WinUI.Controls.ContentSizer.IsDragInverted":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.ContentSizer");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsDragInverted", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ContentSizer_IsDragInverted;
                xamlMember.Setter = set_13_ContentSizer_IsDragInverted;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.Cursor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Cursor", "Microsoft.UI.Input.InputSystemCursorShape");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SizerBase_Cursor;
                xamlMember.Setter = set_14_SizerBase_Cursor;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.DragIncrement":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DragIncrement", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SizerBase_DragIncrement;
                xamlMember.Setter = set_15_SizerBase_DragIncrement;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.KeyboardIncrement":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "KeyboardIncrement", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_SizerBase_KeyboardIncrement;
                xamlMember.Setter = set_16_SizerBase_KeyboardIncrement;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.IsThumbVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsThumbVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SizerBase_IsThumbVisible;
                xamlMember.Setter = set_17_SizerBase_IsThumbVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.Items":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_RadioButtons_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_RadioButtons_Header;
                xamlMember.Setter = set_19_RadioButtons_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.HeaderTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_RadioButtons_HeaderTemplate;
                xamlMember.Setter = set_20_RadioButtons_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.ItemTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_RadioButtons_ItemTemplate;
                xamlMember.Setter = set_21_RadioButtons_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.ItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_RadioButtons_ItemsSource;
                xamlMember.Setter = set_22_RadioButtons_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.MaxColumns":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MaxColumns", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_RadioButtons_MaxColumns;
                xamlMember.Setter = set_23_RadioButtons_MaxColumns;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.SelectedIndex":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_RadioButtons_SelectedIndex;
                xamlMember.Setter = set_24_RadioButtons_SelectedIndex;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_RadioButtons_SelectedItem;
                xamlMember.Setter = set_25_RadioButtons_SelectedItem;
                break;
            case "CommunityToolkit.WinUI.Controls.RangeSelector.Maximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RangeSelector");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_RangeSelector_Maximum;
                xamlMember.Setter = set_26_RangeSelector_Maximum;
                break;
            case "CommunityToolkit.WinUI.Controls.RangeSelector.Minimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RangeSelector");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_RangeSelector_Minimum;
                xamlMember.Setter = set_27_RangeSelector_Minimum;
                break;
            case "CommunityToolkit.WinUI.Controls.RangeSelector.RangeEnd":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RangeSelector");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "RangeEnd", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_RangeSelector_RangeEnd;
                xamlMember.Setter = set_28_RangeSelector_RangeEnd;
                break;
            case "CommunityToolkit.WinUI.Controls.RangeSelector.RangeStart":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RangeSelector");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "RangeStart", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_RangeSelector_RangeStart;
                xamlMember.Setter = set_29_RangeSelector_RangeStart;
                break;
            case "CommunityToolkit.WinUI.Controls.RangeSelector.StepFrequency":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RangeSelector");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "StepFrequency", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_RangeSelector_StepFrequency;
                xamlMember.Setter = set_30_RangeSelector_StepFrequency;
                break;
            case "WinUICommunity.WaveProgressBar.Value":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_WaveProgressBar_Value;
                xamlMember.Setter = set_31_WaveProgressBar_Value;
                break;
            case "WinUICommunity.WaveProgressBar.Minimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_WaveProgressBar_Minimum;
                xamlMember.Setter = set_32_WaveProgressBar_Minimum;
                break;
            case "WinUICommunity.WaveProgressBar.Maximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_WaveProgressBar_Maximum;
                xamlMember.Setter = set_33_WaveProgressBar_Maximum;
                break;
            case "WinUICommunity.WaveProgressBar.Text":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_WaveProgressBar_Text;
                xamlMember.Setter = set_34_WaveProgressBar_Text;
                break;
            case "WinUICommunity.WaveProgressBar.ShowText":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowText", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_WaveProgressBar_ShowText;
                xamlMember.Setter = set_35_WaveProgressBar_ShowText;
                break;
            case "WinUICommunity.WaveProgressBar.WaveFill":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "WaveFill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_WaveProgressBar_WaveFill;
                xamlMember.Setter = set_36_WaveProgressBar_WaveFill;
                break;
            case "WinUICommunity.WaveProgressBar.WaveThickness":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "WaveThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_WaveProgressBar_WaveThickness;
                xamlMember.Setter = set_37_WaveProgressBar_WaveThickness;
                break;
            case "WinUICommunity.WaveProgressBar.WaveStroke":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.WaveProgressBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "WaveStroke", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_WaveProgressBar_WaveStroke;
                xamlMember.Setter = set_38_WaveProgressBar_WaveStroke;
                break;
            case "WinUICommunity.ProgressRing.IsActive":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_ProgressRing_IsActive;
                xamlMember.Setter = set_39_ProgressRing_IsActive;
                break;
            case "WinUICommunity.ProgressRing.TemplateSettings":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TemplateSettings", "WinUICommunity.ProgressRing.TemplateSettingValues");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_ProgressRing_TemplateSettings;
                xamlMember.Setter = set_40_ProgressRing_TemplateSettings;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.IsInteractive":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsInteractive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_RadialGauge_IsInteractive;
                xamlMember.Setter = set_41_RadialGauge_IsInteractive;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.MaxAngle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MaxAngle", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_RadialGauge_MaxAngle;
                xamlMember.Setter = set_42_RadialGauge_MaxAngle;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.MinAngle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinAngle", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_RadialGauge_MinAngle;
                xamlMember.Setter = set_43_RadialGauge_MinAngle;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.NeedleLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NeedleLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_RadialGauge_NeedleLength;
                xamlMember.Setter = set_44_RadialGauge_NeedleLength;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.NeedleWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NeedleWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_RadialGauge_NeedleWidth;
                xamlMember.Setter = set_45_RadialGauge_NeedleWidth;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScalePadding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScalePadding", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_RadialGauge_ScalePadding;
                xamlMember.Setter = set_46_RadialGauge_ScalePadding;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScaleTickWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScaleTickWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_RadialGauge_ScaleTickWidth;
                xamlMember.Setter = set_47_RadialGauge_ScaleTickWidth;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScaleWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScaleWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_RadialGauge_ScaleWidth;
                xamlMember.Setter = set_48_RadialGauge_ScaleWidth;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.StepSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "StepSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_RadialGauge_StepSize;
                xamlMember.Setter = set_49_RadialGauge_StepSize;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TickLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_RadialGauge_TickLength;
                xamlMember.Setter = set_50_RadialGauge_TickLength;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TickPadding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickPadding", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_RadialGauge_TickPadding;
                xamlMember.Setter = set_51_RadialGauge_TickPadding;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TickSpacing":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickSpacing", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_RadialGauge_TickSpacing;
                xamlMember.Setter = set_52_RadialGauge_TickSpacing;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TickWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_RadialGauge_TickWidth;
                xamlMember.Setter = set_53_RadialGauge_TickWidth;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ValueStringFormat":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ValueStringFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_RadialGauge_ValueStringFormat;
                xamlMember.Setter = set_54_RadialGauge_ValueStringFormat;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.Unit":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Unit", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_RadialGauge_Unit;
                xamlMember.Setter = set_55_RadialGauge_Unit;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.NeedleBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NeedleBrush", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_RadialGauge_NeedleBrush;
                xamlMember.Setter = set_56_RadialGauge_NeedleBrush;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.NeedleBorderBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NeedleBorderBrush", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_RadialGauge_NeedleBorderBrush;
                xamlMember.Setter = set_57_RadialGauge_NeedleBorderBrush;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TrailBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TrailBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_RadialGauge_TrailBrush;
                xamlMember.Setter = set_58_RadialGauge_TrailBrush;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScaleBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScaleBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_RadialGauge_ScaleBrush;
                xamlMember.Setter = set_59_RadialGauge_ScaleBrush;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScaleTickBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScaleTickBrush", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_RadialGauge_ScaleTickBrush;
                xamlMember.Setter = set_60_RadialGauge_ScaleTickBrush;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScaleTickCornerRadius":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScaleTickCornerRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_RadialGauge_ScaleTickCornerRadius;
                xamlMember.Setter = set_61_RadialGauge_ScaleTickCornerRadius;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TickBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickBrush", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_RadialGauge_TickBrush;
                xamlMember.Setter = set_62_RadialGauge_TickBrush;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.NeedleBorderThickness":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NeedleBorderThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_RadialGauge_NeedleBorderThickness;
                xamlMember.Setter = set_63_RadialGauge_NeedleBorderThickness;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.ScaleTickLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScaleTickLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_RadialGauge_ScaleTickLength;
                xamlMember.Setter = set_64_RadialGauge_ScaleTickLength;
                break;
            case "CommunityToolkit.WinUI.Controls.RadialGauge.TickCornerRadius":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.RadialGauge");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickCornerRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_RadialGauge_TickCornerRadius;
                xamlMember.Setter = set_65_RadialGauge_TickCornerRadius;
                break;
            case "Microsoft.UI.Xaml.Controls.CommandBarFlyout.PrimaryCommands":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.CommandBarFlyout");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PrimaryCommands", "Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>");
                xamlMember.Getter = get_66_CommandBarFlyout_PrimaryCommands;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.CommandBarFlyout.SecondaryCommands":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.CommandBarFlyout");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SecondaryCommands", "Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>");
                xamlMember.Getter = get_67_CommandBarFlyout_SecondaryCommands;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.CommandBarFlyout.AlwaysExpanded":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.CommandBarFlyout");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AlwaysExpanded", "Boolean");
                xamlMember.Getter = get_68_CommandBarFlyout_AlwaysExpanded;
                xamlMember.Setter = set_68_CommandBarFlyout_AlwaysExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.IsExpanded":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_Expander_IsExpanded;
                xamlMember.Setter = set_69_Expander_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.ExpandDirection":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ExpandDirection", "Microsoft.UI.Xaml.Controls.ExpandDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_Expander_ExpandDirection;
                xamlMember.Setter = set_70_Expander_ExpandDirection;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_Expander_Header;
                xamlMember.Setter = set_71_Expander_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_Expander_HeaderTemplate;
                xamlMember.Setter = set_72_Expander_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplateSelector":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_Expander_HeaderTemplateSelector;
                xamlMember.Setter = set_73_Expander_HeaderTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.TemplateSettings":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings");
                xamlMember.Getter = get_74_Expander_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.RedirectVisualView.Child":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.RedirectVisualView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Child", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_RedirectVisualView_Child;
                xamlMember.Setter = set_75_RedirectVisualView_Child;
                break;
            case "WinUICommunity.AutoScrollView.IsPlaying":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.AutoScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPlaying", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_AutoScrollView_IsPlaying;
                xamlMember.Setter = set_76_AutoScrollView_IsPlaying;
                break;
            case "WinUICommunity.AutoScrollView.Spacing":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.AutoScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Spacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_AutoScrollView_Spacing;
                xamlMember.Setter = set_77_AutoScrollView_Spacing;
                break;
            case "WinUICommunity.AutoScrollView.ScrollingPixelsPreSecond":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.AutoScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScrollingPixelsPreSecond", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_AutoScrollView_ScrollingPixelsPreSecond;
                xamlMember.Setter = set_78_AutoScrollView_ScrollingPixelsPreSecond;
                break;
            case "WinUICommunity.Divider.Content":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.Divider");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_Divider_Content;
                xamlMember.Setter = set_79_Divider_Content;
                break;
            case "WinUICommunity.Divider.Orientation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.Divider");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_Divider_Orientation;
                xamlMember.Setter = set_80_Divider_Orientation;
                break;
            case "WinUICommunity.Divider.LineStroke":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.Divider");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LineStroke", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_Divider_LineStroke;
                xamlMember.Setter = set_81_Divider_LineStroke;
                break;
            case "WinUICommunity.Divider.ContentPadding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.Divider");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContentPadding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_Divider_ContentPadding;
                xamlMember.Setter = set_82_Divider_ContentPadding;
                break;
            case "WinUICommunity.Divider.LineStrokeThickness":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.Divider");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LineStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_Divider_LineStrokeThickness;
                xamlMember.Setter = set_83_Divider_LineStrokeThickness;
                break;
            case "WinUICommunity.Divider.LineStrokeDashArray":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.Divider");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LineStrokeDashArray", "Microsoft.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_Divider_LineStrokeDashArray;
                xamlMember.Setter = set_84_Divider_LineStrokeDashArray;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.GroupName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GroupName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_RadioMenuFlyoutItem_GroupName;
                xamlMember.Setter = set_85_RadioMenuFlyoutItem_GroupName;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.IsChecked":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsChecked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_RadioMenuFlyoutItem_IsChecked;
                xamlMember.Setter = set_86_RadioMenuFlyoutItem_IsChecked;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem.AreCheckStatesEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AreCheckStatesEnabled", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_87_RadioMenuFlyoutItem_AreCheckStatesEnabled;
                xamlMember.Setter = set_87_RadioMenuFlyoutItem_AreCheckStatesEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumShape":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ColorSpectrumShape", "Microsoft.UI.Xaml.Controls.ColorSpectrumShape");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_ColorPicker_ColorSpectrumShape;
                xamlMember.Setter = set_88_ColorPicker_ColorSpectrumShape;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsMoreButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_ColorPicker_IsMoreButtonVisible;
                xamlMember.Setter = set_89_ColorPicker_IsMoreButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSliderVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsColorSliderVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_ColorPicker_IsColorSliderVisible;
                xamlMember.Setter = set_90_ColorPicker_IsColorSliderVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsColorChannelTextInputVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_ColorPicker_IsColorChannelTextInputVisible;
                xamlMember.Setter = set_91_ColorPicker_IsColorChannelTextInputVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsHexInputVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsHexInputVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_ColorPicker_IsHexInputVisible;
                xamlMember.Setter = set_92_ColorPicker_IsHexInputVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAlphaEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_ColorPicker_IsAlphaEnabled;
                xamlMember.Setter = set_93_ColorPicker_IsAlphaEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAlphaSliderVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_ColorPicker_IsAlphaSliderVisible;
                xamlMember.Setter = set_94_ColorPicker_IsAlphaSliderVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAlphaTextInputVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_ColorPicker_IsAlphaTextInputVisible;
                xamlMember.Setter = set_95_ColorPicker_IsAlphaTextInputVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.Orientation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_ColorPicker_Orientation;
                xamlMember.Setter = set_96_ColorPicker_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.Color":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_ColorPicker_Color;
                xamlMember.Setter = set_97_ColorPicker_Color;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponents":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ColorSpectrumComponents", "Microsoft.UI.Xaml.Controls.ColorSpectrumComponents");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_ColorPicker_ColorSpectrumComponents;
                xamlMember.Setter = set_98_ColorPicker_ColorSpectrumComponents;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsColorPreviewVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_ColorPicker_IsColorPreviewVisible;
                xamlMember.Setter = set_99_ColorPicker_IsColorPreviewVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsColorSpectrumVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_ColorPicker_IsColorSpectrumVisible;
                xamlMember.Setter = set_100_ColorPicker_IsColorSpectrumVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MaxHue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MaxHue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_ColorPicker_MaxHue;
                xamlMember.Setter = set_101_ColorPicker_MaxHue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MaxSaturation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MaxSaturation", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_ColorPicker_MaxSaturation;
                xamlMember.Setter = set_102_ColorPicker_MaxSaturation;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MaxValue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MaxValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_ColorPicker_MaxValue;
                xamlMember.Setter = set_103_ColorPicker_MaxValue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MinHue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinHue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_ColorPicker_MinHue;
                xamlMember.Setter = set_104_ColorPicker_MinHue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MinSaturation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinSaturation", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_ColorPicker_MinSaturation;
                xamlMember.Setter = set_105_ColorPicker_MinSaturation;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.MinValue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_ColorPicker_MinValue;
                xamlMember.Setter = set_106_ColorPicker_MinValue;
                break;
            case "Microsoft.UI.Xaml.Controls.ColorPicker.PreviousColor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ColorPicker");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PreviousColor", "System.Nullable`1<Windows.UI.Color>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_ColorPicker_PreviousColor;
                xamlMember.Setter = set_107_ColorPicker_PreviousColor;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderImage":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderImage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_ItemsPageBase_HeaderImage;
                xamlMember.Setter = set_108_ItemsPageBase_HeaderImage;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderOverlayImage":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderOverlayImage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_ItemsPageBase_HeaderOverlayImage;
                xamlMember.Setter = set_109_ItemsPageBase_HeaderOverlayImage;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderSubtitleText":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderSubtitleText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_ItemsPageBase_HeaderSubtitleText;
                xamlMember.Setter = set_110_ItemsPageBase_HeaderSubtitleText;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderText":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_ItemsPageBase_HeaderText;
                xamlMember.Setter = set_111_ItemsPageBase_HeaderText;
                break;
            case "WinUICommunity.ItemsPageBase.JsonNavigationViewService":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "JsonNavigationViewService", "WinUICommunity.IJsonNavigationViewService");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_ItemsPageBase_JsonNavigationViewService;
                xamlMember.Setter = set_112_ItemsPageBase_JsonNavigationViewService;
                break;
            case "WinUICommunity.AllLandingPage.UseFullScreenHeaderImage":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.AllLandingPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "UseFullScreenHeaderImage", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_AllLandingPage_UseFullScreenHeaderImage;
                xamlMember.Setter = set_113_AllLandingPage_UseFullScreenHeaderImage;
                break;
            case "WinUICommunity.ItemsPageBase.CanExecuteInternalCommand":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CanExecuteInternalCommand", "Boolean");
                xamlMember.Getter = get_114_ItemsPageBase_CanExecuteInternalCommand;
                xamlMember.Setter = set_114_ItemsPageBase_CanExecuteInternalCommand;
                break;
            case "WinUICommunity.ItemsPageBase.Items":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IEnumerable`1<WinUICommunity.DataItem>");
                xamlMember.Getter = get_115_ItemsPageBase_Items;
                xamlMember.Setter = set_115_ItemsPageBase_Items;
                break;
            case "WinUICommunity.ItemsPageBase.PlaceholderSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PlaceholderSource", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_ItemsPageBase_PlaceholderSource;
                xamlMember.Setter = set_116_ItemsPageBase_PlaceholderSource;
                break;
            case "WinUICommunity.ItemsPageBase.IsCacheEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsCacheEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_ItemsPageBase_IsCacheEnabled;
                xamlMember.Setter = set_117_ItemsPageBase_IsCacheEnabled;
                break;
            case "WinUICommunity.ItemsPageBase.EnableLazyLoading":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EnableLazyLoading", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_ItemsPageBase_EnableLazyLoading;
                xamlMember.Setter = set_118_ItemsPageBase_EnableLazyLoading;
                break;
            case "WinUICommunity.ItemsPageBase.LazyLoadingThreshold":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LazyLoadingThreshold", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_ItemsPageBase_LazyLoadingThreshold;
                xamlMember.Setter = set_119_ItemsPageBase_LazyLoadingThreshold;
                break;
            case "WinUICommunity.ItemsPageBase.SpaceBetweenHeaderAndGridView":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SpaceBetweenHeaderAndGridView", "Microsoft.UI.Xaml.GridLength");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_ItemsPageBase_SpaceBetweenHeaderAndGridView;
                xamlMember.Setter = set_120_ItemsPageBase_SpaceBetweenHeaderAndGridView;
                break;
            case "WinUICommunity.ItemsPageBase.Stretch":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Stretch", "Microsoft.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_ItemsPageBase_Stretch;
                xamlMember.Setter = set_121_ItemsPageBase_Stretch;
                break;
            case "WinUICommunity.ItemsPageBase.NormalizedCenterPoint":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NormalizedCenterPoint", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_ItemsPageBase_NormalizedCenterPoint;
                xamlMember.Setter = set_122_ItemsPageBase_NormalizedCenterPoint;
                break;
            case "WinUICommunity.ItemsPageBase.OverlayOpacity":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "OverlayOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_ItemsPageBase_OverlayOpacity;
                xamlMember.Setter = set_123_ItemsPageBase_OverlayOpacity;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderVerticalAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderVerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_ItemsPageBase_HeaderVerticalAlignment;
                xamlMember.Setter = set_124_ItemsPageBase_HeaderVerticalAlignment;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderCornerRadius":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderCornerRadius", "Microsoft.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_ItemsPageBase_HeaderCornerRadius;
                xamlMember.Setter = set_125_ItemsPageBase_HeaderCornerRadius;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderContentMargin":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderContentMargin", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_ItemsPageBase_HeaderContentMargin;
                xamlMember.Setter = set_126_ItemsPageBase_HeaderContentMargin;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderSubtitleFontSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderSubtitleFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_ItemsPageBase_HeaderSubtitleFontSize;
                xamlMember.Setter = set_127_ItemsPageBase_HeaderSubtitleFontSize;
                break;
            case "WinUICommunity.ItemsPageBase.GridViewPadding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GridViewPadding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_ItemsPageBase_GridViewPadding;
                xamlMember.Setter = set_128_ItemsPageBase_GridViewPadding;
                break;
            case "WinUICommunity.ItemsPageBase.GridViewVerticalAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GridViewVerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_ItemsPageBase_GridViewVerticalAlignment;
                xamlMember.Setter = set_129_ItemsPageBase_GridViewVerticalAlignment;
                break;
            case "WinUICommunity.ItemsPageBase.HeaderFontSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ItemsPageBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_ItemsPageBase_HeaderFontSize;
                xamlMember.Setter = set_130_ItemsPageBase_HeaderFontSize;
                break;
            case "CommunityToolkit.WinUI.Controls.GridSplitter.ResizeDirection":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.GridSplitter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ResizeDirection", "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_GridSplitter_ResizeDirection;
                xamlMember.Setter = set_131_GridSplitter_ResizeDirection;
                break;
            case "CommunityToolkit.WinUI.Controls.GridSplitter.ResizeBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.GridSplitter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ResizeBehavior", "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_GridSplitter_ResizeBehavior;
                xamlMember.Setter = set_132_GridSplitter_ResizeBehavior;
                break;
            case "CommunityToolkit.WinUI.Controls.GridSplitter.ParentLevel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.GridSplitter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ParentLevel", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_GridSplitter_ParentLevel;
                xamlMember.Setter = set_133_GridSplitter_ParentLevel;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_135_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_NavigationView_PaneFooter;
                xamlMember.Setter = set_136_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_137_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_138_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_139_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_NavigationView_ContentOverlay;
                xamlMember.Setter = set_140_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_142_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_144_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_NavigationView_Header;
                xamlMember.Setter = set_145_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_146_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_147_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_148_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_149_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_150_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_151_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_152_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_153_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_154_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_155_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_156_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_157_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_158_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_159_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_160_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_161_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_162_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_NavigationView_PaneHeader;
                xamlMember.Setter = set_163_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_NavigationView_PaneTitle;
                xamlMember.Setter = set_164_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_165_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_NavigationView_SelectedItem;
                xamlMember.Setter = set_166_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_167_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_169_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.ShowLineHighlighter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowLineHighlighter", "Boolean");
                xamlMember.Getter = get_171_TextControlBox_ShowLineHighlighter;
                xamlMember.Setter = set_171_TextControlBox_ShowLineHighlighter;
                break;
            case "TextControlBoxNS.TextControlBox.SyntaxHighlighting":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SyntaxHighlighting", "Boolean");
                xamlMember.Getter = get_172_TextControlBox_SyntaxHighlighting;
                xamlMember.Setter = set_172_TextControlBox_SyntaxHighlighting;
                break;
            case "TextControlBoxNS.TextControlBox.IsReadonly":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsReadonly", "Boolean");
                xamlMember.Getter = get_173_TextControlBox_IsReadonly;
                xamlMember.Setter = set_173_TextControlBox_IsReadonly;
                break;
            case "TextControlBoxNS.TextControlBox.Text":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_174_TextControlBox_Text;
                xamlMember.Setter = set_174_TextControlBox_Text;
                break;
            case "TextControlBoxNS.TextControlBox.CodeLanguage":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CodeLanguage", "TextControlBoxNS.CodeLanguage");
                xamlMember.Getter = get_175_TextControlBox_CodeLanguage;
                xamlMember.Setter = set_175_TextControlBox_CodeLanguage;
                break;
            case "TextControlBoxNS.TextControlBox.LineEnding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LineEnding", "TextControlBoxNS.LineEnding");
                xamlMember.Getter = get_176_TextControlBox_LineEnding;
                xamlMember.Setter = set_176_TextControlBox_LineEnding;
                break;
            case "TextControlBoxNS.TextControlBox.SpaceBetweenLineNumberAndText":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SpaceBetweenLineNumberAndText", "Single");
                xamlMember.Getter = get_177_TextControlBox_SpaceBetweenLineNumberAndText;
                xamlMember.Setter = set_177_TextControlBox_SpaceBetweenLineNumberAndText;
                break;
            case "TextControlBoxNS.TextControlBox.CursorPosition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CursorPosition", "TextControlBoxNS.CursorPosition");
                xamlMember.Getter = get_178_TextControlBox_CursorPosition;
                xamlMember.Setter = set_178_TextControlBox_CursorPosition;
                break;
            case "TextControlBoxNS.TextControlBox.FontFamily":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_TextControlBox_FontFamily;
                xamlMember.Setter = set_179_TextControlBox_FontFamily;
                break;
            case "TextControlBoxNS.TextControlBox.FontSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_TextControlBox_FontSize;
                xamlMember.Setter = set_180_TextControlBox_FontSize;
                break;
            case "TextControlBoxNS.TextControlBox.RenderedFontSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "RenderedFontSize", "Single");
                xamlMember.Getter = get_181_TextControlBox_RenderedFontSize;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.RequestedTheme":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "RequestedTheme", "Microsoft.UI.Xaml.ElementTheme");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_TextControlBox_RequestedTheme;
                xamlMember.Setter = set_182_TextControlBox_RequestedTheme;
                break;
            case "TextControlBoxNS.TextControlBox.Design":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Design", "TextControlBoxNS.TextControlBoxDesign");
                xamlMember.Getter = get_183_TextControlBox_Design;
                xamlMember.Setter = set_183_TextControlBox_Design;
                break;
            case "TextControlBoxNS.TextControlBox.ShowLineNumbers":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowLineNumbers", "Boolean");
                xamlMember.Getter = get_184_TextControlBox_ShowLineNumbers;
                xamlMember.Setter = set_184_TextControlBox_ShowLineNumbers;
                break;
            case "TextControlBoxNS.TextControlBox.ZoomFactor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Int32");
                xamlMember.Getter = get_185_TextControlBox_ZoomFactor;
                xamlMember.Setter = set_185_TextControlBox_ZoomFactor;
                break;
            case "TextControlBoxNS.TextControlBox.CursorSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CursorSize", "TextControlBoxNS.CursorSize");
                xamlMember.Getter = get_186_TextControlBox_CursorSize;
                xamlMember.Setter = set_186_TextControlBox_CursorSize;
                break;
            case "TextControlBoxNS.TextControlBox.ContextFlyout":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_TextControlBox_ContextFlyout;
                xamlMember.Setter = set_187_TextControlBox_ContextFlyout;
                break;
            case "TextControlBoxNS.TextControlBox.ContextFlyoutDisabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContextFlyoutDisabled", "Boolean");
                xamlMember.Getter = get_188_TextControlBox_ContextFlyoutDisabled;
                xamlMember.Setter = set_188_TextControlBox_ContextFlyoutDisabled;
                break;
            case "TextControlBoxNS.TextControlBox.SelectionStart":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectionStart", "Int32");
                xamlMember.Getter = get_189_TextControlBox_SelectionStart;
                xamlMember.Setter = set_189_TextControlBox_SelectionStart;
                break;
            case "TextControlBoxNS.TextControlBox.SelectionLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectionLength", "Int32");
                xamlMember.Getter = get_190_TextControlBox_SelectionLength;
                xamlMember.Setter = set_190_TextControlBox_SelectionLength;
                break;
            case "TextControlBoxNS.TextControlBox.SelectedText":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectedText", "String");
                xamlMember.Getter = get_191_TextControlBox_SelectedText;
                xamlMember.Setter = set_191_TextControlBox_SelectedText;
                break;
            case "TextControlBoxNS.TextControlBox.NumberOfLines":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NumberOfLines", "Int32");
                xamlMember.Getter = get_192_TextControlBox_NumberOfLines;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.CurrentLineIndex":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CurrentLineIndex", "Int32");
                xamlMember.Getter = get_193_TextControlBox_CurrentLineIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.ScrollBarPosition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScrollBarPosition", "TextControlBoxNS.ScrollBarPosition");
                xamlMember.Getter = get_194_TextControlBox_ScrollBarPosition;
                xamlMember.Setter = set_194_TextControlBox_ScrollBarPosition;
                break;
            case "TextControlBoxNS.TextControlBox.CharacterCount":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CharacterCount", "Int32");
                xamlMember.Getter = get_195_TextControlBox_CharacterCount;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.VerticalScrollSensitivity":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalScrollSensitivity", "Double");
                xamlMember.Getter = get_196_TextControlBox_VerticalScrollSensitivity;
                xamlMember.Setter = set_196_TextControlBox_VerticalScrollSensitivity;
                break;
            case "TextControlBoxNS.TextControlBox.HorizontalScrollSensitivity":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalScrollSensitivity", "Double");
                xamlMember.Getter = get_197_TextControlBox_HorizontalScrollSensitivity;
                xamlMember.Setter = set_197_TextControlBox_HorizontalScrollSensitivity;
                break;
            case "TextControlBoxNS.TextControlBox.VerticalScroll":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalScroll", "Double");
                xamlMember.Getter = get_198_TextControlBox_VerticalScroll;
                xamlMember.Setter = set_198_TextControlBox_VerticalScroll;
                break;
            case "TextControlBoxNS.TextControlBox.HorizontalScroll":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalScroll", "Double");
                xamlMember.Getter = get_199_TextControlBox_HorizontalScroll;
                xamlMember.Setter = set_199_TextControlBox_HorizontalScroll;
                break;
            case "TextControlBoxNS.TextControlBox.CornerRadius":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CornerRadius", "Microsoft.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_200_TextControlBox_CornerRadius;
                xamlMember.Setter = set_200_TextControlBox_CornerRadius;
                break;
            case "TextControlBoxNS.TextControlBox.UseSpacesInsteadTabs":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "UseSpacesInsteadTabs", "Boolean");
                xamlMember.Getter = get_201_TextControlBox_UseSpacesInsteadTabs;
                xamlMember.Setter = set_201_TextControlBox_UseSpacesInsteadTabs;
                break;
            case "TextControlBoxNS.TextControlBox.NumberOfSpacesForTab":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NumberOfSpacesForTab", "Int32");
                xamlMember.Getter = get_202_TextControlBox_NumberOfSpacesForTab;
                xamlMember.Setter = set_202_TextControlBox_NumberOfSpacesForTab;
                break;
            case "TextControlBoxNS.TextControlBox.SearchIsOpen":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SearchIsOpen", "Boolean");
                xamlMember.Getter = get_203_TextControlBox_SearchIsOpen;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.Lines":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Lines", "System.Collections.Generic.IEnumerable`1<String>");
                xamlMember.Getter = get_204_TextControlBox_Lines;
                xamlMember.SetIsReadOnly();
                break;
            case "TextControlBoxNS.TextControlBox.DoAutoPairing":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TextControlBoxNS.TextControlBox");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DoAutoPairing", "Boolean");
                xamlMember.Getter = get_205_TextControlBox_DoAutoPairing;
                xamlMember.Setter = set_205_TextControlBox_DoAutoPairing;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItems":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_206_TabView_TabItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AddTabButtonCommand":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AddTabButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_207_TabView_AddTabButtonCommand;
                xamlMember.Setter = set_207_TabView_AddTabButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AddTabButtonCommandParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AddTabButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_208_TabView_AddTabButtonCommandParameter;
                xamlMember.Setter = set_208_TabView_AddTabButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AllowDropTabs":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AllowDropTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_209_TabView_AllowDropTabs;
                xamlMember.Setter = set_209_TabView_AllowDropTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanDragTabs":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CanDragTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_210_TabView_CanDragTabs;
                xamlMember.Setter = set_210_TabView_CanDragTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanReorderTabs":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CanReorderTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_211_TabView_CanReorderTabs;
                xamlMember.Setter = set_211_TabView_CanReorderTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanTearOutTabs":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CanTearOutTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_212_TabView_CanTearOutTabs;
                xamlMember.Setter = set_212_TabView_CanTearOutTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CloseButtonOverlayMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CloseButtonOverlayMode", "Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_213_TabView_CloseButtonOverlayMode;
                xamlMember.Setter = set_213_TabView_CloseButtonOverlayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.IsAddTabButtonVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAddTabButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_214_TabView_IsAddTabButtonVisible;
                xamlMember.Setter = set_214_TabView_IsAddTabButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.SelectedIndex":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_215_TabView_SelectedIndex;
                xamlMember.Setter = set_215_TabView_SelectedIndex;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.SelectedItem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_216_TabView_SelectedItem;
                xamlMember.Setter = set_216_TabView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_217_TabView_TabItemTemplate;
                xamlMember.Setter = set_217_TabView_TabItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemTemplateSelector":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_218_TabView_TabItemTemplateSelector;
                xamlMember.Setter = set_218_TabView_TabItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_219_TabView_TabItemsSource;
                xamlMember.Setter = set_219_TabView_TabItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripFooter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabStripFooter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_220_TabView_TabStripFooter;
                xamlMember.Setter = set_220_TabView_TabStripFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripFooterTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabStripFooterTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_221_TabView_TabStripFooterTemplate;
                xamlMember.Setter = set_221_TabView_TabStripFooterTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripHeader":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabStripHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_TabView_TabStripHeader;
                xamlMember.Setter = set_222_TabView_TabStripHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripHeaderTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabStripHeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_TabView_TabStripHeaderTemplate;
                xamlMember.Setter = set_223_TabView_TabStripHeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabWidthMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TabWidthMode", "Microsoft.UI.Xaml.Controls.TabViewWidthMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_224_TabView_TabWidthMode;
                xamlMember.Setter = set_224_TabView_TabWidthMode;
                break;
            case "CommunityToolkit.WinUI.FontIconExtension.Glyph":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.FontIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.Getter = get_225_FontIconExtension_Glyph;
                xamlMember.Setter = set_225_FontIconExtension_Glyph;
                break;
            case "CommunityToolkit.WinUI.FontIconExtension.FontFamily":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.FontIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.Getter = get_226_FontIconExtension_FontFamily;
                xamlMember.Setter = set_226_FontIconExtension_FontFamily;
                break;
            case "CommunityToolkit.WinUI.TextIconExtension.FontSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_227_TextIconExtension_FontSize;
                xamlMember.Setter = set_227_TextIconExtension_FontSize;
                break;
            case "CommunityToolkit.WinUI.TextIconExtension.FontWeight":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.Getter = get_228_TextIconExtension_FontWeight;
                xamlMember.Setter = set_228_TextIconExtension_FontWeight;
                break;
            case "CommunityToolkit.WinUI.TextIconExtension.FontStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_229_TextIconExtension_FontStyle;
                xamlMember.Setter = set_229_TextIconExtension_FontStyle;
                break;
            case "CommunityToolkit.WinUI.TextIconExtension.Foreground":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_230_TextIconExtension_Foreground;
                xamlMember.Setter = set_230_TextIconExtension_Foreground;
                break;
            case "CommunityToolkit.WinUI.TextIconExtension.IsTextScaleFactorEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsTextScaleFactorEnabled", "Boolean");
                xamlMember.Getter = get_231_TextIconExtension_IsTextScaleFactorEnabled;
                xamlMember.Setter = set_231_TextIconExtension_IsTextScaleFactorEnabled;
                break;
            case "CommunityToolkit.WinUI.TextIconExtension.MirroredWhenRightToLeft":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MirroredWhenRightToLeft", "Boolean");
                xamlMember.Getter = get_232_TextIconExtension_MirroredWhenRightToLeft;
                xamlMember.Setter = set_232_TextIconExtension_MirroredWhenRightToLeft;
                break;
            case "CommunityToolkit.WinUI.Controls.TabbedCommandBarItem.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.TabbedCommandBarItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_233_TabbedCommandBarItem_Header;
                xamlMember.Setter = set_233_TabbedCommandBarItem_Header;
                break;
            case "CommunityToolkit.WinUI.Controls.TabbedCommandBarItem.IsContextual":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.TabbedCommandBarItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsContextual", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_234_TabbedCommandBarItem_IsContextual;
                xamlMember.Setter = set_234_TabbedCommandBarItem_IsContextual;
                break;
            case "CommunityToolkit.WinUI.Controls.TabbedCommandBarItem.OverflowButtonAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.TabbedCommandBarItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "OverflowButtonAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_235_TabbedCommandBarItem_OverflowButtonAlignment;
                xamlMember.Setter = set_235_TabbedCommandBarItem_OverflowButtonAlignment;
                break;
            case "CommunityToolkit.WinUI.Controls.TabbedCommandBarItem.CommandAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.TabbedCommandBarItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CommandAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_236_TabbedCommandBarItem_CommandAlignment;
                xamlMember.Setter = set_236_TabbedCommandBarItem_CommandAlignment;
                break;
            case "Microsoft.UI.Xaml.Controls.SplitButton.Flyout":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SplitButton");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Flyout", "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_237_SplitButton_Flyout;
                xamlMember.Setter = set_237_SplitButton_Flyout;
                break;
            case "Microsoft.UI.Xaml.Controls.SplitButton.Command":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SplitButton");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_238_SplitButton_Command;
                xamlMember.Setter = set_238_SplitButton_Command;
                break;
            case "Microsoft.UI.Xaml.Controls.SplitButton.CommandParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SplitButton");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_239_SplitButton_CommandParameter;
                xamlMember.Setter = set_239_SplitButton_CommandParameter;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.Series":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_240_SfCartesianChart_Series;
                xamlMember.Setter = set_240_SfCartesianChart_Series;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.DataLabelSettings":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DataLabelSettings", "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_241_CartesianSeries_DataLabelSettings;
                xamlMember.Setter = set_241_CartesianSeries_DataLabelSettings;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxisName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "XAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_242_CartesianSeries_XAxisName;
                xamlMember.Setter = set_242_CartesianSeries_XAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxisName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "YAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_243_CartesianSeries_YAxisName;
                xamlMember.Setter = set_243_CartesianSeries_YAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.ShowTrackballLabel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowTrackballLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_244_CartesianSeries_ShowTrackballLabel;
                xamlMember.Setter = set_244_CartesianSeries_ShowTrackballLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.SelectionBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectionBehavior", "Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_245_ChartSeries_SelectionBehavior;
                xamlMember.Setter = set_245_ChartSeries_SelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.PaletteBrushes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaletteBrushes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_246_ChartSeries_PaletteBrushes;
                xamlMember.Setter = set_246_ChartSeries_PaletteBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.TooltipTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TooltipTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_247_ChartSeries_TooltipTemplate;
                xamlMember.Setter = set_247_ChartSeries_TooltipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.EnableTooltip":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EnableTooltip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_248_ChartSeries_EnableTooltip;
                xamlMember.Setter = set_248_ChartSeries_EnableTooltip;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ListenPropertyChange":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ListenPropertyChange", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_249_ChartSeries_ListenPropertyChange;
                xamlMember.Setter = set_249_ChartSeries_ListenPropertyChange;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.IsSeriesVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSeriesVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_250_ChartSeries_IsSeriesVisible;
                xamlMember.Setter = set_250_ChartSeries_IsSeriesVisible;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_251_ChartSeries_ItemsSource;
                xamlMember.Setter = set_251_ChartSeries_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.TrackballLabelTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TrackballLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_252_ChartSeries_TrackballLabelTemplate;
                xamlMember.Setter = set_252_ChartSeries_TrackballLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Fill":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Fill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_253_ChartSeries_Fill;
                xamlMember.Setter = set_253_ChartSeries_Fill;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Label":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_254_ChartSeries_Label;
                xamlMember.Setter = set_254_ChartSeries_Label;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.LegendIcon":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LegendIcon", "Syncfusion.UI.Xaml.Charts.ChartLegendIcon");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_255_ChartSeries_LegendIcon;
                xamlMember.Setter = set_255_ChartSeries_LegendIcon;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.LegendIconTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LegendIconTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_256_ChartSeries_LegendIconTemplate;
                xamlMember.Setter = set_256_ChartSeries_LegendIconTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.IsVisibleOnLegend":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsVisibleOnLegend", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_257_ChartSeries_IsVisibleOnLegend;
                xamlMember.Setter = set_257_ChartSeries_IsVisibleOnLegend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.XBindingPath":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "XBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_258_ChartSeries_XBindingPath;
                xamlMember.Setter = set_258_ChartSeries_XBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.EnableAnimation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_259_ChartSeries_EnableAnimation;
                xamlMember.Setter = set_259_ChartSeries_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.AnimationDuration":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AnimationDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_260_ChartSeries_AnimationDuration;
                xamlMember.Setter = set_260_ChartSeries_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Chart":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Chart", "Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember.Getter = get_261_ChartSeries_Chart;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ShowDataLabels":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowDataLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_262_ChartSeries_ShowDataLabels;
                xamlMember.Setter = set_262_ChartSeries_ShowDataLabels;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ActualXAxis":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ActualXAxis", "Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember.Getter = get_263_ChartSeries_ActualXAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ActualYAxis":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ActualYAxis", "Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember.Getter = get_264_ChartSeries_ActualYAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.XAxes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "XAxes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>");
                xamlMember.Getter = get_265_SfCartesianChart_XAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleMinimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VisibleMinimum", "Double");
                xamlMember.Getter = get_266_ChartAxis_VisibleMinimum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleMaximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VisibleMaximum", "Double");
                xamlMember.Getter = get_267_ChartAxis_VisibleMaximum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PlotOffsetStart", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_268_ChartAxis_PlotOffsetStart;
                xamlMember.Setter = set_268_ChartAxis_PlotOffsetStart;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PlotOffsetEnd", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_269_ChartAxis_PlotOffsetEnd;
                xamlMember.Setter = set_269_ChartAxis_PlotOffsetEnd;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AxisLineOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_270_ChartAxis_AxisLineOffset;
                xamlMember.Setter = set_270_ChartAxis_AxisLineOffset;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LabelRotation", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_271_ChartAxis_LabelRotation;
                xamlMember.Setter = set_271_ChartAxis_LabelRotation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AxisLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_272_ChartAxis_AxisLineStyle;
                xamlMember.Setter = set_272_ChartAxis_AxisLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LabelStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_273_ChartAxis_LabelStyle;
                xamlMember.Setter = set_273_ChartAxis_LabelStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_274_ChartAxis_Header;
                xamlMember.Setter = set_274_ChartAxis_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_275_ChartAxis_HeaderStyle;
                xamlMember.Setter = set_275_ChartAxis_HeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_276_ChartAxis_HeaderTemplate;
                xamlMember.Setter = set_276_ChartAxis_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsInversed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_277_ChartAxis_IsInversed;
                xamlMember.Setter = set_277_ChartAxis_IsInversed;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EdgeLabelsDrawingMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_278_ChartAxis_EdgeLabelsDrawingMode;
                xamlMember.Setter = set_278_ChartAxis_EdgeLabelsDrawingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MajorGridLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_279_ChartAxis_MajorGridLineStyle;
                xamlMember.Setter = set_279_ChartAxis_MajorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MajorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_280_ChartAxis_MajorTickStyle;
                xamlMember.Setter = set_280_ChartAxis_MajorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ZoomPosition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomPosition", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_281_ChartAxis_ZoomPosition;
                xamlMember.Setter = set_281_ChartAxis_ZoomPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ZoomFactor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_282_ChartAxis_ZoomFactor;
                xamlMember.Setter = set_282_ChartAxis_ZoomFactor;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowMajorGridLines":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowMajorGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_283_ChartAxis_ShowMajorGridLines;
                xamlMember.Setter = set_283_ChartAxis_ShowMajorGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EnableAutoIntervalOnZooming", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_284_ChartAxis_EnableAutoIntervalOnZooming;
                xamlMember.Setter = set_284_ChartAxis_EnableAutoIntervalOnZooming;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LabelsIntersectAction", "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_285_ChartAxis_LabelsIntersectAction;
                xamlMember.Setter = set_285_ChartAxis_LabelsIntersectAction;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LabelExtent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_286_ChartAxis_LabelExtent;
                xamlMember.Setter = set_286_ChartAxis_LabelExtent;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "OpposedPosition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_287_ChartAxis_OpposedPosition;
                xamlMember.Setter = set_287_ChartAxis_OpposedPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_288_ChartAxis_TickLineSize;
                xamlMember.Setter = set_288_ChartAxis_TickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackballLabel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowTrackballLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_289_ChartAxis_ShowTrackballLabel;
                xamlMember.Setter = set_289_ChartAxis_ShowTrackballLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TrackballLabelTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TrackballLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_290_ChartAxis_TrackballLabelTemplate;
                xamlMember.Setter = set_290_ChartAxis_TrackballLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CrosshairLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_291_ChartAxis_CrosshairLabelTemplate;
                xamlMember.Setter = set_291_ChartAxis_CrosshairLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_292_ChartAxis_LabelTemplate;
                xamlMember.Setter = set_292_ChartAxis_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AutoScrollingMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AutoScrollingMode", "Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_293_ChartAxis_AutoScrollingMode;
                xamlMember.Setter = set_293_ChartAxis_AutoScrollingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AutoScrollingDelta":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AutoScrollingDelta", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_294_ChartAxis_AutoScrollingDelta;
                xamlMember.Setter = set_294_ChartAxis_AutoScrollingDelta;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.YAxes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "YAxes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>");
                xamlMember.Getter = get_295_SfCartesianChart_YAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.EdgeLabelsVisibilityMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EdgeLabelsVisibilityMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_296_RangeAxisBase_EdgeLabelsVisibilityMode;
                xamlMember.Setter = set_296_RangeAxisBase_EdgeLabelsVisibilityMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTicksPerInterval":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinorTicksPerInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_297_RangeAxisBase_MinorTicksPerInterval;
                xamlMember.Setter = set_297_RangeAxisBase_MinorTicksPerInterval;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTickLineSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinorTickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_298_RangeAxisBase_MinorTickLineSize;
                xamlMember.Setter = set_298_RangeAxisBase_MinorTickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorGridLineStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinorGridLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_299_RangeAxisBase_MinorGridLineStyle;
                xamlMember.Setter = set_299_RangeAxisBase_MinorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTickStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_300_RangeAxisBase_MinorTickStyle;
                xamlMember.Setter = set_300_RangeAxisBase_MinorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.ShowMinorGridLines":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowMinorGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_301_RangeAxisBase_ShowMinorGridLines;
                xamlMember.Setter = set_301_RangeAxisBase_ShowMinorGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.SelectionBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectionBehavior", "Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_302_SfCartesianChart_SelectionBehavior;
                xamlMember.Setter = set_302_SfCartesianChart_SelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.ZoomPanBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomPanBehavior", "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_303_SfCartesianChart_ZoomPanBehavior;
                xamlMember.Setter = set_303_SfCartesianChart_ZoomPanBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.TrackballBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TrackballBehavior", "Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_304_SfCartesianChart_TrackballBehavior;
                xamlMember.Setter = set_304_SfCartesianChart_TrackballBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.CrosshairBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CrosshairBehavior", "Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_305_SfCartesianChart_CrosshairBehavior;
                xamlMember.Setter = set_305_SfCartesianChart_CrosshairBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PaletteBrushes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PaletteBrushes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_306_SfCartesianChart_PaletteBrushes;
                xamlMember.Setter = set_306_SfCartesianChart_PaletteBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBorderBrush":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PlotAreaBorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_307_SfCartesianChart_PlotAreaBorderBrush;
                xamlMember.Setter = set_307_SfCartesianChart_PlotAreaBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBorderThickness":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PlotAreaBorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_308_SfCartesianChart_PlotAreaBorderThickness;
                xamlMember.Setter = set_308_SfCartesianChart_PlotAreaBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBackground":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PlotAreaBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_309_SfCartesianChart_PlotAreaBackground;
                xamlMember.Setter = set_309_SfCartesianChart_PlotAreaBackground;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.IsTransposed":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsTransposed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_310_SfCartesianChart_IsTransposed;
                xamlMember.Setter = set_310_SfCartesianChart_IsTransposed;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.EnableSideBySideSeriesPlacement":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EnableSideBySideSeriesPlacement", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_311_SfCartesianChart_EnableSideBySideSeriesPlacement;
                xamlMember.Setter = set_311_SfCartesianChart_EnableSideBySideSeriesPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Legend":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Legend", "Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_312_ChartBase_Legend;
                xamlMember.Setter = set_312_ChartBase_Legend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.TooltipBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TooltipBehavior", "Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_313_ChartBase_TooltipBehavior;
                xamlMember.Setter = set_313_ChartBase_TooltipBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.InteractiveBehavior":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "InteractiveBehavior", "Syncfusion.UI.Xaml.Charts.ChartInteractiveBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_314_ChartBase_InteractiveBehavior;
                xamlMember.Setter = set_314_ChartBase_InteractiveBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.SeriesClipRect":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SeriesClipRect", "Windows.Foundation.Rect");
                xamlMember.Getter = get_315_ChartBase_SeriesClipRect;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_316_ChartBase_Header;
                xamlMember.Setter = set_316_ChartBase_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalHeaderAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_317_ChartBase_HorizontalHeaderAlignment;
                xamlMember.Setter = set_317_ChartBase_HorizontalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalHeaderAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_318_ChartBase_VerticalHeaderAlignment;
                xamlMember.Setter = set_318_ChartBase_VerticalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.CategoryAxis.Interval":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CategoryAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_319_CategoryAxis_Interval;
                xamlMember.Setter = set_319_CategoryAxis_Interval;
                break;
            case "Syncfusion.UI.Xaml.Charts.CategoryAxis.LabelPlacement":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CategoryAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LabelPlacement", "Syncfusion.UI.Xaml.Charts.LabelPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_320_CategoryAxis_LabelPlacement;
                xamlMember.Setter = set_320_CategoryAxis_LabelPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Interval":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_321_NumericalAxis_Interval;
                xamlMember.Setter = set_321_NumericalAxis_Interval;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Minimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_322_NumericalAxis_Minimum;
                xamlMember.Setter = set_322_NumericalAxis_Minimum;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Maximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_323_NumericalAxis_Maximum;
                xamlMember.Setter = set_323_NumericalAxis_Maximum;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.RangePadding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "RangePadding", "Syncfusion.UI.Xaml.Charts.NumericalPadding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_324_NumericalAxis_RangePadding;
                xamlMember.Setter = set_324_NumericalAxis_RangePadding;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.ActualMinimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ActualMinimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_325_NumericalAxis_ActualMinimum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.ActualMaximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ActualMaximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_326_NumericalAxis_ActualMaximum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "YBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_327_XyDataSeries_YBindingPath;
                xamlMember.Setter = set_327_XyDataSeries_YBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSpacing":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ColumnSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SegmentSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_328_ColumnSeries_SegmentSpacing;
                xamlMember.Setter = set_328_ColumnSeries_SegmentSpacing;
                break;
            case "Syncfusion.UI.Xaml.Charts.ColumnSeries.CustomTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ColumnSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CustomTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_329_ColumnSeries_CustomTemplate;
                xamlMember.Setter = set_329_ColumnSeries_CustomTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ColumnSeries.Stroke":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ColumnSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Stroke", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_330_ColumnSeries_Stroke;
                xamlMember.Setter = set_330_ColumnSeries_Stroke;
                break;
            case "Syncfusion.UI.Xaml.Charts.XyDataSeries.StrokeWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "StrokeWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_331_XyDataSeries_StrokeWidth;
                xamlMember.Setter = set_331_XyDataSeries_StrokeWidth;
                break;
            case "ACOMv2.Views.HomeLandingPage.AppInfo":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.HomeLandingPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AppInfo", "String");
                xamlMember.Getter = get_332_HomeLandingPage_AppInfo;
                xamlMember.Setter = set_332_HomeLandingPage_AppInfo;
                break;
            case "ACOMv2.Views.HomeLandingPage.ViewModel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.HomeLandingPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewModel", "ACOMv2.ViewModels.HomeLandingViewModel");
                xamlMember.Getter = get_333_HomeLandingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.TitleBar.Title":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_334_TitleBar_Title;
                xamlMember.Setter = set_334_TitleBar_Title;
                break;
            case "WinUICommunity.TitleBar.IconSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_335_TitleBar_IconSource;
                xamlMember.Setter = set_335_TitleBar_IconSource;
                break;
            case "WinUICommunity.TitleBar.IsBackButtonVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_336_TitleBar_IsBackButtonVisible;
                xamlMember.Setter = set_336_TitleBar_IsBackButtonVisible;
                break;
            case "WinUICommunity.TitleBar.IsPaneToggleButtonVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_337_TitleBar_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_337_TitleBar_IsPaneToggleButtonVisible;
                break;
            case "WinUICommunity.TitleBar.Subtitle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Subtitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_338_TitleBar_Subtitle;
                xamlMember.Setter = set_338_TitleBar_Subtitle;
                break;
            case "WinUICommunity.TitleBar.Content":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_339_TitleBar_Content;
                xamlMember.Setter = set_339_TitleBar_Content;
                break;
            case "WinUICommunity.TitleBar.Footer":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Footer", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_340_TitleBar_Footer;
                xamlMember.Setter = set_340_TitleBar_Footer;
                break;
            case "WinUICommunity.TitleBar.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_341_TitleBar_Header;
                xamlMember.Setter = set_341_TitleBar_Header;
                break;
            case "WinUICommunity.TitleBar.IsBackEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_342_TitleBar_IsBackEnabled;
                xamlMember.Setter = set_342_TitleBar_IsBackEnabled;
                break;
            case "WinUICommunity.TitleBar.TemplateSettings":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TitleBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TemplateSettings", "WinUICommunity.TitleBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_343_TitleBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BreadcrumbNavigator.BreadCrumbs":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "BreadCrumbs", "System.Collections.ObjectModel.ObservableCollection`1<WinUICommunity.NavigationBreadcrumb>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_344_BreadcrumbNavigator_BreadCrumbs;
                xamlMember.Setter = set_344_BreadcrumbNavigator_BreadCrumbs;
                break;
            case "WinUICommunity.NavigationBreadcrumb.Label":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationBreadcrumb");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.Getter = get_345_NavigationBreadcrumb_Label;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.NavigationBreadcrumb.Page":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationBreadcrumb");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Page", "System.Type");
                xamlMember.Getter = get_346_NavigationBreadcrumb_Page;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.NavigationBreadcrumb.Parameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationBreadcrumb");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Parameter", "Object");
                xamlMember.Getter = get_347_NavigationBreadcrumb_Parameter;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BreadcrumbNavigator.UseBuiltInEventForFrame":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "UseBuiltInEventForFrame", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_348_BreadcrumbNavigator_UseBuiltInEventForFrame;
                xamlMember.Setter = set_348_BreadcrumbNavigator_UseBuiltInEventForFrame;
                break;
            case "WinUICommunity.BreadcrumbNavigator.Frame":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Frame", "Microsoft.UI.Xaml.Controls.Frame");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_349_BreadcrumbNavigator_Frame;
                xamlMember.Setter = set_349_BreadcrumbNavigator_Frame;
                break;
            case "WinUICommunity.BreadcrumbNavigator.PageDictionary":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PageDictionary", "System.Collections.Generic.Dictionary`2<System.Type, WinUICommunity.BreadcrumbPageConfig>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_350_BreadcrumbNavigator_PageDictionary;
                xamlMember.Setter = set_350_BreadcrumbNavigator_PageDictionary;
                break;
            case "WinUICommunity.BreadcrumbPageConfig.PageTitle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbPageConfig");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PageTitle", "String");
                xamlMember.Getter = get_351_BreadcrumbPageConfig_PageTitle;
                xamlMember.Setter = set_351_BreadcrumbPageConfig_PageTitle;
                break;
            case "WinUICommunity.BreadcrumbPageConfig.IsHeaderVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbPageConfig");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsHeaderVisible", "Boolean");
                xamlMember.Getter = get_352_BreadcrumbPageConfig_IsHeaderVisible;
                xamlMember.Setter = set_352_BreadcrumbPageConfig_IsHeaderVisible;
                break;
            case "WinUICommunity.BreadcrumbPageConfig.ClearNavigation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbPageConfig");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ClearNavigation", "Boolean");
                xamlMember.Getter = get_353_BreadcrumbPageConfig_ClearNavigation;
                xamlMember.Setter = set_353_BreadcrumbPageConfig_ClearNavigation;
                break;
            case "System.Type.Assembly":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Assembly", "System.Reflection.Assembly");
                xamlMember.Getter = get_354_Type_Assembly;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.AssemblyQualifiedName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AssemblyQualifiedName", "String");
                xamlMember.Getter = get_355_Type_AssemblyQualifiedName;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.Attributes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Attributes", "System.Reflection.TypeAttributes");
                xamlMember.Getter = get_356_Type_Attributes;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.BaseType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "BaseType", "System.Type");
                xamlMember.Getter = get_357_Type_BaseType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.ContainsGenericParameters":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContainsGenericParameters", "Boolean");
                xamlMember.Getter = get_358_Type_ContainsGenericParameters;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.DeclaringMethod":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DeclaringMethod", "System.Reflection.MethodBase");
                xamlMember.Getter = get_359_Type_DeclaringMethod;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.DeclaringType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "DeclaringType", "System.Type");
                xamlMember.Getter = get_360_Type_DeclaringType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.FullName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FullName", "String");
                xamlMember.Getter = get_361_Type_FullName;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GenericParameterAttributes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GenericParameterAttributes", "System.Reflection.GenericParameterAttributes");
                xamlMember.Getter = get_362_Type_GenericParameterAttributes;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GenericParameterPosition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GenericParameterPosition", "Int32");
                xamlMember.Getter = get_363_Type_GenericParameterPosition;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GenericTypeArguments":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GenericTypeArguments", "System.Type[]");
                xamlMember.Getter = get_364_Type_GenericTypeArguments;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.GUID":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GUID", "Guid");
                xamlMember.Getter = get_365_Type_GUID;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.HasElementType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HasElementType", "Boolean");
                xamlMember.Getter = get_366_Type_HasElementType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAbstract":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAbstract", "Boolean");
                xamlMember.Getter = get_367_Type_IsAbstract;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAnsiClass":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAnsiClass", "Boolean");
                xamlMember.Getter = get_368_Type_IsAnsiClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsArray":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsArray", "Boolean");
                xamlMember.Getter = get_369_Type_IsArray;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAutoClass":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAutoClass", "Boolean");
                xamlMember.Getter = get_370_Type_IsAutoClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsAutoLayout":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsAutoLayout", "Boolean");
                xamlMember.Getter = get_371_Type_IsAutoLayout;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsByRef":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsByRef", "Boolean");
                xamlMember.Getter = get_372_Type_IsByRef;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsByRefLike":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsByRefLike", "Boolean");
                xamlMember.Getter = get_373_Type_IsByRefLike;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsClass":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsClass", "Boolean");
                xamlMember.Getter = get_374_Type_IsClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsCOMObject":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsCOMObject", "Boolean");
                xamlMember.Getter = get_375_Type_IsCOMObject;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsConstructedGenericType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsConstructedGenericType", "Boolean");
                xamlMember.Getter = get_376_Type_IsConstructedGenericType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsContextful":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsContextful", "Boolean");
                xamlMember.Getter = get_377_Type_IsContextful;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsEnum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsEnum", "Boolean");
                xamlMember.Getter = get_378_Type_IsEnum;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsExplicitLayout":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsExplicitLayout", "Boolean");
                xamlMember.Getter = get_379_Type_IsExplicitLayout;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsFunctionPointer":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsFunctionPointer", "Boolean");
                xamlMember.Getter = get_380_Type_IsFunctionPointer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericMethodParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsGenericMethodParameter", "Boolean");
                xamlMember.Getter = get_381_Type_IsGenericMethodParameter;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsGenericParameter", "Boolean");
                xamlMember.Getter = get_382_Type_IsGenericParameter;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsGenericType", "Boolean");
                xamlMember.Getter = get_383_Type_IsGenericType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericTypeDefinition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsGenericTypeDefinition", "Boolean");
                xamlMember.Getter = get_384_Type_IsGenericTypeDefinition;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsGenericTypeParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsGenericTypeParameter", "Boolean");
                xamlMember.Getter = get_385_Type_IsGenericTypeParameter;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsImport":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsImport", "Boolean");
                xamlMember.Getter = get_386_Type_IsImport;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsInterface":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsInterface", "Boolean");
                xamlMember.Getter = get_387_Type_IsInterface;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsLayoutSequential":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsLayoutSequential", "Boolean");
                xamlMember.Getter = get_388_Type_IsLayoutSequential;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsMarshalByRef":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsMarshalByRef", "Boolean");
                xamlMember.Getter = get_389_Type_IsMarshalByRef;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNested":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNested", "Boolean");
                xamlMember.Getter = get_390_Type_IsNested;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedAssembly":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNestedAssembly", "Boolean");
                xamlMember.Getter = get_391_Type_IsNestedAssembly;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedFamANDAssem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNestedFamANDAssem", "Boolean");
                xamlMember.Getter = get_392_Type_IsNestedFamANDAssem;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedFamily":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNestedFamily", "Boolean");
                xamlMember.Getter = get_393_Type_IsNestedFamily;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedFamORAssem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNestedFamORAssem", "Boolean");
                xamlMember.Getter = get_394_Type_IsNestedFamORAssem;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedPrivate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNestedPrivate", "Boolean");
                xamlMember.Getter = get_395_Type_IsNestedPrivate;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNestedPublic":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNestedPublic", "Boolean");
                xamlMember.Getter = get_396_Type_IsNestedPublic;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsNotPublic":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsNotPublic", "Boolean");
                xamlMember.Getter = get_397_Type_IsNotPublic;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsPointer":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPointer", "Boolean");
                xamlMember.Getter = get_398_Type_IsPointer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsPrimitive":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPrimitive", "Boolean");
                xamlMember.Getter = get_399_Type_IsPrimitive;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsPublic":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsPublic", "Boolean");
                xamlMember.Getter = get_400_Type_IsPublic;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSealed":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSealed", "Boolean");
                xamlMember.Getter = get_401_Type_IsSealed;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSecurityCritical":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSecurityCritical", "Boolean");
                xamlMember.Getter = get_402_Type_IsSecurityCritical;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSecuritySafeCritical":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSecuritySafeCritical", "Boolean");
                xamlMember.Getter = get_403_Type_IsSecuritySafeCritical;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSecurityTransparent":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSecurityTransparent", "Boolean");
                xamlMember.Getter = get_404_Type_IsSecurityTransparent;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSerializable":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSerializable", "Boolean");
                xamlMember.Getter = get_405_Type_IsSerializable;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSignatureType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSignatureType", "Boolean");
                xamlMember.Getter = get_406_Type_IsSignatureType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSpecialName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSpecialName", "Boolean");
                xamlMember.Getter = get_407_Type_IsSpecialName;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsSZArray":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSZArray", "Boolean");
                xamlMember.Getter = get_408_Type_IsSZArray;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsTypeDefinition":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsTypeDefinition", "Boolean");
                xamlMember.Getter = get_409_Type_IsTypeDefinition;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsUnicodeClass":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsUnicodeClass", "Boolean");
                xamlMember.Getter = get_410_Type_IsUnicodeClass;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsUnmanagedFunctionPointer":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsUnmanagedFunctionPointer", "Boolean");
                xamlMember.Getter = get_411_Type_IsUnmanagedFunctionPointer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsValueType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsValueType", "Boolean");
                xamlMember.Getter = get_412_Type_IsValueType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsVariableBoundArray":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsVariableBoundArray", "Boolean");
                xamlMember.Getter = get_413_Type_IsVariableBoundArray;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.IsVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.Getter = get_414_Type_IsVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.MemberType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MemberType", "System.Reflection.MemberTypes");
                xamlMember.Getter = get_415_Type_MemberType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.Module":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Module", "System.Reflection.Module");
                xamlMember.Getter = get_416_Type_Module;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.Namespace":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Namespace", "String");
                xamlMember.Getter = get_417_Type_Namespace;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.ReflectedType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ReflectedType", "System.Type");
                xamlMember.Getter = get_418_Type_ReflectedType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.StructLayoutAttribute":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "StructLayoutAttribute", "System.Runtime.InteropServices.StructLayoutAttribute");
                xamlMember.Getter = get_419_Type_StructLayoutAttribute;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.TypeHandle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TypeHandle", "System.RuntimeTypeHandle");
                xamlMember.Getter = get_420_Type_TypeHandle;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.TypeInitializer":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TypeInitializer", "System.Reflection.ConstructorInfo");
                xamlMember.Getter = get_421_Type_TypeInitializer;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Type.UnderlyingSystemType":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Type");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "UnderlyingSystemType", "System.Type");
                xamlMember.Getter = get_422_Type_UnderlyingSystemType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.CustomAttributes":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CustomAttributes", "System.Collections.Generic.IEnumerable`1<System.Reflection.CustomAttributeData>");
                xamlMember.Getter = get_423_MemberInfo_CustomAttributes;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.IsCollectible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsCollectible", "Boolean");
                xamlMember.Getter = get_424_MemberInfo_IsCollectible;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.MetadataToken":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MetadataToken", "Int32");
                xamlMember.Getter = get_425_MemberInfo_MetadataToken;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Reflection.MemberInfo.Name":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Reflection.MemberInfo");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_426_MemberInfo_Name;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BreadcrumbNavigator.NavigationView":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NavigationView", "Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_427_BreadcrumbNavigator_NavigationView;
                xamlMember.Setter = set_427_BreadcrumbNavigator_NavigationView;
                break;
            case "WinUICommunity.BreadcrumbNavigator.HeaderVisibilityOptions":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderVisibilityOptions", "WinUICommunity.BreadcrumbNavigatorHeaderVisibilityOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_428_BreadcrumbNavigator_HeaderVisibilityOptions;
                xamlMember.Setter = set_428_BreadcrumbNavigator_HeaderVisibilityOptions;
                break;
            case "Microsoft.UI.Xaml.Controls.BreadcrumbBar.ItemTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_429_BreadcrumbBar_ItemTemplate;
                xamlMember.Setter = set_429_BreadcrumbBar_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.BreadcrumbBar.ItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_430_BreadcrumbBar_ItemsSource;
                xamlMember.Setter = set_430_BreadcrumbBar_ItemsSource;
                break;
            case "WinUICommunity.BreadcrumbNavigator.IsHeaderVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsHeaderVisible", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_431_BreadcrumbNavigator_IsHeaderVisible;
                xamlMember.Setter = set_431_BreadcrumbNavigator_IsHeaderVisible;
                break;
            case "WinUICommunity.BreadcrumbNavigator.PageTitle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "PageTitle", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_432_BreadcrumbNavigator_PageTitle;
                xamlMember.Setter = set_432_BreadcrumbNavigator_PageTitle;
                break;
            case "WinUICommunity.BreadcrumbNavigator.ClearNavigation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BreadcrumbNavigator");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ClearNavigation", "Boolean");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_433_BreadcrumbNavigator_ClearNavigation;
                xamlMember.Setter = set_433_BreadcrumbNavigator_ClearNavigation;
                break;
            case "CommunityToolkit.WinUI.Controls.PropertySizer.Binding":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.PropertySizer");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Binding", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_434_PropertySizer_Binding;
                xamlMember.Setter = set_434_PropertySizer_Binding;
                break;
            case "CommunityToolkit.WinUI.Controls.PropertySizer.Minimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.PropertySizer");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_435_PropertySizer_Minimum;
                xamlMember.Setter = set_435_PropertySizer_Minimum;
                break;
            case "CommunityToolkit.WinUI.Controls.PropertySizer.IsDragInverted":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.PropertySizer");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsDragInverted", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_436_PropertySizer_IsDragInverted;
                xamlMember.Setter = set_436_PropertySizer_IsDragInverted;
                break;
            case "CommunityToolkit.WinUI.Controls.PropertySizer.Maximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.PropertySizer");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_437_PropertySizer_Maximum;
                xamlMember.Setter = set_437_PropertySizer_Maximum;
                break;
            case "WinUICommunity.BitmapIconSourceExtension.Source":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconSourceExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.Getter = get_438_BitmapIconSourceExtension_Source;
                xamlMember.Setter = set_438_BitmapIconSourceExtension_Source;
                break;
            case "WinUICommunity.BitmapIconSourceExtension.ShowAsMonochrome":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconSourceExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowAsMonochrome", "Boolean");
                xamlMember.Getter = get_439_BitmapIconSourceExtension_ShowAsMonochrome;
                xamlMember.Setter = set_439_BitmapIconSourceExtension_ShowAsMonochrome;
                break;
            case "WinUICommunity.FontIconExtension.Glyph":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.Getter = get_440_FontIconExtension_Glyph;
                xamlMember.Setter = set_440_FontIconExtension_Glyph;
                break;
            case "WinUICommunity.FontIconExtension.GlyphCode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GlyphCode", "WinUICommunity.GlyphCode");
                xamlMember.Getter = get_441_FontIconExtension_GlyphCode;
                xamlMember.Setter = set_441_FontIconExtension_GlyphCode;
                break;
            case "WinUICommunity.FontIconExtension.GlyphName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GlyphName", "WinUICommunity.GlyphName");
                xamlMember.Getter = get_442_FontIconExtension_GlyphName;
                xamlMember.Setter = set_442_FontIconExtension_GlyphName;
                break;
            case "WinUICommunity.FontIconExtension.FontFamily":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.FontIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.Getter = get_443_FontIconExtension_FontFamily;
                xamlMember.Setter = set_443_FontIconExtension_FontFamily;
                break;
            case "WinUICommunity.TextIconExtension.FontSize":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_444_TextIconExtension_FontSize;
                xamlMember.Setter = set_444_TextIconExtension_FontSize;
                break;
            case "WinUICommunity.TextIconExtension.FontWeight":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.Getter = get_445_TextIconExtension_FontWeight;
                xamlMember.Setter = set_445_TextIconExtension_FontWeight;
                break;
            case "WinUICommunity.TextIconExtension.FontStyle":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_446_TextIconExtension_FontStyle;
                xamlMember.Setter = set_446_TextIconExtension_FontStyle;
                break;
            case "WinUICommunity.TextIconExtension.Foreground":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_447_TextIconExtension_Foreground;
                xamlMember.Setter = set_447_TextIconExtension_Foreground;
                break;
            case "WinUICommunity.TextIconExtension.IsTextScaleFactorEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsTextScaleFactorEnabled", "Boolean");
                xamlMember.Getter = get_448_TextIconExtension_IsTextScaleFactorEnabled;
                xamlMember.Setter = set_448_TextIconExtension_IsTextScaleFactorEnabled;
                break;
            case "WinUICommunity.TextIconExtension.MirroredWhenRightToLeft":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.TextIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MirroredWhenRightToLeft", "Boolean");
                xamlMember.Getter = get_449_TextIconExtension_MirroredWhenRightToLeft;
                xamlMember.Setter = set_449_TextIconExtension_MirroredWhenRightToLeft;
                break;
            case "ACOMv2.Views.MainPage.ViewModel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.MainPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewModel", "ACOMv2.ViewModels.MainViewModel");
                xamlMember.Getter = get_450_MainPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_451_ScrollView_Content;
                xamlMember.Setter = set_451_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollBarVisibility":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_452_ScrollView_VerticalScrollBarVisibility;
                xamlMember.Setter = set_452_ScrollView_VerticalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollBarVisibility":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_453_ScrollView_ComputedHorizontalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_454_ScrollView_ComputedHorizontalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollBarVisibility":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_455_ScrollView_ComputedVerticalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_456_ScrollView_ComputedVerticalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ContentOrientation":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContentOrientation", "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_457_ScrollView_ContentOrientation;
                xamlMember.Setter = set_457_ScrollView_ContentOrientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.CurrentAnchor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_458_ScrollView_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExpressionAnimationSources":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ExpressionAnimationSources", "Microsoft.UI.Composition.CompositionPropertySet");
                xamlMember.Getter = get_459_ScrollView_ExpressionAnimationSources;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentHeight":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ExtentHeight", "Double");
                xamlMember.Getter = get_460_ScrollView_ExtentHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ExtentWidth", "Double");
                xamlMember.Getter = get_461_ScrollView_ExtentWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalAnchorRatio":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_462_ScrollView_HorizontalAnchorRatio;
                xamlMember.Setter = set_462_ScrollView_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalOffset":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.Getter = get_463_ScrollView_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollBarVisibility":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_464_ScrollView_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_464_ScrollView_HorizontalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollChainMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_465_ScrollView_HorizontalScrollChainMode;
                xamlMember.Setter = set_465_ScrollView_HorizontalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_466_ScrollView_HorizontalScrollMode;
                xamlMember.Setter = set_466_ScrollView_HorizontalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollRailMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HorizontalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_467_ScrollView_HorizontalScrollRailMode;
                xamlMember.Setter = set_467_ScrollView_HorizontalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.IgnoredInputKinds":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IgnoredInputKinds", "Microsoft.UI.Xaml.Controls.ScrollingInputKinds");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_468_ScrollView_IgnoredInputKinds;
                xamlMember.Setter = set_468_ScrollView_IgnoredInputKinds;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MaxZoomFactor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_469_ScrollView_MaxZoomFactor;
                xamlMember.Setter = set_469_ScrollView_MaxZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MinZoomFactor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MinZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_470_ScrollView_MinZoomFactor;
                xamlMember.Setter = set_470_ScrollView_MinZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollPresenter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScrollPresenter", "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_471_ScrollView_ScrollPresenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_472_ScrollPresenter_Content;
                xamlMember.Setter = set_472_ScrollPresenter_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableHeight":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScrollableHeight", "Double");
                xamlMember.Getter = get_473_ScrollView_ScrollableHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ScrollableWidth", "Double");
                xamlMember.Getter = get_474_ScrollView_ScrollableWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.State":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "State", "Microsoft.UI.Xaml.Controls.ScrollingInteractionState");
                xamlMember.Getter = get_475_ScrollView_State;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalAnchorRatio":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_476_ScrollView_VerticalAnchorRatio;
                xamlMember.Setter = set_476_ScrollView_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalOffset":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.Getter = get_477_ScrollView_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollChainMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_478_ScrollView_VerticalScrollChainMode;
                xamlMember.Setter = set_478_ScrollView_VerticalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_479_ScrollView_VerticalScrollMode;
                xamlMember.Setter = set_479_ScrollView_VerticalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollRailMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "VerticalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_480_ScrollView_VerticalScrollRailMode;
                xamlMember.Setter = set_480_ScrollView_VerticalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportHeight":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewportHeight", "Double");
                xamlMember.Getter = get_481_ScrollView_ViewportHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportWidth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewportWidth", "Double");
                xamlMember.Getter = get_482_ScrollView_ViewportWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomChainMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_483_ScrollView_ZoomChainMode;
                xamlMember.Setter = set_483_ScrollView_ZoomChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomFactor":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Single");
                xamlMember.Getter = get_484_ScrollView_ZoomFactor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomMode":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ZoomMode", "Microsoft.UI.Xaml.Controls.ScrollingZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_485_ScrollView_ZoomMode;
                xamlMember.Setter = set_485_ScrollView_ZoomMode;
                break;
            case "WinUICommunity.PanelAttach.ChildrenTransitions":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.PanelAttach");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ChildrenTransitions", "WinUICommunity.PanelTransitionCollection");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_486_PanelAttach_ChildrenTransitions;
                xamlMember.Setter = set_486_PanelAttach_ChildrenTransitions;
                break;
            case "WinUICommunity.SettingsNavigationAttach.JsonNavigationViewService":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsNavigationAttach");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "JsonNavigationViewService", "WinUICommunity.IJsonNavigationViewService");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_487_SettingsNavigationAttach_JsonNavigationViewService;
                xamlMember.Setter = set_487_SettingsNavigationAttach_JsonNavigationViewService;
                break;
            case "WinUICommunity.SettingsNavigationAttach.SlideNavigationTransitionInfo":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsNavigationAttach");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SlideNavigationTransitionInfo", "Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_488_SettingsNavigationAttach_SlideNavigationTransitionInfo;
                xamlMember.Setter = set_488_SettingsNavigationAttach_SlideNavigationTransitionInfo;
                break;
            case "WinUICommunity.SettingsCard.Description":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_489_SettingsCard_Description;
                xamlMember.Setter = set_489_SettingsCard_Description;
                break;
            case "WinUICommunity.SettingsCard.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_490_SettingsCard_Header;
                xamlMember.Setter = set_490_SettingsCard_Header;
                break;
            case "WinUICommunity.SettingsCard.HeaderIcon":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_491_SettingsCard_HeaderIcon;
                xamlMember.Setter = set_491_SettingsCard_HeaderIcon;
                break;
            case "WinUICommunity.SettingsCard.IsClickEnabled":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsClickEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_492_SettingsCard_IsClickEnabled;
                xamlMember.Setter = set_492_SettingsCard_IsClickEnabled;
                break;
            case "WinUICommunity.SettingsCard.LaunchUri":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LaunchUri", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_493_SettingsCard_LaunchUri;
                xamlMember.Setter = set_493_SettingsCard_LaunchUri;
                break;
            case "WinUICommunity.SettingsCard.ActionIcon":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ActionIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_494_SettingsCard_ActionIcon;
                xamlMember.Setter = set_494_SettingsCard_ActionIcon;
                break;
            case "WinUICommunity.SettingsCard.ActionIconToolTip":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ActionIconToolTip", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_495_SettingsCard_ActionIconToolTip;
                xamlMember.Setter = set_495_SettingsCard_ActionIconToolTip;
                break;
            case "WinUICommunity.SettingsCard.ContentAlignment":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ContentAlignment", "WinUICommunity.ContentAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_496_SettingsCard_ContentAlignment;
                xamlMember.Setter = set_496_SettingsCard_ContentAlignment;
                break;
            case "WinUICommunity.SettingsCard.IsActionIconVisible":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsCard");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsActionIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_497_SettingsCard_IsActionIconVisible;
                xamlMember.Setter = set_497_SettingsCard_IsActionIconVisible;
                break;
            case "WinUICommunity.NavigationHelperEx.NavigateToSetting":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationHelperEx");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NavigateToSetting", "System.Type");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_498_NavigationHelperEx_NavigateToSetting;
                xamlMember.Setter = set_498_NavigationHelperEx_NavigateToSetting;
                break;
            case "WinUICommunity.NavigationHelperEx.NavigateTo":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationHelperEx");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NavigateTo", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_499_NavigationHelperEx_NavigateTo;
                xamlMember.Setter = set_499_NavigationHelperEx_NavigateTo;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_500_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_501_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_501_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_502_NavigationViewItem_Icon;
                xamlMember.Setter = set_502_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_503_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_503_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_504_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_504_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_505_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_505_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_506_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_507_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_507_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_508_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_508_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_509_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_509_NavigationViewItemBase_IsSelected;
                break;
            case "WinUICommunity.NavigationHelperEx.Parent":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.NavigationHelperEx");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_510_NavigationHelperEx_Parent;
                xamlMember.Setter = set_510_NavigationHelperEx_Parent;
                break;
            case "ACOMv2.Views.GeneralSettingPage.ViewModel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.GeneralSettingPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewModel", "ACOMv2.ViewModels.GeneralSettingViewModel");
                xamlMember.Getter = get_511_GeneralSettingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ACOMv2.Views.AppUpdateSettingPage.ViewModel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.AppUpdateSettingPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewModel", "ACOMv2.ViewModels.AppUpdateSettingViewModel");
                xamlMember.Getter = get_512_AppUpdateSettingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "ACOMv2.Views.AboutUsSettingPage.ViewModel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.AboutUsSettingPage");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewModel", "ACOMv2.ViewModels.AboutUsSettingViewModel");
                xamlMember.Getter = get_513_AboutUsSettingPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUICommunity.BitmapIconExtension.Source":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.Getter = get_514_BitmapIconExtension_Source;
                xamlMember.Setter = set_514_BitmapIconExtension_Source;
                break;
            case "WinUICommunity.BitmapIconExtension.ShowAsMonochrome":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.BitmapIconExtension");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ShowAsMonochrome", "Boolean");
                xamlMember.Getter = get_515_BitmapIconExtension_ShowAsMonochrome;
                xamlMember.Setter = set_515_BitmapIconExtension_ShowAsMonochrome;
                break;
            case "WinUICommunity.SettingsExpander.Content":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_516_SettingsExpander_Content;
                xamlMember.Setter = set_516_SettingsExpander_Content;
                break;
            case "WinUICommunity.SettingsExpander.Description":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_517_SettingsExpander_Description;
                xamlMember.Setter = set_517_SettingsExpander_Description;
                break;
            case "WinUICommunity.SettingsExpander.Header":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_518_SettingsExpander_Header;
                xamlMember.Setter = set_518_SettingsExpander_Header;
                break;
            case "WinUICommunity.SettingsExpander.HeaderIcon":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HeaderIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_519_SettingsExpander_HeaderIcon;
                xamlMember.Setter = set_519_SettingsExpander_HeaderIcon;
                break;
            case "WinUICommunity.SettingsExpander.IsExpanded":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_520_SettingsExpander_IsExpanded;
                xamlMember.Setter = set_520_SettingsExpander_IsExpanded;
                break;
            case "WinUICommunity.SettingsExpander.Items":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_521_SettingsExpander_Items;
                xamlMember.Setter = set_521_SettingsExpander_Items;
                break;
            case "WinUICommunity.SettingsExpander.ItemsSource":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_522_SettingsExpander_ItemsSource;
                xamlMember.Setter = set_522_SettingsExpander_ItemsSource;
                break;
            case "WinUICommunity.SettingsExpander.ItemTemplate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_523_SettingsExpander_ItemTemplate;
                xamlMember.Setter = set_523_SettingsExpander_ItemTemplate;
                break;
            case "WinUICommunity.SettingsExpander.ItemContainerStyleSelector":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_524_SettingsExpander_ItemContainerStyleSelector;
                xamlMember.Setter = set_524_SettingsExpander_ItemContainerStyleSelector;
                break;
            case "WinUICommunity.SettingsExpander.ItemsHeader":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemsHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_525_SettingsExpander_ItemsHeader;
                xamlMember.Setter = set_525_SettingsExpander_ItemsHeader;
                break;
            case "WinUICommunity.SettingsExpander.ItemsFooter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.SettingsExpander");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ItemsFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_526_SettingsExpander_ItemsFooter;
                xamlMember.Setter = set_526_SettingsExpander_ItemsFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_527_ProgressRing_IsActive;
                xamlMember.Setter = set_527_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_528_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_528_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_529_ProgressRing_Maximum;
                xamlMember.Setter = set_529_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_530_ProgressRing_Minimum;
                xamlMember.Setter = set_530_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_531_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_532_ProgressRing_Value;
                xamlMember.Setter = set_532_ProgressRing_Value;
                break;
            case "WinUICommunity.ThemeServiceAttach.ThemeService":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUICommunity.ThemeServiceAttach");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ThemeService", "WinUICommunity.IThemeService");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_533_ThemeServiceAttach_ThemeService;
                xamlMember.Setter = set_533_ThemeServiceAttach_ThemeService;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_534_Interaction_Behaviors;
                xamlMember.Setter = set_534_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactivity.Trigger.Actions":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_535_Trigger_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_536_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_536_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_537_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_537_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Microsoft.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_538_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_539_InvokeCommandAction_Command;
                xamlMember.Setter = set_539_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_540_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_540_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "InputConverter", "Microsoft.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_541_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_541_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_542_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_542_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_543_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_543_InvokeCommandAction_InputConverterLanguage;
                break;
            case "ACOMv2.Views.BreadcrumbBarUserControl.Items":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.BreadcrumbBarUserControl");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.List`1<String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_544_BreadcrumbBarUserControl_Items;
                xamlMember.Setter = set_544_BreadcrumbBarUserControl_Items;
                break;
            case "ACOMv2.Views.BreadcrumbBarUserControl.SingleItem":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.BreadcrumbBarUserControl");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "SingleItem", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_545_BreadcrumbBarUserControl_SingleItem;
                xamlMember.Setter = set_545_BreadcrumbBarUserControl_SingleItem;
                break;
            case "ACOMv2.Views.BreadcrumbBarUserControl.ViewModel":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ACOMv2.Views.BreadcrumbBarUserControl");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "ViewModel", "ACOMv2.ViewModels.BreadCrumbBarViewModel");
                xamlMember.Getter = get_546_BreadcrumbBarUserControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_547_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_548_TreeViewNode_Content;
                xamlMember.Setter = set_548_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_549_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_550_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_551_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_551_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_552_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_552_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_553_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.TrueValue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "TrueValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_554_DoubleToObjectConverter_TrueValue;
                xamlMember.Setter = set_554_DoubleToObjectConverter_TrueValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.FalseValue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "FalseValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_555_DoubleToObjectConverter_FalseValue;
                xamlMember.Setter = set_555_DoubleToObjectConverter_FalseValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.NullValue":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "NullValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_556_DoubleToObjectConverter_NullValue;
                xamlMember.Setter = set_556_DoubleToObjectConverter_NullValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.GreaterThan":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "GreaterThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_557_DoubleToObjectConverter_GreaterThan;
                xamlMember.Setter = set_557_DoubleToObjectConverter_GreaterThan;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.LessThan":
                userType = (global::ACOMv2.ACOMv2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::ACOMv2.ACOMv2_XamlTypeInfo.XamlMember(this, "LessThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_558_DoubleToObjectConverter_LessThan;
                xamlMember.Setter = set_558_DoubleToObjectConverter_LessThan;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::ACOMv2.ACOMv2_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::ACOMv2.ACOMv2_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

